
DIO_nti.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005c6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000182  00800060  00005c6e  00005ce2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003fcc  00000000  00000000  00005e64  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000019a7  00000000  00000000  00009e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  0000b7d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000214  00000000  00000000  0000b997  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002612  00000000  00000000  0000bbab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014ce  00000000  00000000  0000e1bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000130b  00000000  00000000  0000f68b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  00010998  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000307  00000000  00000000  00010b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a1a  00000000  00000000  00010e7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00011899  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e6       	ldi	r30, 0x6E	; 110
      68:	fc e5       	ldi	r31, 0x5C	; 92
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3e       	cpi	r26, 0xE2	; 226
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 b6 2d 	call	0x5b6c	; 0x5b6c <main>
      7a:	0c 94 35 2e 	jmp	0x5c6a	; 0x5c6a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ab 04 	call	0x956	; 0x956 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ab 04 	call	0x956	; 0x956 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 fe 2d 	jmp	0x5bfc	; 0x5bfc <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 1a 2e 	jmp	0x5c34	; 0x5c34 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 26 2e 	jmp	0x5c4c	; 0x5c4c <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 26 2e 	jmp	0x5c4c	; 0x5c4c <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 fe 2d 	jmp	0x5bfc	; 0x5bfc <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 1a 2e 	jmp	0x5c34	; 0x5c34 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 06 2e 	jmp	0x5c0c	; 0x5c0c <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 22 2e 	jmp	0x5c44	; 0x5c44 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 26 2e 	jmp	0x5c4c	; 0x5c4c <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 26 2e 	jmp	0x5c4c	; 0x5c4c <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 26 2e 	jmp	0x5c4c	; 0x5c4c <__epilogue_restores__+0x18>

0000089a <__floatsisf>:
     89a:	a8 e0       	ldi	r26, 0x08	; 8
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 07 2e 	jmp	0x5c0e	; 0x5c0e <__prologue_saves__+0x12>
     8a6:	9b 01       	movw	r18, r22
     8a8:	ac 01       	movw	r20, r24
     8aa:	83 e0       	ldi	r24, 0x03	; 3
     8ac:	89 83       	std	Y+1, r24	; 0x01
     8ae:	da 01       	movw	r26, r20
     8b0:	c9 01       	movw	r24, r18
     8b2:	88 27       	eor	r24, r24
     8b4:	b7 fd       	sbrc	r27, 7
     8b6:	83 95       	inc	r24
     8b8:	99 27       	eor	r25, r25
     8ba:	aa 27       	eor	r26, r26
     8bc:	bb 27       	eor	r27, r27
     8be:	b8 2e       	mov	r11, r24
     8c0:	21 15       	cp	r18, r1
     8c2:	31 05       	cpc	r19, r1
     8c4:	41 05       	cpc	r20, r1
     8c6:	51 05       	cpc	r21, r1
     8c8:	19 f4       	brne	.+6      	; 0x8d0 <__floatsisf+0x36>
     8ca:	82 e0       	ldi	r24, 0x02	; 2
     8cc:	89 83       	std	Y+1, r24	; 0x01
     8ce:	3a c0       	rjmp	.+116    	; 0x944 <__floatsisf+0xaa>
     8d0:	88 23       	and	r24, r24
     8d2:	a9 f0       	breq	.+42     	; 0x8fe <__floatsisf+0x64>
     8d4:	20 30       	cpi	r18, 0x00	; 0
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	38 07       	cpc	r19, r24
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	48 07       	cpc	r20, r24
     8de:	80 e8       	ldi	r24, 0x80	; 128
     8e0:	58 07       	cpc	r21, r24
     8e2:	29 f4       	brne	.+10     	; 0x8ee <__floatsisf+0x54>
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	9f ec       	ldi	r25, 0xCF	; 207
     8ec:	30 c0       	rjmp	.+96     	; 0x94e <__floatsisf+0xb4>
     8ee:	ee 24       	eor	r14, r14
     8f0:	ff 24       	eor	r15, r15
     8f2:	87 01       	movw	r16, r14
     8f4:	e2 1a       	sub	r14, r18
     8f6:	f3 0a       	sbc	r15, r19
     8f8:	04 0b       	sbc	r16, r20
     8fa:	15 0b       	sbc	r17, r21
     8fc:	02 c0       	rjmp	.+4      	; 0x902 <__floatsisf+0x68>
     8fe:	79 01       	movw	r14, r18
     900:	8a 01       	movw	r16, r20
     902:	8e e1       	ldi	r24, 0x1E	; 30
     904:	c8 2e       	mov	r12, r24
     906:	d1 2c       	mov	r13, r1
     908:	dc 82       	std	Y+4, r13	; 0x04
     90a:	cb 82       	std	Y+3, r12	; 0x03
     90c:	ed 82       	std	Y+5, r14	; 0x05
     90e:	fe 82       	std	Y+6, r15	; 0x06
     910:	0f 83       	std	Y+7, r16	; 0x07
     912:	18 87       	std	Y+8, r17	; 0x08
     914:	c8 01       	movw	r24, r16
     916:	b7 01       	movw	r22, r14
     918:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__clzsi2>
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	18 16       	cp	r1, r24
     920:	19 06       	cpc	r1, r25
     922:	84 f4       	brge	.+32     	; 0x944 <__floatsisf+0xaa>
     924:	08 2e       	mov	r0, r24
     926:	04 c0       	rjmp	.+8      	; 0x930 <__floatsisf+0x96>
     928:	ee 0c       	add	r14, r14
     92a:	ff 1c       	adc	r15, r15
     92c:	00 1f       	adc	r16, r16
     92e:	11 1f       	adc	r17, r17
     930:	0a 94       	dec	r0
     932:	d2 f7       	brpl	.-12     	; 0x928 <__floatsisf+0x8e>
     934:	ed 82       	std	Y+5, r14	; 0x05
     936:	fe 82       	std	Y+6, r15	; 0x06
     938:	0f 83       	std	Y+7, r16	; 0x07
     93a:	18 87       	std	Y+8, r17	; 0x08
     93c:	c8 1a       	sub	r12, r24
     93e:	d9 0a       	sbc	r13, r25
     940:	dc 82       	std	Y+4, r13	; 0x04
     942:	cb 82       	std	Y+3, r12	; 0x03
     944:	ba 82       	std	Y+2, r11	; 0x02
     946:	ce 01       	movw	r24, r28
     948:	01 96       	adiw	r24, 0x01	; 1
     94a:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     94e:	28 96       	adiw	r28, 0x08	; 8
     950:	e9 e0       	ldi	r30, 0x09	; 9
     952:	0c 94 23 2e 	jmp	0x5c46	; 0x5c46 <__epilogue_restores__+0x12>

00000956 <__fixsfsi>:
     956:	ac e0       	ldi	r26, 0x0C	; 12
     958:	b0 e0       	ldi	r27, 0x00	; 0
     95a:	e1 eb       	ldi	r30, 0xB1	; 177
     95c:	f4 e0       	ldi	r31, 0x04	; 4
     95e:	0c 94 0e 2e 	jmp	0x5c1c	; 0x5c1c <__prologue_saves__+0x20>
     962:	69 83       	std	Y+1, r22	; 0x01
     964:	7a 83       	std	Y+2, r23	; 0x02
     966:	8b 83       	std	Y+3, r24	; 0x03
     968:	9c 83       	std	Y+4, r25	; 0x04
     96a:	ce 01       	movw	r24, r28
     96c:	01 96       	adiw	r24, 0x01	; 1
     96e:	be 01       	movw	r22, r28
     970:	6b 5f       	subi	r22, 0xFB	; 251
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     978:	8d 81       	ldd	r24, Y+5	; 0x05
     97a:	82 30       	cpi	r24, 0x02	; 2
     97c:	61 f1       	breq	.+88     	; 0x9d6 <__fixsfsi+0x80>
     97e:	82 30       	cpi	r24, 0x02	; 2
     980:	50 f1       	brcs	.+84     	; 0x9d6 <__fixsfsi+0x80>
     982:	84 30       	cpi	r24, 0x04	; 4
     984:	21 f4       	brne	.+8      	; 0x98e <__fixsfsi+0x38>
     986:	8e 81       	ldd	r24, Y+6	; 0x06
     988:	88 23       	and	r24, r24
     98a:	51 f1       	breq	.+84     	; 0x9e0 <__fixsfsi+0x8a>
     98c:	2e c0       	rjmp	.+92     	; 0x9ea <__fixsfsi+0x94>
     98e:	2f 81       	ldd	r18, Y+7	; 0x07
     990:	38 85       	ldd	r19, Y+8	; 0x08
     992:	37 fd       	sbrc	r19, 7
     994:	20 c0       	rjmp	.+64     	; 0x9d6 <__fixsfsi+0x80>
     996:	6e 81       	ldd	r22, Y+6	; 0x06
     998:	2f 31       	cpi	r18, 0x1F	; 31
     99a:	31 05       	cpc	r19, r1
     99c:	1c f0       	brlt	.+6      	; 0x9a4 <__fixsfsi+0x4e>
     99e:	66 23       	and	r22, r22
     9a0:	f9 f0       	breq	.+62     	; 0x9e0 <__fixsfsi+0x8a>
     9a2:	23 c0       	rjmp	.+70     	; 0x9ea <__fixsfsi+0x94>
     9a4:	8e e1       	ldi	r24, 0x1E	; 30
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	82 1b       	sub	r24, r18
     9aa:	93 0b       	sbc	r25, r19
     9ac:	29 85       	ldd	r18, Y+9	; 0x09
     9ae:	3a 85       	ldd	r19, Y+10	; 0x0a
     9b0:	4b 85       	ldd	r20, Y+11	; 0x0b
     9b2:	5c 85       	ldd	r21, Y+12	; 0x0c
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <__fixsfsi+0x68>
     9b6:	56 95       	lsr	r21
     9b8:	47 95       	ror	r20
     9ba:	37 95       	ror	r19
     9bc:	27 95       	ror	r18
     9be:	8a 95       	dec	r24
     9c0:	d2 f7       	brpl	.-12     	; 0x9b6 <__fixsfsi+0x60>
     9c2:	66 23       	and	r22, r22
     9c4:	b1 f0       	breq	.+44     	; 0x9f2 <__fixsfsi+0x9c>
     9c6:	50 95       	com	r21
     9c8:	40 95       	com	r20
     9ca:	30 95       	com	r19
     9cc:	21 95       	neg	r18
     9ce:	3f 4f       	sbci	r19, 0xFF	; 255
     9d0:	4f 4f       	sbci	r20, 0xFF	; 255
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	0e c0       	rjmp	.+28     	; 0x9f2 <__fixsfsi+0x9c>
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	09 c0       	rjmp	.+18     	; 0x9f2 <__fixsfsi+0x9c>
     9e0:	2f ef       	ldi	r18, 0xFF	; 255
     9e2:	3f ef       	ldi	r19, 0xFF	; 255
     9e4:	4f ef       	ldi	r20, 0xFF	; 255
     9e6:	5f e7       	ldi	r21, 0x7F	; 127
     9e8:	04 c0       	rjmp	.+8      	; 0x9f2 <__fixsfsi+0x9c>
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	40 e0       	ldi	r20, 0x00	; 0
     9f0:	50 e8       	ldi	r21, 0x80	; 128
     9f2:	b9 01       	movw	r22, r18
     9f4:	ca 01       	movw	r24, r20
     9f6:	2c 96       	adiw	r28, 0x0c	; 12
     9f8:	e2 e0       	ldi	r30, 0x02	; 2
     9fa:	0c 94 2a 2e 	jmp	0x5c54	; 0x5c54 <__epilogue_restores__+0x20>

000009fe <__floatunsisf>:
     9fe:	a8 e0       	ldi	r26, 0x08	; 8
     a00:	b0 e0       	ldi	r27, 0x00	; 0
     a02:	e5 e0       	ldi	r30, 0x05	; 5
     a04:	f5 e0       	ldi	r31, 0x05	; 5
     a06:	0c 94 06 2e 	jmp	0x5c0c	; 0x5c0c <__prologue_saves__+0x10>
     a0a:	7b 01       	movw	r14, r22
     a0c:	8c 01       	movw	r16, r24
     a0e:	61 15       	cp	r22, r1
     a10:	71 05       	cpc	r23, r1
     a12:	81 05       	cpc	r24, r1
     a14:	91 05       	cpc	r25, r1
     a16:	19 f4       	brne	.+6      	; 0xa1e <__floatunsisf+0x20>
     a18:	82 e0       	ldi	r24, 0x02	; 2
     a1a:	89 83       	std	Y+1, r24	; 0x01
     a1c:	60 c0       	rjmp	.+192    	; 0xade <__floatunsisf+0xe0>
     a1e:	83 e0       	ldi	r24, 0x03	; 3
     a20:	89 83       	std	Y+1, r24	; 0x01
     a22:	8e e1       	ldi	r24, 0x1E	; 30
     a24:	c8 2e       	mov	r12, r24
     a26:	d1 2c       	mov	r13, r1
     a28:	dc 82       	std	Y+4, r13	; 0x04
     a2a:	cb 82       	std	Y+3, r12	; 0x03
     a2c:	ed 82       	std	Y+5, r14	; 0x05
     a2e:	fe 82       	std	Y+6, r15	; 0x06
     a30:	0f 83       	std	Y+7, r16	; 0x07
     a32:	18 87       	std	Y+8, r17	; 0x08
     a34:	c8 01       	movw	r24, r16
     a36:	b7 01       	movw	r22, r14
     a38:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__clzsi2>
     a3c:	fc 01       	movw	r30, r24
     a3e:	31 97       	sbiw	r30, 0x01	; 1
     a40:	f7 ff       	sbrs	r31, 7
     a42:	3b c0       	rjmp	.+118    	; 0xaba <__floatunsisf+0xbc>
     a44:	22 27       	eor	r18, r18
     a46:	33 27       	eor	r19, r19
     a48:	2e 1b       	sub	r18, r30
     a4a:	3f 0b       	sbc	r19, r31
     a4c:	57 01       	movw	r10, r14
     a4e:	68 01       	movw	r12, r16
     a50:	02 2e       	mov	r0, r18
     a52:	04 c0       	rjmp	.+8      	; 0xa5c <__floatunsisf+0x5e>
     a54:	d6 94       	lsr	r13
     a56:	c7 94       	ror	r12
     a58:	b7 94       	ror	r11
     a5a:	a7 94       	ror	r10
     a5c:	0a 94       	dec	r0
     a5e:	d2 f7       	brpl	.-12     	; 0xa54 <__floatunsisf+0x56>
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	70 e0       	ldi	r23, 0x00	; 0
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	a0 e0       	ldi	r26, 0x00	; 0
     a6e:	b0 e0       	ldi	r27, 0x00	; 0
     a70:	04 c0       	rjmp	.+8      	; 0xa7a <__floatunsisf+0x7c>
     a72:	88 0f       	add	r24, r24
     a74:	99 1f       	adc	r25, r25
     a76:	aa 1f       	adc	r26, r26
     a78:	bb 1f       	adc	r27, r27
     a7a:	2a 95       	dec	r18
     a7c:	d2 f7       	brpl	.-12     	; 0xa72 <__floatunsisf+0x74>
     a7e:	01 97       	sbiw	r24, 0x01	; 1
     a80:	a1 09       	sbc	r26, r1
     a82:	b1 09       	sbc	r27, r1
     a84:	8e 21       	and	r24, r14
     a86:	9f 21       	and	r25, r15
     a88:	a0 23       	and	r26, r16
     a8a:	b1 23       	and	r27, r17
     a8c:	00 97       	sbiw	r24, 0x00	; 0
     a8e:	a1 05       	cpc	r26, r1
     a90:	b1 05       	cpc	r27, r1
     a92:	21 f0       	breq	.+8      	; 0xa9c <__floatunsisf+0x9e>
     a94:	41 e0       	ldi	r20, 0x01	; 1
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	4a 29       	or	r20, r10
     a9e:	5b 29       	or	r21, r11
     aa0:	6c 29       	or	r22, r12
     aa2:	7d 29       	or	r23, r13
     aa4:	4d 83       	std	Y+5, r20	; 0x05
     aa6:	5e 83       	std	Y+6, r21	; 0x06
     aa8:	6f 83       	std	Y+7, r22	; 0x07
     aaa:	78 87       	std	Y+8, r23	; 0x08
     aac:	8e e1       	ldi	r24, 0x1E	; 30
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	8e 1b       	sub	r24, r30
     ab2:	9f 0b       	sbc	r25, r31
     ab4:	9c 83       	std	Y+4, r25	; 0x04
     ab6:	8b 83       	std	Y+3, r24	; 0x03
     ab8:	12 c0       	rjmp	.+36     	; 0xade <__floatunsisf+0xe0>
     aba:	30 97       	sbiw	r30, 0x00	; 0
     abc:	81 f0       	breq	.+32     	; 0xade <__floatunsisf+0xe0>
     abe:	0e 2e       	mov	r0, r30
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <__floatunsisf+0xcc>
     ac2:	ee 0c       	add	r14, r14
     ac4:	ff 1c       	adc	r15, r15
     ac6:	00 1f       	adc	r16, r16
     ac8:	11 1f       	adc	r17, r17
     aca:	0a 94       	dec	r0
     acc:	d2 f7       	brpl	.-12     	; 0xac2 <__floatunsisf+0xc4>
     ace:	ed 82       	std	Y+5, r14	; 0x05
     ad0:	fe 82       	std	Y+6, r15	; 0x06
     ad2:	0f 83       	std	Y+7, r16	; 0x07
     ad4:	18 87       	std	Y+8, r17	; 0x08
     ad6:	ce 1a       	sub	r12, r30
     ad8:	df 0a       	sbc	r13, r31
     ada:	dc 82       	std	Y+4, r13	; 0x04
     adc:	cb 82       	std	Y+3, r12	; 0x03
     ade:	1a 82       	std	Y+2, r1	; 0x02
     ae0:	ce 01       	movw	r24, r28
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     ae8:	28 96       	adiw	r28, 0x08	; 8
     aea:	ea e0       	ldi	r30, 0x0A	; 10
     aec:	0c 94 22 2e 	jmp	0x5c44	; 0x5c44 <__epilogue_restores__+0x10>

00000af0 <__clzsi2>:
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	7b 01       	movw	r14, r22
     afa:	8c 01       	movw	r16, r24
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	e8 16       	cp	r14, r24
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	f8 06       	cpc	r15, r24
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	08 07       	cpc	r16, r24
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	18 07       	cpc	r17, r24
     b0c:	88 f4       	brcc	.+34     	; 0xb30 <__clzsi2+0x40>
     b0e:	8f ef       	ldi	r24, 0xFF	; 255
     b10:	e8 16       	cp	r14, r24
     b12:	f1 04       	cpc	r15, r1
     b14:	01 05       	cpc	r16, r1
     b16:	11 05       	cpc	r17, r1
     b18:	31 f0       	breq	.+12     	; 0xb26 <__clzsi2+0x36>
     b1a:	28 f0       	brcs	.+10     	; 0xb26 <__clzsi2+0x36>
     b1c:	88 e0       	ldi	r24, 0x08	; 8
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	a0 e0       	ldi	r26, 0x00	; 0
     b22:	b0 e0       	ldi	r27, 0x00	; 0
     b24:	17 c0       	rjmp	.+46     	; 0xb54 <__clzsi2+0x64>
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	a0 e0       	ldi	r26, 0x00	; 0
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	12 c0       	rjmp	.+36     	; 0xb54 <__clzsi2+0x64>
     b30:	80 e0       	ldi	r24, 0x00	; 0
     b32:	e8 16       	cp	r14, r24
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	f8 06       	cpc	r15, r24
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	08 07       	cpc	r16, r24
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	18 07       	cpc	r17, r24
     b40:	28 f0       	brcs	.+10     	; 0xb4c <__clzsi2+0x5c>
     b42:	88 e1       	ldi	r24, 0x18	; 24
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	a0 e0       	ldi	r26, 0x00	; 0
     b48:	b0 e0       	ldi	r27, 0x00	; 0
     b4a:	04 c0       	rjmp	.+8      	; 0xb54 <__clzsi2+0x64>
     b4c:	80 e1       	ldi	r24, 0x10	; 16
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	a0 e0       	ldi	r26, 0x00	; 0
     b52:	b0 e0       	ldi	r27, 0x00	; 0
     b54:	20 e2       	ldi	r18, 0x20	; 32
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	40 e0       	ldi	r20, 0x00	; 0
     b5a:	50 e0       	ldi	r21, 0x00	; 0
     b5c:	28 1b       	sub	r18, r24
     b5e:	39 0b       	sbc	r19, r25
     b60:	4a 0b       	sbc	r20, r26
     b62:	5b 0b       	sbc	r21, r27
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__clzsi2+0x7e>
     b66:	16 95       	lsr	r17
     b68:	07 95       	ror	r16
     b6a:	f7 94       	ror	r15
     b6c:	e7 94       	ror	r14
     b6e:	8a 95       	dec	r24
     b70:	d2 f7       	brpl	.-12     	; 0xb66 <__clzsi2+0x76>
     b72:	f7 01       	movw	r30, r14
     b74:	e8 59       	subi	r30, 0x98	; 152
     b76:	ff 4f       	sbci	r31, 0xFF	; 255
     b78:	80 81       	ld	r24, Z
     b7a:	28 1b       	sub	r18, r24
     b7c:	31 09       	sbc	r19, r1
     b7e:	41 09       	sbc	r20, r1
     b80:	51 09       	sbc	r21, r1
     b82:	c9 01       	movw	r24, r18
     b84:	1f 91       	pop	r17
     b86:	0f 91       	pop	r16
     b88:	ff 90       	pop	r15
     b8a:	ef 90       	pop	r14
     b8c:	08 95       	ret

00000b8e <__pack_f>:
     b8e:	df 92       	push	r13
     b90:	ef 92       	push	r14
     b92:	ff 92       	push	r15
     b94:	0f 93       	push	r16
     b96:	1f 93       	push	r17
     b98:	fc 01       	movw	r30, r24
     b9a:	e4 80       	ldd	r14, Z+4	; 0x04
     b9c:	f5 80       	ldd	r15, Z+5	; 0x05
     b9e:	06 81       	ldd	r16, Z+6	; 0x06
     ba0:	17 81       	ldd	r17, Z+7	; 0x07
     ba2:	d1 80       	ldd	r13, Z+1	; 0x01
     ba4:	80 81       	ld	r24, Z
     ba6:	82 30       	cpi	r24, 0x02	; 2
     ba8:	48 f4       	brcc	.+18     	; 0xbbc <__pack_f+0x2e>
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	a0 e1       	ldi	r26, 0x10	; 16
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	e8 2a       	or	r14, r24
     bb4:	f9 2a       	or	r15, r25
     bb6:	0a 2b       	or	r16, r26
     bb8:	1b 2b       	or	r17, r27
     bba:	a5 c0       	rjmp	.+330    	; 0xd06 <__pack_f+0x178>
     bbc:	84 30       	cpi	r24, 0x04	; 4
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <__pack_f+0x34>
     bc0:	9f c0       	rjmp	.+318    	; 0xd00 <__pack_f+0x172>
     bc2:	82 30       	cpi	r24, 0x02	; 2
     bc4:	21 f4       	brne	.+8      	; 0xbce <__pack_f+0x40>
     bc6:	ee 24       	eor	r14, r14
     bc8:	ff 24       	eor	r15, r15
     bca:	87 01       	movw	r16, r14
     bcc:	05 c0       	rjmp	.+10     	; 0xbd8 <__pack_f+0x4a>
     bce:	e1 14       	cp	r14, r1
     bd0:	f1 04       	cpc	r15, r1
     bd2:	01 05       	cpc	r16, r1
     bd4:	11 05       	cpc	r17, r1
     bd6:	19 f4       	brne	.+6      	; 0xbde <__pack_f+0x50>
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	96 c0       	rjmp	.+300    	; 0xd0a <__pack_f+0x17c>
     bde:	62 81       	ldd	r22, Z+2	; 0x02
     be0:	73 81       	ldd	r23, Z+3	; 0x03
     be2:	9f ef       	ldi	r25, 0xFF	; 255
     be4:	62 38       	cpi	r22, 0x82	; 130
     be6:	79 07       	cpc	r23, r25
     be8:	0c f0       	brlt	.+2      	; 0xbec <__pack_f+0x5e>
     bea:	5b c0       	rjmp	.+182    	; 0xca2 <__pack_f+0x114>
     bec:	22 e8       	ldi	r18, 0x82	; 130
     bee:	3f ef       	ldi	r19, 0xFF	; 255
     bf0:	26 1b       	sub	r18, r22
     bf2:	37 0b       	sbc	r19, r23
     bf4:	2a 31       	cpi	r18, 0x1A	; 26
     bf6:	31 05       	cpc	r19, r1
     bf8:	2c f0       	brlt	.+10     	; 0xc04 <__pack_f+0x76>
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	50 e0       	ldi	r21, 0x00	; 0
     c02:	2a c0       	rjmp	.+84     	; 0xc58 <__pack_f+0xca>
     c04:	b8 01       	movw	r22, r16
     c06:	a7 01       	movw	r20, r14
     c08:	02 2e       	mov	r0, r18
     c0a:	04 c0       	rjmp	.+8      	; 0xc14 <__pack_f+0x86>
     c0c:	76 95       	lsr	r23
     c0e:	67 95       	ror	r22
     c10:	57 95       	ror	r21
     c12:	47 95       	ror	r20
     c14:	0a 94       	dec	r0
     c16:	d2 f7       	brpl	.-12     	; 0xc0c <__pack_f+0x7e>
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	a0 e0       	ldi	r26, 0x00	; 0
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	04 c0       	rjmp	.+8      	; 0xc2a <__pack_f+0x9c>
     c22:	88 0f       	add	r24, r24
     c24:	99 1f       	adc	r25, r25
     c26:	aa 1f       	adc	r26, r26
     c28:	bb 1f       	adc	r27, r27
     c2a:	2a 95       	dec	r18
     c2c:	d2 f7       	brpl	.-12     	; 0xc22 <__pack_f+0x94>
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	a1 09       	sbc	r26, r1
     c32:	b1 09       	sbc	r27, r1
     c34:	8e 21       	and	r24, r14
     c36:	9f 21       	and	r25, r15
     c38:	a0 23       	and	r26, r16
     c3a:	b1 23       	and	r27, r17
     c3c:	00 97       	sbiw	r24, 0x00	; 0
     c3e:	a1 05       	cpc	r26, r1
     c40:	b1 05       	cpc	r27, r1
     c42:	21 f0       	breq	.+8      	; 0xc4c <__pack_f+0xbe>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	a0 e0       	ldi	r26, 0x00	; 0
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	9a 01       	movw	r18, r20
     c4e:	ab 01       	movw	r20, r22
     c50:	28 2b       	or	r18, r24
     c52:	39 2b       	or	r19, r25
     c54:	4a 2b       	or	r20, r26
     c56:	5b 2b       	or	r21, r27
     c58:	da 01       	movw	r26, r20
     c5a:	c9 01       	movw	r24, r18
     c5c:	8f 77       	andi	r24, 0x7F	; 127
     c5e:	90 70       	andi	r25, 0x00	; 0
     c60:	a0 70       	andi	r26, 0x00	; 0
     c62:	b0 70       	andi	r27, 0x00	; 0
     c64:	80 34       	cpi	r24, 0x40	; 64
     c66:	91 05       	cpc	r25, r1
     c68:	a1 05       	cpc	r26, r1
     c6a:	b1 05       	cpc	r27, r1
     c6c:	39 f4       	brne	.+14     	; 0xc7c <__pack_f+0xee>
     c6e:	27 ff       	sbrs	r18, 7
     c70:	09 c0       	rjmp	.+18     	; 0xc84 <__pack_f+0xf6>
     c72:	20 5c       	subi	r18, 0xC0	; 192
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	4f 4f       	sbci	r20, 0xFF	; 255
     c78:	5f 4f       	sbci	r21, 0xFF	; 255
     c7a:	04 c0       	rjmp	.+8      	; 0xc84 <__pack_f+0xf6>
     c7c:	21 5c       	subi	r18, 0xC1	; 193
     c7e:	3f 4f       	sbci	r19, 0xFF	; 255
     c80:	4f 4f       	sbci	r20, 0xFF	; 255
     c82:	5f 4f       	sbci	r21, 0xFF	; 255
     c84:	e0 e0       	ldi	r30, 0x00	; 0
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	20 30       	cpi	r18, 0x00	; 0
     c8a:	a0 e0       	ldi	r26, 0x00	; 0
     c8c:	3a 07       	cpc	r19, r26
     c8e:	a0 e0       	ldi	r26, 0x00	; 0
     c90:	4a 07       	cpc	r20, r26
     c92:	a0 e4       	ldi	r26, 0x40	; 64
     c94:	5a 07       	cpc	r21, r26
     c96:	10 f0       	brcs	.+4      	; 0xc9c <__pack_f+0x10e>
     c98:	e1 e0       	ldi	r30, 0x01	; 1
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	79 01       	movw	r14, r18
     c9e:	8a 01       	movw	r16, r20
     ca0:	27 c0       	rjmp	.+78     	; 0xcf0 <__pack_f+0x162>
     ca2:	60 38       	cpi	r22, 0x80	; 128
     ca4:	71 05       	cpc	r23, r1
     ca6:	64 f5       	brge	.+88     	; 0xd00 <__pack_f+0x172>
     ca8:	fb 01       	movw	r30, r22
     caa:	e1 58       	subi	r30, 0x81	; 129
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	d8 01       	movw	r26, r16
     cb0:	c7 01       	movw	r24, r14
     cb2:	8f 77       	andi	r24, 0x7F	; 127
     cb4:	90 70       	andi	r25, 0x00	; 0
     cb6:	a0 70       	andi	r26, 0x00	; 0
     cb8:	b0 70       	andi	r27, 0x00	; 0
     cba:	80 34       	cpi	r24, 0x40	; 64
     cbc:	91 05       	cpc	r25, r1
     cbe:	a1 05       	cpc	r26, r1
     cc0:	b1 05       	cpc	r27, r1
     cc2:	39 f4       	brne	.+14     	; 0xcd2 <__pack_f+0x144>
     cc4:	e7 fe       	sbrs	r14, 7
     cc6:	0d c0       	rjmp	.+26     	; 0xce2 <__pack_f+0x154>
     cc8:	80 e4       	ldi	r24, 0x40	; 64
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	a0 e0       	ldi	r26, 0x00	; 0
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <__pack_f+0x14c>
     cd2:	8f e3       	ldi	r24, 0x3F	; 63
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	a0 e0       	ldi	r26, 0x00	; 0
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e8 0e       	add	r14, r24
     cdc:	f9 1e       	adc	r15, r25
     cde:	0a 1f       	adc	r16, r26
     ce0:	1b 1f       	adc	r17, r27
     ce2:	17 ff       	sbrs	r17, 7
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <__pack_f+0x162>
     ce6:	16 95       	lsr	r17
     ce8:	07 95       	ror	r16
     cea:	f7 94       	ror	r15
     cec:	e7 94       	ror	r14
     cee:	31 96       	adiw	r30, 0x01	; 1
     cf0:	87 e0       	ldi	r24, 0x07	; 7
     cf2:	16 95       	lsr	r17
     cf4:	07 95       	ror	r16
     cf6:	f7 94       	ror	r15
     cf8:	e7 94       	ror	r14
     cfa:	8a 95       	dec	r24
     cfc:	d1 f7       	brne	.-12     	; 0xcf2 <__pack_f+0x164>
     cfe:	05 c0       	rjmp	.+10     	; 0xd0a <__pack_f+0x17c>
     d00:	ee 24       	eor	r14, r14
     d02:	ff 24       	eor	r15, r15
     d04:	87 01       	movw	r16, r14
     d06:	ef ef       	ldi	r30, 0xFF	; 255
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	6e 2f       	mov	r22, r30
     d0c:	67 95       	ror	r22
     d0e:	66 27       	eor	r22, r22
     d10:	67 95       	ror	r22
     d12:	90 2f       	mov	r25, r16
     d14:	9f 77       	andi	r25, 0x7F	; 127
     d16:	d7 94       	ror	r13
     d18:	dd 24       	eor	r13, r13
     d1a:	d7 94       	ror	r13
     d1c:	8e 2f       	mov	r24, r30
     d1e:	86 95       	lsr	r24
     d20:	49 2f       	mov	r20, r25
     d22:	46 2b       	or	r20, r22
     d24:	58 2f       	mov	r21, r24
     d26:	5d 29       	or	r21, r13
     d28:	b7 01       	movw	r22, r14
     d2a:	ca 01       	movw	r24, r20
     d2c:	1f 91       	pop	r17
     d2e:	0f 91       	pop	r16
     d30:	ff 90       	pop	r15
     d32:	ef 90       	pop	r14
     d34:	df 90       	pop	r13
     d36:	08 95       	ret

00000d38 <__unpack_f>:
     d38:	fc 01       	movw	r30, r24
     d3a:	db 01       	movw	r26, r22
     d3c:	40 81       	ld	r20, Z
     d3e:	51 81       	ldd	r21, Z+1	; 0x01
     d40:	22 81       	ldd	r18, Z+2	; 0x02
     d42:	62 2f       	mov	r22, r18
     d44:	6f 77       	andi	r22, 0x7F	; 127
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	22 1f       	adc	r18, r18
     d4a:	22 27       	eor	r18, r18
     d4c:	22 1f       	adc	r18, r18
     d4e:	93 81       	ldd	r25, Z+3	; 0x03
     d50:	89 2f       	mov	r24, r25
     d52:	88 0f       	add	r24, r24
     d54:	82 2b       	or	r24, r18
     d56:	28 2f       	mov	r18, r24
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	99 1f       	adc	r25, r25
     d5c:	99 27       	eor	r25, r25
     d5e:	99 1f       	adc	r25, r25
     d60:	11 96       	adiw	r26, 0x01	; 1
     d62:	9c 93       	st	X, r25
     d64:	11 97       	sbiw	r26, 0x01	; 1
     d66:	21 15       	cp	r18, r1
     d68:	31 05       	cpc	r19, r1
     d6a:	a9 f5       	brne	.+106    	; 0xdd6 <__unpack_f+0x9e>
     d6c:	41 15       	cp	r20, r1
     d6e:	51 05       	cpc	r21, r1
     d70:	61 05       	cpc	r22, r1
     d72:	71 05       	cpc	r23, r1
     d74:	11 f4       	brne	.+4      	; 0xd7a <__unpack_f+0x42>
     d76:	82 e0       	ldi	r24, 0x02	; 2
     d78:	37 c0       	rjmp	.+110    	; 0xde8 <__unpack_f+0xb0>
     d7a:	82 e8       	ldi	r24, 0x82	; 130
     d7c:	9f ef       	ldi	r25, 0xFF	; 255
     d7e:	13 96       	adiw	r26, 0x03	; 3
     d80:	9c 93       	st	X, r25
     d82:	8e 93       	st	-X, r24
     d84:	12 97       	sbiw	r26, 0x02	; 2
     d86:	9a 01       	movw	r18, r20
     d88:	ab 01       	movw	r20, r22
     d8a:	67 e0       	ldi	r22, 0x07	; 7
     d8c:	22 0f       	add	r18, r18
     d8e:	33 1f       	adc	r19, r19
     d90:	44 1f       	adc	r20, r20
     d92:	55 1f       	adc	r21, r21
     d94:	6a 95       	dec	r22
     d96:	d1 f7       	brne	.-12     	; 0xd8c <__unpack_f+0x54>
     d98:	83 e0       	ldi	r24, 0x03	; 3
     d9a:	8c 93       	st	X, r24
     d9c:	0d c0       	rjmp	.+26     	; 0xdb8 <__unpack_f+0x80>
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	44 1f       	adc	r20, r20
     da4:	55 1f       	adc	r21, r21
     da6:	12 96       	adiw	r26, 0x02	; 2
     da8:	8d 91       	ld	r24, X+
     daa:	9c 91       	ld	r25, X
     dac:	13 97       	sbiw	r26, 0x03	; 3
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	13 96       	adiw	r26, 0x03	; 3
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	12 97       	sbiw	r26, 0x02	; 2
     db8:	20 30       	cpi	r18, 0x00	; 0
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	38 07       	cpc	r19, r24
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	48 07       	cpc	r20, r24
     dc2:	80 e4       	ldi	r24, 0x40	; 64
     dc4:	58 07       	cpc	r21, r24
     dc6:	58 f3       	brcs	.-42     	; 0xd9e <__unpack_f+0x66>
     dc8:	14 96       	adiw	r26, 0x04	; 4
     dca:	2d 93       	st	X+, r18
     dcc:	3d 93       	st	X+, r19
     dce:	4d 93       	st	X+, r20
     dd0:	5c 93       	st	X, r21
     dd2:	17 97       	sbiw	r26, 0x07	; 7
     dd4:	08 95       	ret
     dd6:	2f 3f       	cpi	r18, 0xFF	; 255
     dd8:	31 05       	cpc	r19, r1
     dda:	79 f4       	brne	.+30     	; 0xdfa <__unpack_f+0xc2>
     ddc:	41 15       	cp	r20, r1
     dde:	51 05       	cpc	r21, r1
     de0:	61 05       	cpc	r22, r1
     de2:	71 05       	cpc	r23, r1
     de4:	19 f4       	brne	.+6      	; 0xdec <__unpack_f+0xb4>
     de6:	84 e0       	ldi	r24, 0x04	; 4
     de8:	8c 93       	st	X, r24
     dea:	08 95       	ret
     dec:	64 ff       	sbrs	r22, 4
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <__unpack_f+0xbe>
     df0:	81 e0       	ldi	r24, 0x01	; 1
     df2:	8c 93       	st	X, r24
     df4:	12 c0       	rjmp	.+36     	; 0xe1a <__unpack_f+0xe2>
     df6:	1c 92       	st	X, r1
     df8:	10 c0       	rjmp	.+32     	; 0xe1a <__unpack_f+0xe2>
     dfa:	2f 57       	subi	r18, 0x7F	; 127
     dfc:	30 40       	sbci	r19, 0x00	; 0
     dfe:	13 96       	adiw	r26, 0x03	; 3
     e00:	3c 93       	st	X, r19
     e02:	2e 93       	st	-X, r18
     e04:	12 97       	sbiw	r26, 0x02	; 2
     e06:	83 e0       	ldi	r24, 0x03	; 3
     e08:	8c 93       	st	X, r24
     e0a:	87 e0       	ldi	r24, 0x07	; 7
     e0c:	44 0f       	add	r20, r20
     e0e:	55 1f       	adc	r21, r21
     e10:	66 1f       	adc	r22, r22
     e12:	77 1f       	adc	r23, r23
     e14:	8a 95       	dec	r24
     e16:	d1 f7       	brne	.-12     	; 0xe0c <__unpack_f+0xd4>
     e18:	70 64       	ori	r23, 0x40	; 64
     e1a:	14 96       	adiw	r26, 0x04	; 4
     e1c:	4d 93       	st	X+, r20
     e1e:	5d 93       	st	X+, r21
     e20:	6d 93       	st	X+, r22
     e22:	7c 93       	st	X, r23
     e24:	17 97       	sbiw	r26, 0x07	; 7
     e26:	08 95       	ret

00000e28 <__fpcmp_parts_f>:
     e28:	1f 93       	push	r17
     e2a:	dc 01       	movw	r26, r24
     e2c:	fb 01       	movw	r30, r22
     e2e:	9c 91       	ld	r25, X
     e30:	92 30       	cpi	r25, 0x02	; 2
     e32:	08 f4       	brcc	.+2      	; 0xe36 <__fpcmp_parts_f+0xe>
     e34:	47 c0       	rjmp	.+142    	; 0xec4 <__fpcmp_parts_f+0x9c>
     e36:	80 81       	ld	r24, Z
     e38:	82 30       	cpi	r24, 0x02	; 2
     e3a:	08 f4       	brcc	.+2      	; 0xe3e <__fpcmp_parts_f+0x16>
     e3c:	43 c0       	rjmp	.+134    	; 0xec4 <__fpcmp_parts_f+0x9c>
     e3e:	94 30       	cpi	r25, 0x04	; 4
     e40:	51 f4       	brne	.+20     	; 0xe56 <__fpcmp_parts_f+0x2e>
     e42:	11 96       	adiw	r26, 0x01	; 1
     e44:	1c 91       	ld	r17, X
     e46:	84 30       	cpi	r24, 0x04	; 4
     e48:	99 f5       	brne	.+102    	; 0xeb0 <__fpcmp_parts_f+0x88>
     e4a:	81 81       	ldd	r24, Z+1	; 0x01
     e4c:	68 2f       	mov	r22, r24
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	61 1b       	sub	r22, r17
     e52:	71 09       	sbc	r23, r1
     e54:	3f c0       	rjmp	.+126    	; 0xed4 <__fpcmp_parts_f+0xac>
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	21 f0       	breq	.+8      	; 0xe62 <__fpcmp_parts_f+0x3a>
     e5a:	92 30       	cpi	r25, 0x02	; 2
     e5c:	31 f4       	brne	.+12     	; 0xe6a <__fpcmp_parts_f+0x42>
     e5e:	82 30       	cpi	r24, 0x02	; 2
     e60:	b9 f1       	breq	.+110    	; 0xed0 <__fpcmp_parts_f+0xa8>
     e62:	81 81       	ldd	r24, Z+1	; 0x01
     e64:	88 23       	and	r24, r24
     e66:	89 f1       	breq	.+98     	; 0xeca <__fpcmp_parts_f+0xa2>
     e68:	2d c0       	rjmp	.+90     	; 0xec4 <__fpcmp_parts_f+0x9c>
     e6a:	11 96       	adiw	r26, 0x01	; 1
     e6c:	1c 91       	ld	r17, X
     e6e:	11 97       	sbiw	r26, 0x01	; 1
     e70:	82 30       	cpi	r24, 0x02	; 2
     e72:	f1 f0       	breq	.+60     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e74:	81 81       	ldd	r24, Z+1	; 0x01
     e76:	18 17       	cp	r17, r24
     e78:	d9 f4       	brne	.+54     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e7a:	12 96       	adiw	r26, 0x02	; 2
     e7c:	2d 91       	ld	r18, X+
     e7e:	3c 91       	ld	r19, X
     e80:	13 97       	sbiw	r26, 0x03	; 3
     e82:	82 81       	ldd	r24, Z+2	; 0x02
     e84:	93 81       	ldd	r25, Z+3	; 0x03
     e86:	82 17       	cp	r24, r18
     e88:	93 07       	cpc	r25, r19
     e8a:	94 f0       	brlt	.+36     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e8c:	28 17       	cp	r18, r24
     e8e:	39 07       	cpc	r19, r25
     e90:	bc f0       	brlt	.+46     	; 0xec0 <__fpcmp_parts_f+0x98>
     e92:	14 96       	adiw	r26, 0x04	; 4
     e94:	8d 91       	ld	r24, X+
     e96:	9d 91       	ld	r25, X+
     e98:	0d 90       	ld	r0, X+
     e9a:	bc 91       	ld	r27, X
     e9c:	a0 2d       	mov	r26, r0
     e9e:	24 81       	ldd	r18, Z+4	; 0x04
     ea0:	35 81       	ldd	r19, Z+5	; 0x05
     ea2:	46 81       	ldd	r20, Z+6	; 0x06
     ea4:	57 81       	ldd	r21, Z+7	; 0x07
     ea6:	28 17       	cp	r18, r24
     ea8:	39 07       	cpc	r19, r25
     eaa:	4a 07       	cpc	r20, r26
     eac:	5b 07       	cpc	r21, r27
     eae:	18 f4       	brcc	.+6      	; 0xeb6 <__fpcmp_parts_f+0x8e>
     eb0:	11 23       	and	r17, r17
     eb2:	41 f0       	breq	.+16     	; 0xec4 <__fpcmp_parts_f+0x9c>
     eb4:	0a c0       	rjmp	.+20     	; 0xeca <__fpcmp_parts_f+0xa2>
     eb6:	82 17       	cp	r24, r18
     eb8:	93 07       	cpc	r25, r19
     eba:	a4 07       	cpc	r26, r20
     ebc:	b5 07       	cpc	r27, r21
     ebe:	40 f4       	brcc	.+16     	; 0xed0 <__fpcmp_parts_f+0xa8>
     ec0:	11 23       	and	r17, r17
     ec2:	19 f0       	breq	.+6      	; 0xeca <__fpcmp_parts_f+0xa2>
     ec4:	61 e0       	ldi	r22, 0x01	; 1
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	05 c0       	rjmp	.+10     	; 0xed4 <__fpcmp_parts_f+0xac>
     eca:	6f ef       	ldi	r22, 0xFF	; 255
     ecc:	7f ef       	ldi	r23, 0xFF	; 255
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <__fpcmp_parts_f+0xac>
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	70 e0       	ldi	r23, 0x00	; 0
     ed4:	cb 01       	movw	r24, r22
     ed6:	1f 91       	pop	r17
     ed8:	08 95       	ret

00000eda <DIO_enuInit>:
#include "DIO_config.h"



ES_t DIO_enuInit(void)
{
     eda:	df 93       	push	r29
     edc:	cf 93       	push	r28
     ede:	0f 92       	push	r0
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
     ee4:	19 82       	std	Y+1, r1	; 0x01

	DDRA = CONC(PA_PIN7_DIR, PA_PIN6_DIR, PA_PIN5_DIR, PA_PIN4_DIR, PA_PIN3_DIR, PA_PIN2_DIR, PA_PIN1_DIR, PA_PIN0_DIR);
     ee6:	ea e3       	ldi	r30, 0x3A	; 58
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	8f ef       	ldi	r24, 0xFF	; 255
     eec:	80 83       	st	Z, r24
	DDRB = CONC(PB_PIN7_DIR, PB_PIN6_DIR, PB_PIN5_DIR, PB_PIN4_DIR, PB_PIN3_DIR, PB_PIN2_DIR, PB_PIN1_DIR, PB_PIN0_DIR);
     eee:	e7 e3       	ldi	r30, 0x37	; 55
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	8f ef       	ldi	r24, 0xFF	; 255
     ef4:	80 83       	st	Z, r24
	DDRC = CONC(PC_PIN7_DIR, PC_PIN6_DIR, PC_PIN5_DIR, PC_PIN4_DIR, PC_PIN3_DIR, PC_PIN2_DIR, PC_PIN1_DIR, PC_PIN0_DIR);
     ef6:	e4 e3       	ldi	r30, 0x34	; 52
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	8a ea       	ldi	r24, 0xAA	; 170
     efc:	80 83       	st	Z, r24
	DDRD = CONC(PD_PIN7_DIR, PD_PIN6_DIR, PD_PIN5_DIR, PD_PIN4_DIR, PD_PIN3_DIR, PD_PIN2_DIR, PD_PIN1_DIR, PD_PIN0_DIR);
     efe:	e1 e3       	ldi	r30, 0x31	; 49
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	8a ea       	ldi	r24, 0xAA	; 170
     f04:	80 83       	st	Z, r24

	PORTA = CONC(PA_PIN7_VAL, PA_PIN6_VAL, PA_PIN5_VAL, PA_PIN4_VAL, PA_PIN3_VAL, PA_PIN2_VAL, PA_PIN1_VAL, PA_PIN0_VAL);
     f06:	eb e3       	ldi	r30, 0x3B	; 59
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	10 82       	st	Z, r1
	PORTB = CONC(PB_PIN7_VAL, PB_PIN6_VAL, PB_PIN5_VAL, PB_PIN4_VAL, PB_PIN3_VAL, PB_PIN2_VAL, PB_PIN1_VAL, PB_PIN0_VAL);
     f0c:	e8 e3       	ldi	r30, 0x38	; 56
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	10 82       	st	Z, r1
	PORTC = CONC(PC_PIN7_VAL, PC_PIN6_VAL, PC_PIN5_VAL, PC_PIN4_VAL, PC_PIN3_VAL, PC_PIN2_VAL, PC_PIN1_VAL, PC_PIN0_VAL);
     f12:	e5 e3       	ldi	r30, 0x35	; 53
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	86 e6       	ldi	r24, 0x66	; 102
     f18:	80 83       	st	Z, r24
	PORTD = CONC(PD_PIN7_VAL, PD_PIN6_VAL, PD_PIN5_VAL, PD_PIN4_VAL, PD_PIN3_VAL, PD_PIN2_VAL, PD_PIN1_VAL, PD_PIN0_VAL);
     f1a:	e2 e3       	ldi	r30, 0x32	; 50
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	86 e6       	ldi	r24, 0x66	; 102
     f20:	80 83       	st	Z, r24

	Local_enuErrorState = ES_OK;
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
     f26:	89 81       	ldd	r24, Y+1	; 0x01
}
     f28:	0f 90       	pop	r0
     f2a:	cf 91       	pop	r28
     f2c:	df 91       	pop	r29
     f2e:	08 95       	ret

00000f30 <DIO_enuSetPortDirection>:


ES_t DIO_enuSetPortDirection(u8 Copy_u8PortID, u8 Copy_u8Value)
{
     f30:	df 93       	push	r29
     f32:	cf 93       	push	r28
     f34:	00 d0       	rcall	.+0      	; 0xf36 <DIO_enuSetPortDirection+0x6>
     f36:	00 d0       	rcall	.+0      	; 0xf38 <DIO_enuSetPortDirection+0x8>
     f38:	0f 92       	push	r0
     f3a:	cd b7       	in	r28, 0x3d	; 61
     f3c:	de b7       	in	r29, 0x3e	; 62
     f3e:	8a 83       	std	Y+2, r24	; 0x02
     f40:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     f42:	19 82       	std	Y+1, r1	; 0x01

	/*Range Check*/
	if(Copy_u8PortID <= DIO_PORTD)
     f44:	8a 81       	ldd	r24, Y+2	; 0x02
     f46:	84 30       	cpi	r24, 0x04	; 4
     f48:	a8 f5       	brcc	.+106    	; 0xfb4 <DIO_enuSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	28 2f       	mov	r18, r24
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	3d 83       	std	Y+5, r19	; 0x05
     f52:	2c 83       	std	Y+4, r18	; 0x04
     f54:	8c 81       	ldd	r24, Y+4	; 0x04
     f56:	9d 81       	ldd	r25, Y+5	; 0x05
     f58:	81 30       	cpi	r24, 0x01	; 1
     f5a:	91 05       	cpc	r25, r1
     f5c:	d1 f0       	breq	.+52     	; 0xf92 <DIO_enuSetPortDirection+0x62>
     f5e:	2c 81       	ldd	r18, Y+4	; 0x04
     f60:	3d 81       	ldd	r19, Y+5	; 0x05
     f62:	22 30       	cpi	r18, 0x02	; 2
     f64:	31 05       	cpc	r19, r1
     f66:	2c f4       	brge	.+10     	; 0xf72 <DIO_enuSetPortDirection+0x42>
     f68:	8c 81       	ldd	r24, Y+4	; 0x04
     f6a:	9d 81       	ldd	r25, Y+5	; 0x05
     f6c:	00 97       	sbiw	r24, 0x00	; 0
     f6e:	61 f0       	breq	.+24     	; 0xf88 <DIO_enuSetPortDirection+0x58>
     f70:	1e c0       	rjmp	.+60     	; 0xfae <DIO_enuSetPortDirection+0x7e>
     f72:	2c 81       	ldd	r18, Y+4	; 0x04
     f74:	3d 81       	ldd	r19, Y+5	; 0x05
     f76:	22 30       	cpi	r18, 0x02	; 2
     f78:	31 05       	cpc	r19, r1
     f7a:	81 f0       	breq	.+32     	; 0xf9c <DIO_enuSetPortDirection+0x6c>
     f7c:	8c 81       	ldd	r24, Y+4	; 0x04
     f7e:	9d 81       	ldd	r25, Y+5	; 0x05
     f80:	83 30       	cpi	r24, 0x03	; 3
     f82:	91 05       	cpc	r25, r1
     f84:	81 f0       	breq	.+32     	; 0xfa6 <DIO_enuSetPortDirection+0x76>
     f86:	13 c0       	rjmp	.+38     	; 0xfae <DIO_enuSetPortDirection+0x7e>
		{
		case DIO_PORTA:
			DDRA = Copy_u8Value;
     f88:	ea e3       	ldi	r30, 0x3A	; 58
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	80 83       	st	Z, r24
     f90:	0e c0       	rjmp	.+28     	; 0xfae <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTB:
			DDRB = Copy_u8Value;
     f92:	e7 e3       	ldi	r30, 0x37	; 55
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	8b 81       	ldd	r24, Y+3	; 0x03
     f98:	80 83       	st	Z, r24
     f9a:	09 c0       	rjmp	.+18     	; 0xfae <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTC:
			DDRC = Copy_u8Value;
     f9c:	e4 e3       	ldi	r30, 0x34	; 52
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	80 83       	st	Z, r24
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTD:
			DDRD = Copy_u8Value;
     fa6:	e1 e3       	ldi	r30, 0x31	; 49
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState = ES_OK;
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	89 83       	std	Y+1, r24	; 0x01
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <DIO_enuSetPortDirection+0x88>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     fb4:	83 e0       	ldi	r24, 0x03	; 3
     fb6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
}
     fba:	0f 90       	pop	r0
     fbc:	0f 90       	pop	r0
     fbe:	0f 90       	pop	r0
     fc0:	0f 90       	pop	r0
     fc2:	0f 90       	pop	r0
     fc4:	cf 91       	pop	r28
     fc6:	df 91       	pop	r29
     fc8:	08 95       	ret

00000fca <DIO_enuSetPortValue>:


ES_t DIO_enuSetPortValue(u8 Copy_u8PortID, u8 Copy_u8Value)
{
     fca:	df 93       	push	r29
     fcc:	cf 93       	push	r28
     fce:	00 d0       	rcall	.+0      	; 0xfd0 <DIO_enuSetPortValue+0x6>
     fd0:	00 d0       	rcall	.+0      	; 0xfd2 <DIO_enuSetPortValue+0x8>
     fd2:	0f 92       	push	r0
     fd4:	cd b7       	in	r28, 0x3d	; 61
     fd6:	de b7       	in	r29, 0x3e	; 62
     fd8:	8a 83       	std	Y+2, r24	; 0x02
     fda:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     fdc:	19 82       	std	Y+1, r1	; 0x01

	/* Range Check */
	if(Copy_u8PortID <= DIO_PORTD)
     fde:	8a 81       	ldd	r24, Y+2	; 0x02
     fe0:	84 30       	cpi	r24, 0x04	; 4
     fe2:	a8 f5       	brcc	.+106    	; 0x104e <DIO_enuSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
     fe4:	8a 81       	ldd	r24, Y+2	; 0x02
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	3d 83       	std	Y+5, r19	; 0x05
     fec:	2c 83       	std	Y+4, r18	; 0x04
     fee:	8c 81       	ldd	r24, Y+4	; 0x04
     ff0:	9d 81       	ldd	r25, Y+5	; 0x05
     ff2:	81 30       	cpi	r24, 0x01	; 1
     ff4:	91 05       	cpc	r25, r1
     ff6:	d1 f0       	breq	.+52     	; 0x102c <DIO_enuSetPortValue+0x62>
     ff8:	2c 81       	ldd	r18, Y+4	; 0x04
     ffa:	3d 81       	ldd	r19, Y+5	; 0x05
     ffc:	22 30       	cpi	r18, 0x02	; 2
     ffe:	31 05       	cpc	r19, r1
    1000:	2c f4       	brge	.+10     	; 0x100c <DIO_enuSetPortValue+0x42>
    1002:	8c 81       	ldd	r24, Y+4	; 0x04
    1004:	9d 81       	ldd	r25, Y+5	; 0x05
    1006:	00 97       	sbiw	r24, 0x00	; 0
    1008:	61 f0       	breq	.+24     	; 0x1022 <DIO_enuSetPortValue+0x58>
    100a:	1e c0       	rjmp	.+60     	; 0x1048 <DIO_enuSetPortValue+0x7e>
    100c:	2c 81       	ldd	r18, Y+4	; 0x04
    100e:	3d 81       	ldd	r19, Y+5	; 0x05
    1010:	22 30       	cpi	r18, 0x02	; 2
    1012:	31 05       	cpc	r19, r1
    1014:	81 f0       	breq	.+32     	; 0x1036 <DIO_enuSetPortValue+0x6c>
    1016:	8c 81       	ldd	r24, Y+4	; 0x04
    1018:	9d 81       	ldd	r25, Y+5	; 0x05
    101a:	83 30       	cpi	r24, 0x03	; 3
    101c:	91 05       	cpc	r25, r1
    101e:	81 f0       	breq	.+32     	; 0x1040 <DIO_enuSetPortValue+0x76>
    1020:	13 c0       	rjmp	.+38     	; 0x1048 <DIO_enuSetPortValue+0x7e>
		{
		case DIO_PORTA:
			PORTA = Copy_u8Value;
    1022:	eb e3       	ldi	r30, 0x3B	; 59
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	8b 81       	ldd	r24, Y+3	; 0x03
    1028:	80 83       	st	Z, r24
    102a:	0e c0       	rjmp	.+28     	; 0x1048 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTB:
			PORTB = Copy_u8Value;
    102c:	e8 e3       	ldi	r30, 0x38	; 56
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	8b 81       	ldd	r24, Y+3	; 0x03
    1032:	80 83       	st	Z, r24
    1034:	09 c0       	rjmp	.+18     	; 0x1048 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTC:
			PORTC = Copy_u8Value;
    1036:	e5 e3       	ldi	r30, 0x35	; 53
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	8b 81       	ldd	r24, Y+3	; 0x03
    103c:	80 83       	st	Z, r24
    103e:	04 c0       	rjmp	.+8      	; 0x1048 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTD:
			PORTD = Copy_u8Value;
    1040:	e2 e3       	ldi	r30, 0x32	; 50
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	8b 81       	ldd	r24, Y+3	; 0x03
    1046:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	89 83       	std	Y+1, r24	; 0x01
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <DIO_enuSetPortValue+0x88>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    104e:	83 e0       	ldi	r24, 0x03	; 3
    1050:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    1052:	89 81       	ldd	r24, Y+1	; 0x01
}
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	0f 90       	pop	r0
    105e:	cf 91       	pop	r28
    1060:	df 91       	pop	r29
    1062:	08 95       	ret

00001064 <DIO_enuTogPortValue>:


ES_t DIO_enuTogPortValue(u8 Copy_u8PortID)
{
    1064:	df 93       	push	r29
    1066:	cf 93       	push	r28
    1068:	00 d0       	rcall	.+0      	; 0x106a <DIO_enuTogPortValue+0x6>
    106a:	00 d0       	rcall	.+0      	; 0x106c <DIO_enuTogPortValue+0x8>
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    1072:	19 82       	std	Y+1, r1	; 0x01

	/* Range Check */
	if(Copy_u8PortID <= DIO_PORTD)
    1074:	8a 81       	ldd	r24, Y+2	; 0x02
    1076:	84 30       	cpi	r24, 0x04	; 4
    1078:	08 f0       	brcs	.+2      	; 0x107c <DIO_enuTogPortValue+0x18>
    107a:	41 c0       	rjmp	.+130    	; 0x10fe <DIO_enuTogPortValue+0x9a>
	{
		switch(Copy_u8PortID)
    107c:	8a 81       	ldd	r24, Y+2	; 0x02
    107e:	28 2f       	mov	r18, r24
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	3c 83       	std	Y+4, r19	; 0x04
    1084:	2b 83       	std	Y+3, r18	; 0x03
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
    1088:	9c 81       	ldd	r25, Y+4	; 0x04
    108a:	81 30       	cpi	r24, 0x01	; 1
    108c:	91 05       	cpc	r25, r1
    108e:	e9 f0       	breq	.+58     	; 0x10ca <DIO_enuTogPortValue+0x66>
    1090:	2b 81       	ldd	r18, Y+3	; 0x03
    1092:	3c 81       	ldd	r19, Y+4	; 0x04
    1094:	22 30       	cpi	r18, 0x02	; 2
    1096:	31 05       	cpc	r19, r1
    1098:	2c f4       	brge	.+10     	; 0x10a4 <DIO_enuTogPortValue+0x40>
    109a:	8b 81       	ldd	r24, Y+3	; 0x03
    109c:	9c 81       	ldd	r25, Y+4	; 0x04
    109e:	00 97       	sbiw	r24, 0x00	; 0
    10a0:	61 f0       	breq	.+24     	; 0x10ba <DIO_enuTogPortValue+0x56>
    10a2:	2a c0       	rjmp	.+84     	; 0x10f8 <DIO_enuTogPortValue+0x94>
    10a4:	2b 81       	ldd	r18, Y+3	; 0x03
    10a6:	3c 81       	ldd	r19, Y+4	; 0x04
    10a8:	22 30       	cpi	r18, 0x02	; 2
    10aa:	31 05       	cpc	r19, r1
    10ac:	b1 f0       	breq	.+44     	; 0x10da <DIO_enuTogPortValue+0x76>
    10ae:	8b 81       	ldd	r24, Y+3	; 0x03
    10b0:	9c 81       	ldd	r25, Y+4	; 0x04
    10b2:	83 30       	cpi	r24, 0x03	; 3
    10b4:	91 05       	cpc	r25, r1
    10b6:	c9 f0       	breq	.+50     	; 0x10ea <DIO_enuTogPortValue+0x86>
    10b8:	1f c0       	rjmp	.+62     	; 0x10f8 <DIO_enuTogPortValue+0x94>
		{
		case DIO_PORTA:
			PORTA = ~PORTA;
    10ba:	ab e3       	ldi	r26, 0x3B	; 59
    10bc:	b0 e0       	ldi	r27, 0x00	; 0
    10be:	eb e3       	ldi	r30, 0x3B	; 59
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	80 81       	ld	r24, Z
    10c4:	80 95       	com	r24
    10c6:	8c 93       	st	X, r24
    10c8:	17 c0       	rjmp	.+46     	; 0x10f8 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTB:
			PORTB = ~PORTB;
    10ca:	a8 e3       	ldi	r26, 0x38	; 56
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	e8 e3       	ldi	r30, 0x38	; 56
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	80 81       	ld	r24, Z
    10d4:	80 95       	com	r24
    10d6:	8c 93       	st	X, r24
    10d8:	0f c0       	rjmp	.+30     	; 0x10f8 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTC:
			PORTC = ~PORTC;
    10da:	a5 e3       	ldi	r26, 0x35	; 53
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	e5 e3       	ldi	r30, 0x35	; 53
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	80 81       	ld	r24, Z
    10e4:	80 95       	com	r24
    10e6:	8c 93       	st	X, r24
    10e8:	07 c0       	rjmp	.+14     	; 0x10f8 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTD:
			PORTD = ~PORTD;
    10ea:	a2 e3       	ldi	r26, 0x32	; 50
    10ec:	b0 e0       	ldi	r27, 0x00	; 0
    10ee:	e2 e3       	ldi	r30, 0x32	; 50
    10f0:	f0 e0       	ldi	r31, 0x00	; 0
    10f2:	80 81       	ld	r24, Z
    10f4:	80 95       	com	r24
    10f6:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	89 83       	std	Y+1, r24	; 0x01
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <DIO_enuTogPortValue+0x9e>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    10fe:	83 e0       	ldi	r24, 0x03	; 3
    1100:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
    1102:	89 81       	ldd	r24, Y+1	; 0x01
}
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	0f 90       	pop	r0
    110c:	cf 91       	pop	r28
    110e:	df 91       	pop	r29
    1110:	08 95       	ret

00001112 <DIO_enuGetPortValue>:


ES_t DIO_enuGetPortValue(u8 Copy_u8PortID, u8 * Copy_pu8Value)
{
    1112:	df 93       	push	r29
    1114:	cf 93       	push	r28
    1116:	00 d0       	rcall	.+0      	; 0x1118 <DIO_enuGetPortValue+0x6>
    1118:	00 d0       	rcall	.+0      	; 0x111a <DIO_enuGetPortValue+0x8>
    111a:	00 d0       	rcall	.+0      	; 0x111c <DIO_enuGetPortValue+0xa>
    111c:	cd b7       	in	r28, 0x3d	; 61
    111e:	de b7       	in	r29, 0x3e	; 62
    1120:	8a 83       	std	Y+2, r24	; 0x02
    1122:	7c 83       	std	Y+4, r23	; 0x04
    1124:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    1126:	19 82       	std	Y+1, r1	; 0x01

	/* Check if wild pointer */
	if(Copy_pu8Value != NULL)
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	9c 81       	ldd	r25, Y+4	; 0x04
    112c:	00 97       	sbiw	r24, 0x00	; 0
    112e:	09 f4       	brne	.+2      	; 0x1132 <DIO_enuGetPortValue+0x20>
    1130:	43 c0       	rjmp	.+134    	; 0x11b8 <DIO_enuGetPortValue+0xa6>
	{
		/* Change Range */
		if(Copy_u8PortID <= DIO_PORTD)
    1132:	8a 81       	ldd	r24, Y+2	; 0x02
    1134:	84 30       	cpi	r24, 0x04	; 4
    1136:	e8 f5       	brcc	.+122    	; 0x11b2 <DIO_enuGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
    1138:	8a 81       	ldd	r24, Y+2	; 0x02
    113a:	28 2f       	mov	r18, r24
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	3e 83       	std	Y+6, r19	; 0x06
    1140:	2d 83       	std	Y+5, r18	; 0x05
    1142:	8d 81       	ldd	r24, Y+5	; 0x05
    1144:	9e 81       	ldd	r25, Y+6	; 0x06
    1146:	81 30       	cpi	r24, 0x01	; 1
    1148:	91 05       	cpc	r25, r1
    114a:	e1 f0       	breq	.+56     	; 0x1184 <DIO_enuGetPortValue+0x72>
    114c:	2d 81       	ldd	r18, Y+5	; 0x05
    114e:	3e 81       	ldd	r19, Y+6	; 0x06
    1150:	22 30       	cpi	r18, 0x02	; 2
    1152:	31 05       	cpc	r19, r1
    1154:	2c f4       	brge	.+10     	; 0x1160 <DIO_enuGetPortValue+0x4e>
    1156:	8d 81       	ldd	r24, Y+5	; 0x05
    1158:	9e 81       	ldd	r25, Y+6	; 0x06
    115a:	00 97       	sbiw	r24, 0x00	; 0
    115c:	61 f0       	breq	.+24     	; 0x1176 <DIO_enuGetPortValue+0x64>
    115e:	26 c0       	rjmp	.+76     	; 0x11ac <DIO_enuGetPortValue+0x9a>
    1160:	2d 81       	ldd	r18, Y+5	; 0x05
    1162:	3e 81       	ldd	r19, Y+6	; 0x06
    1164:	22 30       	cpi	r18, 0x02	; 2
    1166:	31 05       	cpc	r19, r1
    1168:	a1 f0       	breq	.+40     	; 0x1192 <DIO_enuGetPortValue+0x80>
    116a:	8d 81       	ldd	r24, Y+5	; 0x05
    116c:	9e 81       	ldd	r25, Y+6	; 0x06
    116e:	83 30       	cpi	r24, 0x03	; 3
    1170:	91 05       	cpc	r25, r1
    1172:	b1 f0       	breq	.+44     	; 0x11a0 <DIO_enuGetPortValue+0x8e>
    1174:	1b c0       	rjmp	.+54     	; 0x11ac <DIO_enuGetPortValue+0x9a>
			{
			case DIO_PORTA:
				*Copy_pu8Value = PINA;
    1176:	e9 e3       	ldi	r30, 0x39	; 57
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	80 81       	ld	r24, Z
    117c:	eb 81       	ldd	r30, Y+3	; 0x03
    117e:	fc 81       	ldd	r31, Y+4	; 0x04
    1180:	80 83       	st	Z, r24
    1182:	14 c0       	rjmp	.+40     	; 0x11ac <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTB:
				*Copy_pu8Value = PINB;
    1184:	e6 e3       	ldi	r30, 0x36	; 54
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	80 81       	ld	r24, Z
    118a:	eb 81       	ldd	r30, Y+3	; 0x03
    118c:	fc 81       	ldd	r31, Y+4	; 0x04
    118e:	80 83       	st	Z, r24
    1190:	0d c0       	rjmp	.+26     	; 0x11ac <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTC:
				*Copy_pu8Value = PINC;
    1192:	e3 e3       	ldi	r30, 0x33	; 51
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	eb 81       	ldd	r30, Y+3	; 0x03
    119a:	fc 81       	ldd	r31, Y+4	; 0x04
    119c:	80 83       	st	Z, r24
    119e:	06 c0       	rjmp	.+12     	; 0x11ac <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTD:
				*Copy_pu8Value = PIND;
    11a0:	e0 e3       	ldi	r30, 0x30	; 48
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	eb 81       	ldd	r30, Y+3	; 0x03
    11a8:	fc 81       	ldd	r31, Y+4	; 0x04
    11aa:	80 83       	st	Z, r24
				break;
			}
			Local_enuErrorState = ES_OK;
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	05 c0       	rjmp	.+10     	; 0x11bc <DIO_enuGetPortValue+0xaa>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    11b2:	83 e0       	ldi	r24, 0x03	; 3
    11b4:	89 83       	std	Y+1, r24	; 0x01
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <DIO_enuGetPortValue+0xaa>
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    11b8:	82 e0       	ldi	r24, 0x02	; 2
    11ba:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    11bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    11be:	26 96       	adiw	r28, 0x06	; 6
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	cf 91       	pop	r28
    11cc:	df 91       	pop	r29
    11ce:	08 95       	ret

000011d0 <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
    11d0:	df 93       	push	r29
    11d2:	cf 93       	push	r28
    11d4:	00 d0       	rcall	.+0      	; 0x11d6 <DIO_enuSetPinDirection+0x6>
    11d6:	00 d0       	rcall	.+0      	; 0x11d8 <DIO_enuSetPinDirection+0x8>
    11d8:	00 d0       	rcall	.+0      	; 0x11da <DIO_enuSetPinDirection+0xa>
    11da:	cd b7       	in	r28, 0x3d	; 61
    11dc:	de b7       	in	r29, 0x3e	; 62
    11de:	8a 83       	std	Y+2, r24	; 0x02
    11e0:	6b 83       	std	Y+3, r22	; 0x03
    11e2:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    11e4:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) && (Copy_u8Value <= OUTPUT))
    11e6:	8a 81       	ldd	r24, Y+2	; 0x02
    11e8:	84 30       	cpi	r24, 0x04	; 4
    11ea:	08 f0       	brcs	.+2      	; 0x11ee <DIO_enuSetPinDirection+0x1e>
    11ec:	d1 c0       	rjmp	.+418    	; 0x1390 <DIO_enuSetPinDirection+0x1c0>
    11ee:	8b 81       	ldd	r24, Y+3	; 0x03
    11f0:	88 30       	cpi	r24, 0x08	; 8
    11f2:	08 f0       	brcs	.+2      	; 0x11f6 <DIO_enuSetPinDirection+0x26>
    11f4:	cd c0       	rjmp	.+410    	; 0x1390 <DIO_enuSetPinDirection+0x1c0>
    11f6:	8c 81       	ldd	r24, Y+4	; 0x04
    11f8:	82 30       	cpi	r24, 0x02	; 2
    11fa:	08 f0       	brcs	.+2      	; 0x11fe <DIO_enuSetPinDirection+0x2e>
    11fc:	c9 c0       	rjmp	.+402    	; 0x1390 <DIO_enuSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
    11fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1200:	28 2f       	mov	r18, r24
    1202:	30 e0       	ldi	r19, 0x00	; 0
    1204:	3e 83       	std	Y+6, r19	; 0x06
    1206:	2d 83       	std	Y+5, r18	; 0x05
    1208:	6d 81       	ldd	r22, Y+5	; 0x05
    120a:	7e 81       	ldd	r23, Y+6	; 0x06
    120c:	61 30       	cpi	r22, 0x01	; 1
    120e:	71 05       	cpc	r23, r1
    1210:	09 f4       	brne	.+2      	; 0x1214 <DIO_enuSetPinDirection+0x44>
    1212:	41 c0       	rjmp	.+130    	; 0x1296 <DIO_enuSetPinDirection+0xc6>
    1214:	8d 81       	ldd	r24, Y+5	; 0x05
    1216:	9e 81       	ldd	r25, Y+6	; 0x06
    1218:	82 30       	cpi	r24, 0x02	; 2
    121a:	91 05       	cpc	r25, r1
    121c:	34 f4       	brge	.+12     	; 0x122a <DIO_enuSetPinDirection+0x5a>
    121e:	2d 81       	ldd	r18, Y+5	; 0x05
    1220:	3e 81       	ldd	r19, Y+6	; 0x06
    1222:	21 15       	cp	r18, r1
    1224:	31 05       	cpc	r19, r1
    1226:	71 f0       	breq	.+28     	; 0x1244 <DIO_enuSetPinDirection+0x74>
    1228:	b0 c0       	rjmp	.+352    	; 0x138a <DIO_enuSetPinDirection+0x1ba>
    122a:	6d 81       	ldd	r22, Y+5	; 0x05
    122c:	7e 81       	ldd	r23, Y+6	; 0x06
    122e:	62 30       	cpi	r22, 0x02	; 2
    1230:	71 05       	cpc	r23, r1
    1232:	09 f4       	brne	.+2      	; 0x1236 <DIO_enuSetPinDirection+0x66>
    1234:	59 c0       	rjmp	.+178    	; 0x12e8 <DIO_enuSetPinDirection+0x118>
    1236:	8d 81       	ldd	r24, Y+5	; 0x05
    1238:	9e 81       	ldd	r25, Y+6	; 0x06
    123a:	83 30       	cpi	r24, 0x03	; 3
    123c:	91 05       	cpc	r25, r1
    123e:	09 f4       	brne	.+2      	; 0x1242 <DIO_enuSetPinDirection+0x72>
    1240:	7c c0       	rjmp	.+248    	; 0x133a <DIO_enuSetPinDirection+0x16a>
    1242:	a3 c0       	rjmp	.+326    	; 0x138a <DIO_enuSetPinDirection+0x1ba>
		{
		case DIO_PORTA:
			DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);             //Mask bit == Clear Bit
    1244:	aa e3       	ldi	r26, 0x3A	; 58
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	ea e3       	ldi	r30, 0x3A	; 58
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	80 81       	ld	r24, Z
    124e:	48 2f       	mov	r20, r24
    1250:	8b 81       	ldd	r24, Y+3	; 0x03
    1252:	28 2f       	mov	r18, r24
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <DIO_enuSetPinDirection+0x90>
    125c:	88 0f       	add	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	2a 95       	dec	r18
    1262:	e2 f7       	brpl	.-8      	; 0x125c <DIO_enuSetPinDirection+0x8c>
    1264:	80 95       	com	r24
    1266:	84 23       	and	r24, r20
    1268:	8c 93       	st	X, r24
			DDRA |=  (Copy_u8Value << Copy_u8PinID); //Write new value
    126a:	aa e3       	ldi	r26, 0x3A	; 58
    126c:	b0 e0       	ldi	r27, 0x00	; 0
    126e:	ea e3       	ldi	r30, 0x3A	; 58
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	80 81       	ld	r24, Z
    1274:	48 2f       	mov	r20, r24
    1276:	8c 81       	ldd	r24, Y+4	; 0x04
    1278:	28 2f       	mov	r18, r24
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	8b 81       	ldd	r24, Y+3	; 0x03
    127e:	88 2f       	mov	r24, r24
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	b9 01       	movw	r22, r18
    1284:	02 c0       	rjmp	.+4      	; 0x128a <DIO_enuSetPinDirection+0xba>
    1286:	66 0f       	add	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	8a 95       	dec	r24
    128c:	e2 f7       	brpl	.-8      	; 0x1286 <DIO_enuSetPinDirection+0xb6>
    128e:	cb 01       	movw	r24, r22
    1290:	84 2b       	or	r24, r20
    1292:	8c 93       	st	X, r24
    1294:	7a c0       	rjmp	.+244    	; 0x138a <DIO_enuSetPinDirection+0x1ba>
			 *      -> 101-0-1001 | 000-1-0000 (Write Value)
			 *      -> 101-1-1-1001 (Result)
			 */
			break;
		case DIO_PORTB:
			DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    1296:	a7 e3       	ldi	r26, 0x37	; 55
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	e7 e3       	ldi	r30, 0x37	; 55
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	80 81       	ld	r24, Z
    12a0:	48 2f       	mov	r20, r24
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	28 2f       	mov	r18, r24
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <DIO_enuSetPinDirection+0xe2>
    12ae:	88 0f       	add	r24, r24
    12b0:	99 1f       	adc	r25, r25
    12b2:	2a 95       	dec	r18
    12b4:	e2 f7       	brpl	.-8      	; 0x12ae <DIO_enuSetPinDirection+0xde>
    12b6:	80 95       	com	r24
    12b8:	84 23       	and	r24, r20
    12ba:	8c 93       	st	X, r24
			DDRB |= (Copy_u8Value << Copy_u8PinID);
    12bc:	a7 e3       	ldi	r26, 0x37	; 55
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	e7 e3       	ldi	r30, 0x37	; 55
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	80 81       	ld	r24, Z
    12c6:	48 2f       	mov	r20, r24
    12c8:	8c 81       	ldd	r24, Y+4	; 0x04
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	8b 81       	ldd	r24, Y+3	; 0x03
    12d0:	88 2f       	mov	r24, r24
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	b9 01       	movw	r22, r18
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <DIO_enuSetPinDirection+0x10c>
    12d8:	66 0f       	add	r22, r22
    12da:	77 1f       	adc	r23, r23
    12dc:	8a 95       	dec	r24
    12de:	e2 f7       	brpl	.-8      	; 0x12d8 <DIO_enuSetPinDirection+0x108>
    12e0:	cb 01       	movw	r24, r22
    12e2:	84 2b       	or	r24, r20
    12e4:	8c 93       	st	X, r24
    12e6:	51 c0       	rjmp	.+162    	; 0x138a <DIO_enuSetPinDirection+0x1ba>
			break;
		case DIO_PORTC:
			DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    12e8:	a4 e3       	ldi	r26, 0x34	; 52
    12ea:	b0 e0       	ldi	r27, 0x00	; 0
    12ec:	e4 e3       	ldi	r30, 0x34	; 52
    12ee:	f0 e0       	ldi	r31, 0x00	; 0
    12f0:	80 81       	ld	r24, Z
    12f2:	48 2f       	mov	r20, r24
    12f4:	8b 81       	ldd	r24, Y+3	; 0x03
    12f6:	28 2f       	mov	r18, r24
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	81 e0       	ldi	r24, 0x01	; 1
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <DIO_enuSetPinDirection+0x134>
    1300:	88 0f       	add	r24, r24
    1302:	99 1f       	adc	r25, r25
    1304:	2a 95       	dec	r18
    1306:	e2 f7       	brpl	.-8      	; 0x1300 <DIO_enuSetPinDirection+0x130>
    1308:	80 95       	com	r24
    130a:	84 23       	and	r24, r20
    130c:	8c 93       	st	X, r24
			DDRC |= (Copy_u8Value << Copy_u8PinID);
    130e:	a4 e3       	ldi	r26, 0x34	; 52
    1310:	b0 e0       	ldi	r27, 0x00	; 0
    1312:	e4 e3       	ldi	r30, 0x34	; 52
    1314:	f0 e0       	ldi	r31, 0x00	; 0
    1316:	80 81       	ld	r24, Z
    1318:	48 2f       	mov	r20, r24
    131a:	8c 81       	ldd	r24, Y+4	; 0x04
    131c:	28 2f       	mov	r18, r24
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	8b 81       	ldd	r24, Y+3	; 0x03
    1322:	88 2f       	mov	r24, r24
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	b9 01       	movw	r22, r18
    1328:	02 c0       	rjmp	.+4      	; 0x132e <DIO_enuSetPinDirection+0x15e>
    132a:	66 0f       	add	r22, r22
    132c:	77 1f       	adc	r23, r23
    132e:	8a 95       	dec	r24
    1330:	e2 f7       	brpl	.-8      	; 0x132a <DIO_enuSetPinDirection+0x15a>
    1332:	cb 01       	movw	r24, r22
    1334:	84 2b       	or	r24, r20
    1336:	8c 93       	st	X, r24
    1338:	28 c0       	rjmp	.+80     	; 0x138a <DIO_enuSetPinDirection+0x1ba>
			break;
		case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    133a:	a1 e3       	ldi	r26, 0x31	; 49
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	e1 e3       	ldi	r30, 0x31	; 49
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	80 81       	ld	r24, Z
    1344:	48 2f       	mov	r20, r24
    1346:	8b 81       	ldd	r24, Y+3	; 0x03
    1348:	28 2f       	mov	r18, r24
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <DIO_enuSetPinDirection+0x186>
    1352:	88 0f       	add	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	2a 95       	dec	r18
    1358:	e2 f7       	brpl	.-8      	; 0x1352 <DIO_enuSetPinDirection+0x182>
    135a:	80 95       	com	r24
    135c:	84 23       	and	r24, r20
    135e:	8c 93       	st	X, r24
			DDRD |= (Copy_u8Value << Copy_u8PinID);
    1360:	a1 e3       	ldi	r26, 0x31	; 49
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e1 e3       	ldi	r30, 0x31	; 49
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	80 81       	ld	r24, Z
    136a:	48 2f       	mov	r20, r24
    136c:	8c 81       	ldd	r24, Y+4	; 0x04
    136e:	28 2f       	mov	r18, r24
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	8b 81       	ldd	r24, Y+3	; 0x03
    1374:	88 2f       	mov	r24, r24
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	b9 01       	movw	r22, r18
    137a:	02 c0       	rjmp	.+4      	; 0x1380 <DIO_enuSetPinDirection+0x1b0>
    137c:	66 0f       	add	r22, r22
    137e:	77 1f       	adc	r23, r23
    1380:	8a 95       	dec	r24
    1382:	e2 f7       	brpl	.-8      	; 0x137c <DIO_enuSetPinDirection+0x1ac>
    1384:	cb 01       	movw	r24, r22
    1386:	84 2b       	or	r24, r20
    1388:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    138a:	81 e0       	ldi	r24, 0x01	; 1
    138c:	89 83       	std	Y+1, r24	; 0x01
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <DIO_enuSetPinDirection+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    1390:	83 e0       	ldi	r24, 0x03	; 3
    1392:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    1394:	89 81       	ldd	r24, Y+1	; 0x01
}
    1396:	26 96       	adiw	r28, 0x06	; 6
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	f8 94       	cli
    139c:	de bf       	out	0x3e, r29	; 62
    139e:	0f be       	out	0x3f, r0	; 63
    13a0:	cd bf       	out	0x3d, r28	; 61
    13a2:	cf 91       	pop	r28
    13a4:	df 91       	pop	r29
    13a6:	08 95       	ret

000013a8 <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
    13a8:	df 93       	push	r29
    13aa:	cf 93       	push	r28
    13ac:	00 d0       	rcall	.+0      	; 0x13ae <DIO_enuSetPinValue+0x6>
    13ae:	00 d0       	rcall	.+0      	; 0x13b0 <DIO_enuSetPinValue+0x8>
    13b0:	00 d0       	rcall	.+0      	; 0x13b2 <DIO_enuSetPinValue+0xa>
    13b2:	cd b7       	in	r28, 0x3d	; 61
    13b4:	de b7       	in	r29, 0x3e	; 62
    13b6:	8a 83       	std	Y+2, r24	; 0x02
    13b8:	6b 83       	std	Y+3, r22	; 0x03
    13ba:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    13bc:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) && (Copy_u8Value <= OUTPUT))
    13be:	8a 81       	ldd	r24, Y+2	; 0x02
    13c0:	84 30       	cpi	r24, 0x04	; 4
    13c2:	08 f0       	brcs	.+2      	; 0x13c6 <DIO_enuSetPinValue+0x1e>
    13c4:	d1 c0       	rjmp	.+418    	; 0x1568 <DIO_enuSetPinValue+0x1c0>
    13c6:	8b 81       	ldd	r24, Y+3	; 0x03
    13c8:	88 30       	cpi	r24, 0x08	; 8
    13ca:	08 f0       	brcs	.+2      	; 0x13ce <DIO_enuSetPinValue+0x26>
    13cc:	cd c0       	rjmp	.+410    	; 0x1568 <DIO_enuSetPinValue+0x1c0>
    13ce:	8c 81       	ldd	r24, Y+4	; 0x04
    13d0:	82 30       	cpi	r24, 0x02	; 2
    13d2:	08 f0       	brcs	.+2      	; 0x13d6 <DIO_enuSetPinValue+0x2e>
    13d4:	c9 c0       	rjmp	.+402    	; 0x1568 <DIO_enuSetPinValue+0x1c0>
	{
		switch(Copy_u8PortID)
    13d6:	8a 81       	ldd	r24, Y+2	; 0x02
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	3e 83       	std	Y+6, r19	; 0x06
    13de:	2d 83       	std	Y+5, r18	; 0x05
    13e0:	6d 81       	ldd	r22, Y+5	; 0x05
    13e2:	7e 81       	ldd	r23, Y+6	; 0x06
    13e4:	61 30       	cpi	r22, 0x01	; 1
    13e6:	71 05       	cpc	r23, r1
    13e8:	09 f4       	brne	.+2      	; 0x13ec <DIO_enuSetPinValue+0x44>
    13ea:	41 c0       	rjmp	.+130    	; 0x146e <DIO_enuSetPinValue+0xc6>
    13ec:	8d 81       	ldd	r24, Y+5	; 0x05
    13ee:	9e 81       	ldd	r25, Y+6	; 0x06
    13f0:	82 30       	cpi	r24, 0x02	; 2
    13f2:	91 05       	cpc	r25, r1
    13f4:	34 f4       	brge	.+12     	; 0x1402 <DIO_enuSetPinValue+0x5a>
    13f6:	2d 81       	ldd	r18, Y+5	; 0x05
    13f8:	3e 81       	ldd	r19, Y+6	; 0x06
    13fa:	21 15       	cp	r18, r1
    13fc:	31 05       	cpc	r19, r1
    13fe:	71 f0       	breq	.+28     	; 0x141c <DIO_enuSetPinValue+0x74>
    1400:	b0 c0       	rjmp	.+352    	; 0x1562 <DIO_enuSetPinValue+0x1ba>
    1402:	6d 81       	ldd	r22, Y+5	; 0x05
    1404:	7e 81       	ldd	r23, Y+6	; 0x06
    1406:	62 30       	cpi	r22, 0x02	; 2
    1408:	71 05       	cpc	r23, r1
    140a:	09 f4       	brne	.+2      	; 0x140e <DIO_enuSetPinValue+0x66>
    140c:	59 c0       	rjmp	.+178    	; 0x14c0 <DIO_enuSetPinValue+0x118>
    140e:	8d 81       	ldd	r24, Y+5	; 0x05
    1410:	9e 81       	ldd	r25, Y+6	; 0x06
    1412:	83 30       	cpi	r24, 0x03	; 3
    1414:	91 05       	cpc	r25, r1
    1416:	09 f4       	brne	.+2      	; 0x141a <DIO_enuSetPinValue+0x72>
    1418:	7c c0       	rjmp	.+248    	; 0x1512 <DIO_enuSetPinValue+0x16a>
    141a:	a3 c0       	rjmp	.+326    	; 0x1562 <DIO_enuSetPinValue+0x1ba>
		{
		case DIO_PORTA:
			PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);             //Mask bit == Clear Bit
    141c:	ab e3       	ldi	r26, 0x3B	; 59
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	eb e3       	ldi	r30, 0x3B	; 59
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	80 81       	ld	r24, Z
    1426:	48 2f       	mov	r20, r24
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	28 2f       	mov	r18, r24
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <DIO_enuSetPinValue+0x90>
    1434:	88 0f       	add	r24, r24
    1436:	99 1f       	adc	r25, r25
    1438:	2a 95       	dec	r18
    143a:	e2 f7       	brpl	.-8      	; 0x1434 <DIO_enuSetPinValue+0x8c>
    143c:	80 95       	com	r24
    143e:	84 23       	and	r24, r20
    1440:	8c 93       	st	X, r24
			PORTA |=  (Copy_u8Value << Copy_u8PinID); //Write new value
    1442:	ab e3       	ldi	r26, 0x3B	; 59
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	eb e3       	ldi	r30, 0x3B	; 59
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	48 2f       	mov	r20, r24
    144e:	8c 81       	ldd	r24, Y+4	; 0x04
    1450:	28 2f       	mov	r18, r24
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	8b 81       	ldd	r24, Y+3	; 0x03
    1456:	88 2f       	mov	r24, r24
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	b9 01       	movw	r22, r18
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <DIO_enuSetPinValue+0xba>
    145e:	66 0f       	add	r22, r22
    1460:	77 1f       	adc	r23, r23
    1462:	8a 95       	dec	r24
    1464:	e2 f7       	brpl	.-8      	; 0x145e <DIO_enuSetPinValue+0xb6>
    1466:	cb 01       	movw	r24, r22
    1468:	84 2b       	or	r24, r20
    146a:	8c 93       	st	X, r24
    146c:	7a c0       	rjmp	.+244    	; 0x1562 <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTB:
			PORTB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    146e:	a8 e3       	ldi	r26, 0x38	; 56
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	e8 e3       	ldi	r30, 0x38	; 56
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	80 81       	ld	r24, Z
    1478:	48 2f       	mov	r20, r24
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	28 2f       	mov	r18, r24
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	02 c0       	rjmp	.+4      	; 0x148a <DIO_enuSetPinValue+0xe2>
    1486:	88 0f       	add	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	2a 95       	dec	r18
    148c:	e2 f7       	brpl	.-8      	; 0x1486 <DIO_enuSetPinValue+0xde>
    148e:	80 95       	com	r24
    1490:	84 23       	and	r24, r20
    1492:	8c 93       	st	X, r24
			PORTB |= (Copy_u8Value << Copy_u8PinID);
    1494:	a8 e3       	ldi	r26, 0x38	; 56
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	e8 e3       	ldi	r30, 0x38	; 56
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	80 81       	ld	r24, Z
    149e:	48 2f       	mov	r20, r24
    14a0:	8c 81       	ldd	r24, Y+4	; 0x04
    14a2:	28 2f       	mov	r18, r24
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	8b 81       	ldd	r24, Y+3	; 0x03
    14a8:	88 2f       	mov	r24, r24
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	b9 01       	movw	r22, r18
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <DIO_enuSetPinValue+0x10c>
    14b0:	66 0f       	add	r22, r22
    14b2:	77 1f       	adc	r23, r23
    14b4:	8a 95       	dec	r24
    14b6:	e2 f7       	brpl	.-8      	; 0x14b0 <DIO_enuSetPinValue+0x108>
    14b8:	cb 01       	movw	r24, r22
    14ba:	84 2b       	or	r24, r20
    14bc:	8c 93       	st	X, r24
    14be:	51 c0       	rjmp	.+162    	; 0x1562 <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTC:
			PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    14c0:	a5 e3       	ldi	r26, 0x35	; 53
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e5 e3       	ldi	r30, 0x35	; 53
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	48 2f       	mov	r20, r24
    14cc:	8b 81       	ldd	r24, Y+3	; 0x03
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <DIO_enuSetPinValue+0x134>
    14d8:	88 0f       	add	r24, r24
    14da:	99 1f       	adc	r25, r25
    14dc:	2a 95       	dec	r18
    14de:	e2 f7       	brpl	.-8      	; 0x14d8 <DIO_enuSetPinValue+0x130>
    14e0:	80 95       	com	r24
    14e2:	84 23       	and	r24, r20
    14e4:	8c 93       	st	X, r24
			PORTC |= (Copy_u8Value << Copy_u8PinID);
    14e6:	a5 e3       	ldi	r26, 0x35	; 53
    14e8:	b0 e0       	ldi	r27, 0x00	; 0
    14ea:	e5 e3       	ldi	r30, 0x35	; 53
    14ec:	f0 e0       	ldi	r31, 0x00	; 0
    14ee:	80 81       	ld	r24, Z
    14f0:	48 2f       	mov	r20, r24
    14f2:	8c 81       	ldd	r24, Y+4	; 0x04
    14f4:	28 2f       	mov	r18, r24
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	8b 81       	ldd	r24, Y+3	; 0x03
    14fa:	88 2f       	mov	r24, r24
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	b9 01       	movw	r22, r18
    1500:	02 c0       	rjmp	.+4      	; 0x1506 <DIO_enuSetPinValue+0x15e>
    1502:	66 0f       	add	r22, r22
    1504:	77 1f       	adc	r23, r23
    1506:	8a 95       	dec	r24
    1508:	e2 f7       	brpl	.-8      	; 0x1502 <DIO_enuSetPinValue+0x15a>
    150a:	cb 01       	movw	r24, r22
    150c:	84 2b       	or	r24, r20
    150e:	8c 93       	st	X, r24
    1510:	28 c0       	rjmp	.+80     	; 0x1562 <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    1512:	a2 e3       	ldi	r26, 0x32	; 50
    1514:	b0 e0       	ldi	r27, 0x00	; 0
    1516:	e2 e3       	ldi	r30, 0x32	; 50
    1518:	f0 e0       	ldi	r31, 0x00	; 0
    151a:	80 81       	ld	r24, Z
    151c:	48 2f       	mov	r20, r24
    151e:	8b 81       	ldd	r24, Y+3	; 0x03
    1520:	28 2f       	mov	r18, r24
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	02 c0       	rjmp	.+4      	; 0x152e <DIO_enuSetPinValue+0x186>
    152a:	88 0f       	add	r24, r24
    152c:	99 1f       	adc	r25, r25
    152e:	2a 95       	dec	r18
    1530:	e2 f7       	brpl	.-8      	; 0x152a <DIO_enuSetPinValue+0x182>
    1532:	80 95       	com	r24
    1534:	84 23       	and	r24, r20
    1536:	8c 93       	st	X, r24
			PORTD |= (Copy_u8Value << Copy_u8PinID);
    1538:	a2 e3       	ldi	r26, 0x32	; 50
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	e2 e3       	ldi	r30, 0x32	; 50
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	80 81       	ld	r24, Z
    1542:	48 2f       	mov	r20, r24
    1544:	8c 81       	ldd	r24, Y+4	; 0x04
    1546:	28 2f       	mov	r18, r24
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	8b 81       	ldd	r24, Y+3	; 0x03
    154c:	88 2f       	mov	r24, r24
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	b9 01       	movw	r22, r18
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <DIO_enuSetPinValue+0x1b0>
    1554:	66 0f       	add	r22, r22
    1556:	77 1f       	adc	r23, r23
    1558:	8a 95       	dec	r24
    155a:	e2 f7       	brpl	.-8      	; 0x1554 <DIO_enuSetPinValue+0x1ac>
    155c:	cb 01       	movw	r24, r22
    155e:	84 2b       	or	r24, r20
    1560:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	89 83       	std	Y+1, r24	; 0x01
    1566:	02 c0       	rjmp	.+4      	; 0x156c <DIO_enuSetPinValue+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    1568:	83 e0       	ldi	r24, 0x03	; 3
    156a:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    156c:	89 81       	ldd	r24, Y+1	; 0x01
}
    156e:	26 96       	adiw	r28, 0x06	; 6
    1570:	0f b6       	in	r0, 0x3f	; 63
    1572:	f8 94       	cli
    1574:	de bf       	out	0x3e, r29	; 62
    1576:	0f be       	out	0x3f, r0	; 63
    1578:	cd bf       	out	0x3d, r28	; 61
    157a:	cf 91       	pop	r28
    157c:	df 91       	pop	r29
    157e:	08 95       	ret

00001580 <DIO_enuTogPinValue>:

ES_t DIO_enuTogPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID)
{
    1580:	df 93       	push	r29
    1582:	cf 93       	push	r28
    1584:	00 d0       	rcall	.+0      	; 0x1586 <DIO_enuTogPinValue+0x6>
    1586:	00 d0       	rcall	.+0      	; 0x1588 <DIO_enuTogPinValue+0x8>
    1588:	0f 92       	push	r0
    158a:	cd b7       	in	r28, 0x3d	; 61
    158c:	de b7       	in	r29, 0x3e	; 62
    158e:	8a 83       	std	Y+2, r24	; 0x02
    1590:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    1592:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7))
    1594:	8a 81       	ldd	r24, Y+2	; 0x02
    1596:	84 30       	cpi	r24, 0x04	; 4
    1598:	08 f0       	brcs	.+2      	; 0x159c <DIO_enuTogPinValue+0x1c>
    159a:	75 c0       	rjmp	.+234    	; 0x1686 <DIO_enuTogPinValue+0x106>
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	88 30       	cpi	r24, 0x08	; 8
    15a0:	08 f0       	brcs	.+2      	; 0x15a4 <DIO_enuTogPinValue+0x24>
    15a2:	71 c0       	rjmp	.+226    	; 0x1686 <DIO_enuTogPinValue+0x106>
	{
		switch(Copy_u8PortID)
    15a4:	8a 81       	ldd	r24, Y+2	; 0x02
    15a6:	28 2f       	mov	r18, r24
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	3d 83       	std	Y+5, r19	; 0x05
    15ac:	2c 83       	std	Y+4, r18	; 0x04
    15ae:	8c 81       	ldd	r24, Y+4	; 0x04
    15b0:	9d 81       	ldd	r25, Y+5	; 0x05
    15b2:	81 30       	cpi	r24, 0x01	; 1
    15b4:	91 05       	cpc	r25, r1
    15b6:	49 f1       	breq	.+82     	; 0x160a <DIO_enuTogPinValue+0x8a>
    15b8:	2c 81       	ldd	r18, Y+4	; 0x04
    15ba:	3d 81       	ldd	r19, Y+5	; 0x05
    15bc:	22 30       	cpi	r18, 0x02	; 2
    15be:	31 05       	cpc	r19, r1
    15c0:	2c f4       	brge	.+10     	; 0x15cc <DIO_enuTogPinValue+0x4c>
    15c2:	8c 81       	ldd	r24, Y+4	; 0x04
    15c4:	9d 81       	ldd	r25, Y+5	; 0x05
    15c6:	00 97       	sbiw	r24, 0x00	; 0
    15c8:	61 f0       	breq	.+24     	; 0x15e2 <DIO_enuTogPinValue+0x62>
    15ca:	5a c0       	rjmp	.+180    	; 0x1680 <DIO_enuTogPinValue+0x100>
    15cc:	2c 81       	ldd	r18, Y+4	; 0x04
    15ce:	3d 81       	ldd	r19, Y+5	; 0x05
    15d0:	22 30       	cpi	r18, 0x02	; 2
    15d2:	31 05       	cpc	r19, r1
    15d4:	71 f1       	breq	.+92     	; 0x1632 <DIO_enuTogPinValue+0xb2>
    15d6:	8c 81       	ldd	r24, Y+4	; 0x04
    15d8:	9d 81       	ldd	r25, Y+5	; 0x05
    15da:	83 30       	cpi	r24, 0x03	; 3
    15dc:	91 05       	cpc	r25, r1
    15de:	e9 f1       	breq	.+122    	; 0x165a <DIO_enuTogPinValue+0xda>
    15e0:	4f c0       	rjmp	.+158    	; 0x1680 <DIO_enuTogPinValue+0x100>
		{
		case DIO_PORTA:
			PORTA ^=  (DIO_MASK_BIT << Copy_u8PinID);
    15e2:	ab e3       	ldi	r26, 0x3B	; 59
    15e4:	b0 e0       	ldi	r27, 0x00	; 0
    15e6:	eb e3       	ldi	r30, 0x3B	; 59
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	80 81       	ld	r24, Z
    15ec:	48 2f       	mov	r20, r24
    15ee:	8b 81       	ldd	r24, Y+3	; 0x03
    15f0:	28 2f       	mov	r18, r24
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	02 2e       	mov	r0, r18
    15fa:	02 c0       	rjmp	.+4      	; 0x1600 <DIO_enuTogPinValue+0x80>
    15fc:	88 0f       	add	r24, r24
    15fe:	99 1f       	adc	r25, r25
    1600:	0a 94       	dec	r0
    1602:	e2 f7       	brpl	.-8      	; 0x15fc <DIO_enuTogPinValue+0x7c>
    1604:	84 27       	eor	r24, r20
    1606:	8c 93       	st	X, r24
    1608:	3b c0       	rjmp	.+118    	; 0x1680 <DIO_enuTogPinValue+0x100>
			 *       -> 000-1-0000
			 *       -> 101-0-1001
			 * */
			break;
		case DIO_PORTB:
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
    160a:	a8 e3       	ldi	r26, 0x38	; 56
    160c:	b0 e0       	ldi	r27, 0x00	; 0
    160e:	e8 e3       	ldi	r30, 0x38	; 56
    1610:	f0 e0       	ldi	r31, 0x00	; 0
    1612:	80 81       	ld	r24, Z
    1614:	48 2f       	mov	r20, r24
    1616:	8b 81       	ldd	r24, Y+3	; 0x03
    1618:	28 2f       	mov	r18, r24
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	02 2e       	mov	r0, r18
    1622:	02 c0       	rjmp	.+4      	; 0x1628 <DIO_enuTogPinValue+0xa8>
    1624:	88 0f       	add	r24, r24
    1626:	99 1f       	adc	r25, r25
    1628:	0a 94       	dec	r0
    162a:	e2 f7       	brpl	.-8      	; 0x1624 <DIO_enuTogPinValue+0xa4>
    162c:	84 27       	eor	r24, r20
    162e:	8c 93       	st	X, r24
    1630:	27 c0       	rjmp	.+78     	; 0x1680 <DIO_enuTogPinValue+0x100>
			break;
		case DIO_PORTC:
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
    1632:	a5 e3       	ldi	r26, 0x35	; 53
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	e5 e3       	ldi	r30, 0x35	; 53
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 81       	ld	r24, Z
    163c:	48 2f       	mov	r20, r24
    163e:	8b 81       	ldd	r24, Y+3	; 0x03
    1640:	28 2f       	mov	r18, r24
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	02 2e       	mov	r0, r18
    164a:	02 c0       	rjmp	.+4      	; 0x1650 <DIO_enuTogPinValue+0xd0>
    164c:	88 0f       	add	r24, r24
    164e:	99 1f       	adc	r25, r25
    1650:	0a 94       	dec	r0
    1652:	e2 f7       	brpl	.-8      	; 0x164c <DIO_enuTogPinValue+0xcc>
    1654:	84 27       	eor	r24, r20
    1656:	8c 93       	st	X, r24
    1658:	13 c0       	rjmp	.+38     	; 0x1680 <DIO_enuTogPinValue+0x100>
			break;
		case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
    165a:	a2 e3       	ldi	r26, 0x32	; 50
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e2 e3       	ldi	r30, 0x32	; 50
    1660:	f0 e0       	ldi	r31, 0x00	; 0
    1662:	80 81       	ld	r24, Z
    1664:	48 2f       	mov	r20, r24
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	28 2f       	mov	r18, r24
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	02 2e       	mov	r0, r18
    1672:	02 c0       	rjmp	.+4      	; 0x1678 <DIO_enuTogPinValue+0xf8>
    1674:	88 0f       	add	r24, r24
    1676:	99 1f       	adc	r25, r25
    1678:	0a 94       	dec	r0
    167a:	e2 f7       	brpl	.-8      	; 0x1674 <DIO_enuTogPinValue+0xf4>
    167c:	84 27       	eor	r24, r20
    167e:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    1680:	81 e0       	ldi	r24, 0x01	; 1
    1682:	89 83       	std	Y+1, r24	; 0x01
    1684:	02 c0       	rjmp	.+4      	; 0x168a <DIO_enuTogPinValue+0x10a>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    1686:	83 e0       	ldi	r24, 0x03	; 3
    1688:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    168a:	89 81       	ldd	r24, Y+1	; 0x01
}
    168c:	0f 90       	pop	r0
    168e:	0f 90       	pop	r0
    1690:	0f 90       	pop	r0
    1692:	0f 90       	pop	r0
    1694:	0f 90       	pop	r0
    1696:	cf 91       	pop	r28
    1698:	df 91       	pop	r29
    169a:	08 95       	ret

0000169c <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 * Copy_pu8Value)
{
    169c:	df 93       	push	r29
    169e:	cf 93       	push	r28
    16a0:	cd b7       	in	r28, 0x3d	; 61
    16a2:	de b7       	in	r29, 0x3e	; 62
    16a4:	27 97       	sbiw	r28, 0x07	; 7
    16a6:	0f b6       	in	r0, 0x3f	; 63
    16a8:	f8 94       	cli
    16aa:	de bf       	out	0x3e, r29	; 62
    16ac:	0f be       	out	0x3f, r0	; 63
    16ae:	cd bf       	out	0x3d, r28	; 61
    16b0:	8a 83       	std	Y+2, r24	; 0x02
    16b2:	6b 83       	std	Y+3, r22	; 0x03
    16b4:	5d 83       	std	Y+5, r21	; 0x05
    16b6:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    16b8:	19 82       	std	Y+1, r1	; 0x01

	/* Check if wild pointer */
	if(Copy_pu8Value != NULL)
    16ba:	8c 81       	ldd	r24, Y+4	; 0x04
    16bc:	9d 81       	ldd	r25, Y+5	; 0x05
    16be:	00 97       	sbiw	r24, 0x00	; 0
    16c0:	09 f4       	brne	.+2      	; 0x16c4 <DIO_enuGetPinValue+0x28>
    16c2:	7e c0       	rjmp	.+252    	; 0x17c0 <DIO_enuGetPinValue+0x124>
	{
		/* Check Range */
		if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7))
    16c4:	8a 81       	ldd	r24, Y+2	; 0x02
    16c6:	84 30       	cpi	r24, 0x04	; 4
    16c8:	08 f0       	brcs	.+2      	; 0x16cc <DIO_enuGetPinValue+0x30>
    16ca:	77 c0       	rjmp	.+238    	; 0x17ba <DIO_enuGetPinValue+0x11e>
    16cc:	8b 81       	ldd	r24, Y+3	; 0x03
    16ce:	88 30       	cpi	r24, 0x08	; 8
    16d0:	08 f0       	brcs	.+2      	; 0x16d4 <DIO_enuGetPinValue+0x38>
    16d2:	73 c0       	rjmp	.+230    	; 0x17ba <DIO_enuGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
    16d4:	8a 81       	ldd	r24, Y+2	; 0x02
    16d6:	28 2f       	mov	r18, r24
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	3f 83       	std	Y+7, r19	; 0x07
    16dc:	2e 83       	std	Y+6, r18	; 0x06
    16de:	4e 81       	ldd	r20, Y+6	; 0x06
    16e0:	5f 81       	ldd	r21, Y+7	; 0x07
    16e2:	41 30       	cpi	r20, 0x01	; 1
    16e4:	51 05       	cpc	r21, r1
    16e6:	59 f1       	breq	.+86     	; 0x173e <DIO_enuGetPinValue+0xa2>
    16e8:	8e 81       	ldd	r24, Y+6	; 0x06
    16ea:	9f 81       	ldd	r25, Y+7	; 0x07
    16ec:	82 30       	cpi	r24, 0x02	; 2
    16ee:	91 05       	cpc	r25, r1
    16f0:	34 f4       	brge	.+12     	; 0x16fe <DIO_enuGetPinValue+0x62>
    16f2:	2e 81       	ldd	r18, Y+6	; 0x06
    16f4:	3f 81       	ldd	r19, Y+7	; 0x07
    16f6:	21 15       	cp	r18, r1
    16f8:	31 05       	cpc	r19, r1
    16fa:	69 f0       	breq	.+26     	; 0x1716 <DIO_enuGetPinValue+0x7a>
    16fc:	5b c0       	rjmp	.+182    	; 0x17b4 <DIO_enuGetPinValue+0x118>
    16fe:	4e 81       	ldd	r20, Y+6	; 0x06
    1700:	5f 81       	ldd	r21, Y+7	; 0x07
    1702:	42 30       	cpi	r20, 0x02	; 2
    1704:	51 05       	cpc	r21, r1
    1706:	79 f1       	breq	.+94     	; 0x1766 <DIO_enuGetPinValue+0xca>
    1708:	8e 81       	ldd	r24, Y+6	; 0x06
    170a:	9f 81       	ldd	r25, Y+7	; 0x07
    170c:	83 30       	cpi	r24, 0x03	; 3
    170e:	91 05       	cpc	r25, r1
    1710:	09 f4       	brne	.+2      	; 0x1714 <DIO_enuGetPinValue+0x78>
    1712:	3d c0       	rjmp	.+122    	; 0x178e <DIO_enuGetPinValue+0xf2>
    1714:	4f c0       	rjmp	.+158    	; 0x17b4 <DIO_enuGetPinValue+0x118>
			{
			case DIO_PORTA:
				*Copy_pu8Value = ((PINA >> Copy_u8PinID) & DIO_MASK_BIT);
    1716:	e9 e3       	ldi	r30, 0x39	; 57
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	80 81       	ld	r24, Z
    171c:	28 2f       	mov	r18, r24
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	8b 81       	ldd	r24, Y+3	; 0x03
    1722:	88 2f       	mov	r24, r24
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	a9 01       	movw	r20, r18
    1728:	02 c0       	rjmp	.+4      	; 0x172e <DIO_enuGetPinValue+0x92>
    172a:	55 95       	asr	r21
    172c:	47 95       	ror	r20
    172e:	8a 95       	dec	r24
    1730:	e2 f7       	brpl	.-8      	; 0x172a <DIO_enuGetPinValue+0x8e>
    1732:	ca 01       	movw	r24, r20
    1734:	81 70       	andi	r24, 0x01	; 1
    1736:	ec 81       	ldd	r30, Y+4	; 0x04
    1738:	fd 81       	ldd	r31, Y+5	; 0x05
    173a:	80 83       	st	Z, r24
    173c:	3b c0       	rjmp	.+118    	; 0x17b4 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTB:
				*Copy_pu8Value = ((PINB >> Copy_u8PinID) & DIO_MASK_BIT);
    173e:	e6 e3       	ldi	r30, 0x36	; 54
    1740:	f0 e0       	ldi	r31, 0x00	; 0
    1742:	80 81       	ld	r24, Z
    1744:	28 2f       	mov	r18, r24
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	8b 81       	ldd	r24, Y+3	; 0x03
    174a:	88 2f       	mov	r24, r24
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	a9 01       	movw	r20, r18
    1750:	02 c0       	rjmp	.+4      	; 0x1756 <DIO_enuGetPinValue+0xba>
    1752:	55 95       	asr	r21
    1754:	47 95       	ror	r20
    1756:	8a 95       	dec	r24
    1758:	e2 f7       	brpl	.-8      	; 0x1752 <DIO_enuGetPinValue+0xb6>
    175a:	ca 01       	movw	r24, r20
    175c:	81 70       	andi	r24, 0x01	; 1
    175e:	ec 81       	ldd	r30, Y+4	; 0x04
    1760:	fd 81       	ldd	r31, Y+5	; 0x05
    1762:	80 83       	st	Z, r24
    1764:	27 c0       	rjmp	.+78     	; 0x17b4 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTC:
				*Copy_pu8Value = ((PINC >> Copy_u8PinID) & DIO_MASK_BIT);
    1766:	e3 e3       	ldi	r30, 0x33	; 51
    1768:	f0 e0       	ldi	r31, 0x00	; 0
    176a:	80 81       	ld	r24, Z
    176c:	28 2f       	mov	r18, r24
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	8b 81       	ldd	r24, Y+3	; 0x03
    1772:	88 2f       	mov	r24, r24
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	a9 01       	movw	r20, r18
    1778:	02 c0       	rjmp	.+4      	; 0x177e <DIO_enuGetPinValue+0xe2>
    177a:	55 95       	asr	r21
    177c:	47 95       	ror	r20
    177e:	8a 95       	dec	r24
    1780:	e2 f7       	brpl	.-8      	; 0x177a <DIO_enuGetPinValue+0xde>
    1782:	ca 01       	movw	r24, r20
    1784:	81 70       	andi	r24, 0x01	; 1
    1786:	ec 81       	ldd	r30, Y+4	; 0x04
    1788:	fd 81       	ldd	r31, Y+5	; 0x05
    178a:	80 83       	st	Z, r24
    178c:	13 c0       	rjmp	.+38     	; 0x17b4 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTD:
				*Copy_pu8Value = ((PIND >> Copy_u8PinID) & DIO_MASK_BIT);
    178e:	e0 e3       	ldi	r30, 0x30	; 48
    1790:	f0 e0       	ldi	r31, 0x00	; 0
    1792:	80 81       	ld	r24, Z
    1794:	28 2f       	mov	r18, r24
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	8b 81       	ldd	r24, Y+3	; 0x03
    179a:	88 2f       	mov	r24, r24
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	a9 01       	movw	r20, r18
    17a0:	02 c0       	rjmp	.+4      	; 0x17a6 <DIO_enuGetPinValue+0x10a>
    17a2:	55 95       	asr	r21
    17a4:	47 95       	ror	r20
    17a6:	8a 95       	dec	r24
    17a8:	e2 f7       	brpl	.-8      	; 0x17a2 <DIO_enuGetPinValue+0x106>
    17aa:	ca 01       	movw	r24, r20
    17ac:	81 70       	andi	r24, 0x01	; 1
    17ae:	ec 81       	ldd	r30, Y+4	; 0x04
    17b0:	fd 81       	ldd	r31, Y+5	; 0x05
    17b2:	80 83       	st	Z, r24
				break;
			}
			Local_enuErrorState = ES_OK;
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	89 83       	std	Y+1, r24	; 0x01
    17b8:	05 c0       	rjmp	.+10     	; 0x17c4 <DIO_enuGetPinValue+0x128>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    17ba:	83 e0       	ldi	r24, 0x03	; 3
    17bc:	89 83       	std	Y+1, r24	; 0x01
    17be:	02 c0       	rjmp	.+4      	; 0x17c4 <DIO_enuGetPinValue+0x128>
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    17c0:	82 e0       	ldi	r24, 0x02	; 2
    17c2:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    17c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    17c6:	27 96       	adiw	r28, 0x07	; 7
    17c8:	0f b6       	in	r0, 0x3f	; 63
    17ca:	f8 94       	cli
    17cc:	de bf       	out	0x3e, r29	; 62
    17ce:	0f be       	out	0x3f, r0	; 63
    17d0:	cd bf       	out	0x3d, r28	; 61
    17d2:	cf 91       	pop	r28
    17d4:	df 91       	pop	r29
    17d6:	08 95       	ret

000017d8 <Switch_enuInit>:
#include "Switch_private.h"
#include "Switch_config.h"
/***********************	Includes Section End	***********************/

ES_t Switch_enuInit(SW_t * Copy_pAstrSwitches)
{
    17d8:	df 93       	push	r29
    17da:	cf 93       	push	r28
    17dc:	00 d0       	rcall	.+0      	; 0x17de <Switch_enuInit+0x6>
    17de:	00 d0       	rcall	.+0      	; 0x17e0 <Switch_enuInit+0x8>
    17e0:	cd b7       	in	r28, 0x3d	; 61
    17e2:	de b7       	in	r29, 0x3e	; 62
    17e4:	9c 83       	std	Y+4, r25	; 0x04
    17e6:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    17e8:	1a 82       	std	Y+2, r1	; 0x02

	if(Copy_pAstrSwitches != NULL)
    17ea:	8b 81       	ldd	r24, Y+3	; 0x03
    17ec:	9c 81       	ldd	r25, Y+4	; 0x04
    17ee:	00 97       	sbiw	r24, 0x00	; 0
    17f0:	09 f4       	brne	.+2      	; 0x17f4 <Switch_enuInit+0x1c>
    17f2:	5d c0       	rjmp	.+186    	; 0x18ae <Switch_enuInit+0xd6>
	{
		u8 Local_u8Iterator = 0;
    17f4:	19 82       	std	Y+1, r1	; 0x01

		for(Local_u8Iterator = 0; Local_u8Iterator < SW_NUM; Local_u8Iterator++)
    17f6:	19 82       	std	Y+1, r1	; 0x01
    17f8:	55 c0       	rjmp	.+170    	; 0x18a4 <Switch_enuInit+0xcc>
		{
			Local_enuErrorState = DIO_enuSetPinDirection(Copy_pAstrSwitches[Local_u8Iterator].SW_u8PortID,
    17fa:	89 81       	ldd	r24, Y+1	; 0x01
    17fc:	28 2f       	mov	r18, r24
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	c9 01       	movw	r24, r18
    1802:	88 0f       	add	r24, r24
    1804:	99 1f       	adc	r25, r25
    1806:	28 0f       	add	r18, r24
    1808:	39 1f       	adc	r19, r25
    180a:	8b 81       	ldd	r24, Y+3	; 0x03
    180c:	9c 81       	ldd	r25, Y+4	; 0x04
    180e:	fc 01       	movw	r30, r24
    1810:	e2 0f       	add	r30, r18
    1812:	f3 1f       	adc	r31, r19
    1814:	40 81       	ld	r20, Z
    1816:	89 81       	ldd	r24, Y+1	; 0x01
    1818:	28 2f       	mov	r18, r24
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	c9 01       	movw	r24, r18
    181e:	88 0f       	add	r24, r24
    1820:	99 1f       	adc	r25, r25
    1822:	28 0f       	add	r18, r24
    1824:	39 1f       	adc	r19, r25
    1826:	8b 81       	ldd	r24, Y+3	; 0x03
    1828:	9c 81       	ldd	r25, Y+4	; 0x04
    182a:	fc 01       	movw	r30, r24
    182c:	e2 0f       	add	r30, r18
    182e:	f3 1f       	adc	r31, r19
    1830:	91 81       	ldd	r25, Z+1	; 0x01
    1832:	84 2f       	mov	r24, r20
    1834:	69 2f       	mov	r22, r25
    1836:	40 e0       	ldi	r20, 0x00	; 0
    1838:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    183c:	8a 83       	std	Y+2, r24	; 0x02
								   	   	   	   	   	     Copy_pAstrSwitches[Local_u8Iterator].SW_u8PinID,
														 DIO_u8INPUT);
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pAstrSwitches[Local_u8Iterator].SW_u8PortID,
    183e:	89 81       	ldd	r24, Y+1	; 0x01
    1840:	28 2f       	mov	r18, r24
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	c9 01       	movw	r24, r18
    1846:	88 0f       	add	r24, r24
    1848:	99 1f       	adc	r25, r25
    184a:	28 0f       	add	r18, r24
    184c:	39 1f       	adc	r19, r25
    184e:	8b 81       	ldd	r24, Y+3	; 0x03
    1850:	9c 81       	ldd	r25, Y+4	; 0x04
    1852:	fc 01       	movw	r30, r24
    1854:	e2 0f       	add	r30, r18
    1856:	f3 1f       	adc	r31, r19
    1858:	50 81       	ld	r21, Z
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	28 2f       	mov	r18, r24
    185e:	30 e0       	ldi	r19, 0x00	; 0
    1860:	c9 01       	movw	r24, r18
    1862:	88 0f       	add	r24, r24
    1864:	99 1f       	adc	r25, r25
    1866:	28 0f       	add	r18, r24
    1868:	39 1f       	adc	r19, r25
    186a:	8b 81       	ldd	r24, Y+3	; 0x03
    186c:	9c 81       	ldd	r25, Y+4	; 0x04
    186e:	fc 01       	movw	r30, r24
    1870:	e2 0f       	add	r30, r18
    1872:	f3 1f       	adc	r31, r19
    1874:	41 81       	ldd	r20, Z+1	; 0x01
    1876:	89 81       	ldd	r24, Y+1	; 0x01
    1878:	28 2f       	mov	r18, r24
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	c9 01       	movw	r24, r18
    187e:	88 0f       	add	r24, r24
    1880:	99 1f       	adc	r25, r25
    1882:	28 0f       	add	r18, r24
    1884:	39 1f       	adc	r19, r25
    1886:	8b 81       	ldd	r24, Y+3	; 0x03
    1888:	9c 81       	ldd	r25, Y+4	; 0x04
    188a:	fc 01       	movw	r30, r24
    188c:	e2 0f       	add	r30, r18
    188e:	f3 1f       	adc	r31, r19
    1890:	92 81       	ldd	r25, Z+2	; 0x02
    1892:	85 2f       	mov	r24, r21
    1894:	64 2f       	mov	r22, r20
    1896:	49 2f       	mov	r20, r25
    1898:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    189c:	8a 83       	std	Y+2, r24	; 0x02

	if(Copy_pAstrSwitches != NULL)
	{
		u8 Local_u8Iterator = 0;

		for(Local_u8Iterator = 0; Local_u8Iterator < SW_NUM; Local_u8Iterator++)
    189e:	89 81       	ldd	r24, Y+1	; 0x01
    18a0:	8f 5f       	subi	r24, 0xFF	; 255
    18a2:	89 83       	std	Y+1, r24	; 0x01
    18a4:	89 81       	ldd	r24, Y+1	; 0x01
    18a6:	83 30       	cpi	r24, 0x03	; 3
    18a8:	08 f4       	brcc	.+2      	; 0x18ac <Switch_enuInit+0xd4>
    18aa:	a7 cf       	rjmp	.-178    	; 0x17fa <Switch_enuInit+0x22>
    18ac:	02 c0       	rjmp	.+4      	; 0x18b2 <Switch_enuInit+0xda>
		}

	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    18ae:	82 e0       	ldi	r24, 0x02	; 2
    18b0:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enuErrorState;
    18b2:	8a 81       	ldd	r24, Y+2	; 0x02
}
    18b4:	0f 90       	pop	r0
    18b6:	0f 90       	pop	r0
    18b8:	0f 90       	pop	r0
    18ba:	0f 90       	pop	r0
    18bc:	cf 91       	pop	r28
    18be:	df 91       	pop	r29
    18c0:	08 95       	ret

000018c2 <Switch_enuGetState>:

ES_t Switch_enuGetState(SW_t * Copy_pstrSwitches, u8 * Copy_pu8SwState)
{
    18c2:	df 93       	push	r29
    18c4:	cf 93       	push	r28
    18c6:	00 d0       	rcall	.+0      	; 0x18c8 <Switch_enuGetState+0x6>
    18c8:	00 d0       	rcall	.+0      	; 0x18ca <Switch_enuGetState+0x8>
    18ca:	0f 92       	push	r0
    18cc:	cd b7       	in	r28, 0x3d	; 61
    18ce:	de b7       	in	r29, 0x3e	; 62
    18d0:	9b 83       	std	Y+3, r25	; 0x03
    18d2:	8a 83       	std	Y+2, r24	; 0x02
    18d4:	7d 83       	std	Y+5, r23	; 0x05
    18d6:	6c 83       	std	Y+4, r22	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    18d8:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_pstrSwitches != NULL && Copy_pu8SwState != NULL)
    18da:	8a 81       	ldd	r24, Y+2	; 0x02
    18dc:	9b 81       	ldd	r25, Y+3	; 0x03
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	91 f0       	breq	.+36     	; 0x1906 <Switch_enuGetState+0x44>
    18e2:	8c 81       	ldd	r24, Y+4	; 0x04
    18e4:	9d 81       	ldd	r25, Y+5	; 0x05
    18e6:	00 97       	sbiw	r24, 0x00	; 0
    18e8:	71 f0       	breq	.+28     	; 0x1906 <Switch_enuGetState+0x44>
	{
		Local_enuErrorState = DIO_enuGetPinValue(Copy_pstrSwitches->SW_u8PortID,
    18ea:	ea 81       	ldd	r30, Y+2	; 0x02
    18ec:	fb 81       	ldd	r31, Y+3	; 0x03
    18ee:	80 81       	ld	r24, Z
    18f0:	ea 81       	ldd	r30, Y+2	; 0x02
    18f2:	fb 81       	ldd	r31, Y+3	; 0x03
    18f4:	91 81       	ldd	r25, Z+1	; 0x01
    18f6:	2c 81       	ldd	r18, Y+4	; 0x04
    18f8:	3d 81       	ldd	r19, Y+5	; 0x05
    18fa:	69 2f       	mov	r22, r25
    18fc:	a9 01       	movw	r20, r18
    18fe:	0e 94 4e 0b 	call	0x169c	; 0x169c <DIO_enuGetPinValue>
    1902:	89 83       	std	Y+1, r24	; 0x01
    1904:	02 c0       	rjmp	.+4      	; 0x190a <Switch_enuGetState+0x48>
												 Copy_pstrSwitches->SW_u8PinID,
												 Copy_pu8SwState);
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    1906:	82 e0       	ldi	r24, 0x02	; 2
    1908:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    190a:	89 81       	ldd	r24, Y+1	; 0x01
}
    190c:	0f 90       	pop	r0
    190e:	0f 90       	pop	r0
    1910:	0f 90       	pop	r0
    1912:	0f 90       	pop	r0
    1914:	0f 90       	pop	r0
    1916:	cf 91       	pop	r28
    1918:	df 91       	pop	r29
    191a:	08 95       	ret

0000191c <SSDLT_enuInit>:
extern SEG_t SSD_AstrSegConfig[SEG_NUM];
/***********************	Declarations Section End	***********************/


ES_t SSDLT_enuInit(SEG_t * Copy_pstrSegConfig)
{
    191c:	df 93       	push	r29
    191e:	cf 93       	push	r28
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
    1924:	2a 97       	sbiw	r28, 0x0a	; 10
    1926:	0f b6       	in	r0, 0x3f	; 63
    1928:	f8 94       	cli
    192a:	de bf       	out	0x3e, r29	; 62
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	cd bf       	out	0x3d, r28	; 61
    1930:	99 87       	std	Y+9, r25	; 0x09
    1932:	88 87       	std	Y+8, r24	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    1934:	1f 82       	std	Y+7, r1	; 0x07

	u8 Local_u8Iterator = 0;
    1936:	1e 82       	std	Y+6, r1	; 0x06
	u8 Local_u8LastBit  = 0;
    1938:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check  = 0;
    193a:	19 82       	std	Y+1, r1	; 0x01
    193c:	1a 82       	std	Y+2, r1	; 0x02
    193e:	1b 82       	std	Y+3, r1	; 0x03
    1940:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_pstrSegConfig != NULL)
    1942:	88 85       	ldd	r24, Y+8	; 0x08
    1944:	99 85       	ldd	r25, Y+9	; 0x09
    1946:	00 97       	sbiw	r24, 0x00	; 0
    1948:	09 f4       	brne	.+2      	; 0x194c <SSDLT_enuInit+0x30>
    194a:	35 c3       	rjmp	.+1642   	; 0x1fb6 <SSDLT_enuInit+0x69a>
	{
		for(Local_u8Iterator = 0; Local_u8Iterator < SEG_NUM; Local_u8Iterator++)
    194c:	1e 82       	std	Y+6, r1	; 0x06
    194e:	2e c3       	rjmp	.+1628   	; 0x1fac <SSDLT_enuInit+0x690>
		{
			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8APort,
    1950:	8e 81       	ldd	r24, Y+6	; 0x06
    1952:	48 2f       	mov	r20, r24
    1954:	50 e0       	ldi	r21, 0x00	; 0
    1956:	ca 01       	movw	r24, r20
    1958:	88 0f       	add	r24, r24
    195a:	99 1f       	adc	r25, r25
    195c:	9c 01       	movw	r18, r24
    195e:	22 0f       	add	r18, r18
    1960:	33 1f       	adc	r19, r19
    1962:	22 0f       	add	r18, r18
    1964:	33 1f       	adc	r19, r19
    1966:	22 0f       	add	r18, r18
    1968:	33 1f       	adc	r19, r19
    196a:	82 0f       	add	r24, r18
    196c:	93 1f       	adc	r25, r19
    196e:	9c 01       	movw	r18, r24
    1970:	24 0f       	add	r18, r20
    1972:	35 1f       	adc	r19, r21
    1974:	88 85       	ldd	r24, Y+8	; 0x08
    1976:	99 85       	ldd	r25, Y+9	; 0x09
    1978:	fc 01       	movw	r30, r24
    197a:	e2 0f       	add	r30, r18
    197c:	f3 1f       	adc	r31, r19
    197e:	60 81       	ld	r22, Z
    1980:	8e 81       	ldd	r24, Y+6	; 0x06
    1982:	48 2f       	mov	r20, r24
    1984:	50 e0       	ldi	r21, 0x00	; 0
    1986:	ca 01       	movw	r24, r20
    1988:	88 0f       	add	r24, r24
    198a:	99 1f       	adc	r25, r25
    198c:	9c 01       	movw	r18, r24
    198e:	22 0f       	add	r18, r18
    1990:	33 1f       	adc	r19, r19
    1992:	22 0f       	add	r18, r18
    1994:	33 1f       	adc	r19, r19
    1996:	22 0f       	add	r18, r18
    1998:	33 1f       	adc	r19, r19
    199a:	82 0f       	add	r24, r18
    199c:	93 1f       	adc	r25, r19
    199e:	9c 01       	movw	r18, r24
    19a0:	24 0f       	add	r18, r20
    19a2:	35 1f       	adc	r19, r21
    19a4:	88 85       	ldd	r24, Y+8	; 0x08
    19a6:	99 85       	ldd	r25, Y+9	; 0x09
    19a8:	fc 01       	movw	r30, r24
    19aa:	e2 0f       	add	r30, r18
    19ac:	f3 1f       	adc	r31, r19
    19ae:	91 81       	ldd	r25, Z+1	; 0x01
    19b0:	86 2f       	mov	r24, r22
    19b2:	69 2f       	mov	r22, r25
    19b4:	41 e0       	ldi	r20, 0x01	; 1
    19b6:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    19ba:	28 2f       	mov	r18, r24
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	40 e0       	ldi	r20, 0x00	; 0
    19c0:	50 e0       	ldi	r21, 0x00	; 0
    19c2:	89 81       	ldd	r24, Y+1	; 0x01
    19c4:	9a 81       	ldd	r25, Y+2	; 0x02
    19c6:	ab 81       	ldd	r26, Y+3	; 0x03
    19c8:	bc 81       	ldd	r27, Y+4	; 0x04
    19ca:	82 2b       	or	r24, r18
    19cc:	93 2b       	or	r25, r19
    19ce:	a4 2b       	or	r26, r20
    19d0:	b5 2b       	or	r27, r21
    19d2:	89 83       	std	Y+1, r24	; 0x01
    19d4:	9a 83       	std	Y+2, r25	; 0x02
    19d6:	ab 83       	std	Y+3, r26	; 0x03
    19d8:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8APin, DIO_u8OUTPUT) << 0);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8BPort,
    19da:	8e 81       	ldd	r24, Y+6	; 0x06
    19dc:	48 2f       	mov	r20, r24
    19de:	50 e0       	ldi	r21, 0x00	; 0
    19e0:	ca 01       	movw	r24, r20
    19e2:	88 0f       	add	r24, r24
    19e4:	99 1f       	adc	r25, r25
    19e6:	9c 01       	movw	r18, r24
    19e8:	22 0f       	add	r18, r18
    19ea:	33 1f       	adc	r19, r19
    19ec:	22 0f       	add	r18, r18
    19ee:	33 1f       	adc	r19, r19
    19f0:	22 0f       	add	r18, r18
    19f2:	33 1f       	adc	r19, r19
    19f4:	82 0f       	add	r24, r18
    19f6:	93 1f       	adc	r25, r19
    19f8:	9c 01       	movw	r18, r24
    19fa:	24 0f       	add	r18, r20
    19fc:	35 1f       	adc	r19, r21
    19fe:	88 85       	ldd	r24, Y+8	; 0x08
    1a00:	99 85       	ldd	r25, Y+9	; 0x09
    1a02:	fc 01       	movw	r30, r24
    1a04:	e2 0f       	add	r30, r18
    1a06:	f3 1f       	adc	r31, r19
    1a08:	62 81       	ldd	r22, Z+2	; 0x02
    1a0a:	8e 81       	ldd	r24, Y+6	; 0x06
    1a0c:	48 2f       	mov	r20, r24
    1a0e:	50 e0       	ldi	r21, 0x00	; 0
    1a10:	ca 01       	movw	r24, r20
    1a12:	88 0f       	add	r24, r24
    1a14:	99 1f       	adc	r25, r25
    1a16:	9c 01       	movw	r18, r24
    1a18:	22 0f       	add	r18, r18
    1a1a:	33 1f       	adc	r19, r19
    1a1c:	22 0f       	add	r18, r18
    1a1e:	33 1f       	adc	r19, r19
    1a20:	22 0f       	add	r18, r18
    1a22:	33 1f       	adc	r19, r19
    1a24:	82 0f       	add	r24, r18
    1a26:	93 1f       	adc	r25, r19
    1a28:	9c 01       	movw	r18, r24
    1a2a:	24 0f       	add	r18, r20
    1a2c:	35 1f       	adc	r19, r21
    1a2e:	88 85       	ldd	r24, Y+8	; 0x08
    1a30:	99 85       	ldd	r25, Y+9	; 0x09
    1a32:	fc 01       	movw	r30, r24
    1a34:	e2 0f       	add	r30, r18
    1a36:	f3 1f       	adc	r31, r19
    1a38:	93 81       	ldd	r25, Z+3	; 0x03
    1a3a:	86 2f       	mov	r24, r22
    1a3c:	69 2f       	mov	r22, r25
    1a3e:	41 e0       	ldi	r20, 0x01	; 1
    1a40:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1a44:	88 2f       	mov	r24, r24
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	88 0f       	add	r24, r24
    1a4a:	99 1f       	adc	r25, r25
    1a4c:	88 0f       	add	r24, r24
    1a4e:	99 1f       	adc	r25, r25
    1a50:	88 0f       	add	r24, r24
    1a52:	99 1f       	adc	r25, r25
    1a54:	9c 01       	movw	r18, r24
    1a56:	44 27       	eor	r20, r20
    1a58:	37 fd       	sbrc	r19, 7
    1a5a:	40 95       	com	r20
    1a5c:	54 2f       	mov	r21, r20
    1a5e:	89 81       	ldd	r24, Y+1	; 0x01
    1a60:	9a 81       	ldd	r25, Y+2	; 0x02
    1a62:	ab 81       	ldd	r26, Y+3	; 0x03
    1a64:	bc 81       	ldd	r27, Y+4	; 0x04
    1a66:	82 2b       	or	r24, r18
    1a68:	93 2b       	or	r25, r19
    1a6a:	a4 2b       	or	r26, r20
    1a6c:	b5 2b       	or	r27, r21
    1a6e:	89 83       	std	Y+1, r24	; 0x01
    1a70:	9a 83       	std	Y+2, r25	; 0x02
    1a72:	ab 83       	std	Y+3, r26	; 0x03
    1a74:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8BPin, DIO_u8OUTPUT) << 3);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CPort,
    1a76:	8e 81       	ldd	r24, Y+6	; 0x06
    1a78:	48 2f       	mov	r20, r24
    1a7a:	50 e0       	ldi	r21, 0x00	; 0
    1a7c:	ca 01       	movw	r24, r20
    1a7e:	88 0f       	add	r24, r24
    1a80:	99 1f       	adc	r25, r25
    1a82:	9c 01       	movw	r18, r24
    1a84:	22 0f       	add	r18, r18
    1a86:	33 1f       	adc	r19, r19
    1a88:	22 0f       	add	r18, r18
    1a8a:	33 1f       	adc	r19, r19
    1a8c:	22 0f       	add	r18, r18
    1a8e:	33 1f       	adc	r19, r19
    1a90:	82 0f       	add	r24, r18
    1a92:	93 1f       	adc	r25, r19
    1a94:	9c 01       	movw	r18, r24
    1a96:	24 0f       	add	r18, r20
    1a98:	35 1f       	adc	r19, r21
    1a9a:	88 85       	ldd	r24, Y+8	; 0x08
    1a9c:	99 85       	ldd	r25, Y+9	; 0x09
    1a9e:	fc 01       	movw	r30, r24
    1aa0:	e2 0f       	add	r30, r18
    1aa2:	f3 1f       	adc	r31, r19
    1aa4:	64 81       	ldd	r22, Z+4	; 0x04
    1aa6:	8e 81       	ldd	r24, Y+6	; 0x06
    1aa8:	48 2f       	mov	r20, r24
    1aaa:	50 e0       	ldi	r21, 0x00	; 0
    1aac:	ca 01       	movw	r24, r20
    1aae:	88 0f       	add	r24, r24
    1ab0:	99 1f       	adc	r25, r25
    1ab2:	9c 01       	movw	r18, r24
    1ab4:	22 0f       	add	r18, r18
    1ab6:	33 1f       	adc	r19, r19
    1ab8:	22 0f       	add	r18, r18
    1aba:	33 1f       	adc	r19, r19
    1abc:	22 0f       	add	r18, r18
    1abe:	33 1f       	adc	r19, r19
    1ac0:	82 0f       	add	r24, r18
    1ac2:	93 1f       	adc	r25, r19
    1ac4:	9c 01       	movw	r18, r24
    1ac6:	24 0f       	add	r18, r20
    1ac8:	35 1f       	adc	r19, r21
    1aca:	88 85       	ldd	r24, Y+8	; 0x08
    1acc:	99 85       	ldd	r25, Y+9	; 0x09
    1ace:	fc 01       	movw	r30, r24
    1ad0:	e2 0f       	add	r30, r18
    1ad2:	f3 1f       	adc	r31, r19
    1ad4:	95 81       	ldd	r25, Z+5	; 0x05
    1ad6:	86 2f       	mov	r24, r22
    1ad8:	69 2f       	mov	r22, r25
    1ada:	41 e0       	ldi	r20, 0x01	; 1
    1adc:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1ae0:	88 2f       	mov	r24, r24
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	00 24       	eor	r0, r0
    1ae6:	96 95       	lsr	r25
    1ae8:	87 95       	ror	r24
    1aea:	07 94       	ror	r0
    1aec:	96 95       	lsr	r25
    1aee:	87 95       	ror	r24
    1af0:	07 94       	ror	r0
    1af2:	98 2f       	mov	r25, r24
    1af4:	80 2d       	mov	r24, r0
    1af6:	9c 01       	movw	r18, r24
    1af8:	44 27       	eor	r20, r20
    1afa:	37 fd       	sbrc	r19, 7
    1afc:	40 95       	com	r20
    1afe:	54 2f       	mov	r21, r20
    1b00:	89 81       	ldd	r24, Y+1	; 0x01
    1b02:	9a 81       	ldd	r25, Y+2	; 0x02
    1b04:	ab 81       	ldd	r26, Y+3	; 0x03
    1b06:	bc 81       	ldd	r27, Y+4	; 0x04
    1b08:	82 2b       	or	r24, r18
    1b0a:	93 2b       	or	r25, r19
    1b0c:	a4 2b       	or	r26, r20
    1b0e:	b5 2b       	or	r27, r21
    1b10:	89 83       	std	Y+1, r24	; 0x01
    1b12:	9a 83       	std	Y+2, r25	; 0x02
    1b14:	ab 83       	std	Y+3, r26	; 0x03
    1b16:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CPin, DIO_u8OUTPUT) << 6);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DPort,
    1b18:	8e 81       	ldd	r24, Y+6	; 0x06
    1b1a:	48 2f       	mov	r20, r24
    1b1c:	50 e0       	ldi	r21, 0x00	; 0
    1b1e:	ca 01       	movw	r24, r20
    1b20:	88 0f       	add	r24, r24
    1b22:	99 1f       	adc	r25, r25
    1b24:	9c 01       	movw	r18, r24
    1b26:	22 0f       	add	r18, r18
    1b28:	33 1f       	adc	r19, r19
    1b2a:	22 0f       	add	r18, r18
    1b2c:	33 1f       	adc	r19, r19
    1b2e:	22 0f       	add	r18, r18
    1b30:	33 1f       	adc	r19, r19
    1b32:	82 0f       	add	r24, r18
    1b34:	93 1f       	adc	r25, r19
    1b36:	9c 01       	movw	r18, r24
    1b38:	24 0f       	add	r18, r20
    1b3a:	35 1f       	adc	r19, r21
    1b3c:	88 85       	ldd	r24, Y+8	; 0x08
    1b3e:	99 85       	ldd	r25, Y+9	; 0x09
    1b40:	fc 01       	movw	r30, r24
    1b42:	e2 0f       	add	r30, r18
    1b44:	f3 1f       	adc	r31, r19
    1b46:	66 81       	ldd	r22, Z+6	; 0x06
    1b48:	8e 81       	ldd	r24, Y+6	; 0x06
    1b4a:	48 2f       	mov	r20, r24
    1b4c:	50 e0       	ldi	r21, 0x00	; 0
    1b4e:	ca 01       	movw	r24, r20
    1b50:	88 0f       	add	r24, r24
    1b52:	99 1f       	adc	r25, r25
    1b54:	9c 01       	movw	r18, r24
    1b56:	22 0f       	add	r18, r18
    1b58:	33 1f       	adc	r19, r19
    1b5a:	22 0f       	add	r18, r18
    1b5c:	33 1f       	adc	r19, r19
    1b5e:	22 0f       	add	r18, r18
    1b60:	33 1f       	adc	r19, r19
    1b62:	82 0f       	add	r24, r18
    1b64:	93 1f       	adc	r25, r19
    1b66:	9c 01       	movw	r18, r24
    1b68:	24 0f       	add	r18, r20
    1b6a:	35 1f       	adc	r19, r21
    1b6c:	88 85       	ldd	r24, Y+8	; 0x08
    1b6e:	99 85       	ldd	r25, Y+9	; 0x09
    1b70:	fc 01       	movw	r30, r24
    1b72:	e2 0f       	add	r30, r18
    1b74:	f3 1f       	adc	r31, r19
    1b76:	97 81       	ldd	r25, Z+7	; 0x07
    1b78:	86 2f       	mov	r24, r22
    1b7a:	69 2f       	mov	r22, r25
    1b7c:	41 e0       	ldi	r20, 0x01	; 1
    1b7e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1b82:	88 2f       	mov	r24, r24
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	98 2f       	mov	r25, r24
    1b88:	88 27       	eor	r24, r24
    1b8a:	99 0f       	add	r25, r25
    1b8c:	9c 01       	movw	r18, r24
    1b8e:	44 27       	eor	r20, r20
    1b90:	37 fd       	sbrc	r19, 7
    1b92:	40 95       	com	r20
    1b94:	54 2f       	mov	r21, r20
    1b96:	89 81       	ldd	r24, Y+1	; 0x01
    1b98:	9a 81       	ldd	r25, Y+2	; 0x02
    1b9a:	ab 81       	ldd	r26, Y+3	; 0x03
    1b9c:	bc 81       	ldd	r27, Y+4	; 0x04
    1b9e:	82 2b       	or	r24, r18
    1ba0:	93 2b       	or	r25, r19
    1ba2:	a4 2b       	or	r26, r20
    1ba4:	b5 2b       	or	r27, r21
    1ba6:	89 83       	std	Y+1, r24	; 0x01
    1ba8:	9a 83       	std	Y+2, r25	; 0x02
    1baa:	ab 83       	std	Y+3, r26	; 0x03
    1bac:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DPin, DIO_u8OUTPUT) << 9);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8EPort,
    1bae:	8e 81       	ldd	r24, Y+6	; 0x06
    1bb0:	48 2f       	mov	r20, r24
    1bb2:	50 e0       	ldi	r21, 0x00	; 0
    1bb4:	ca 01       	movw	r24, r20
    1bb6:	88 0f       	add	r24, r24
    1bb8:	99 1f       	adc	r25, r25
    1bba:	9c 01       	movw	r18, r24
    1bbc:	22 0f       	add	r18, r18
    1bbe:	33 1f       	adc	r19, r19
    1bc0:	22 0f       	add	r18, r18
    1bc2:	33 1f       	adc	r19, r19
    1bc4:	22 0f       	add	r18, r18
    1bc6:	33 1f       	adc	r19, r19
    1bc8:	82 0f       	add	r24, r18
    1bca:	93 1f       	adc	r25, r19
    1bcc:	9c 01       	movw	r18, r24
    1bce:	24 0f       	add	r18, r20
    1bd0:	35 1f       	adc	r19, r21
    1bd2:	88 85       	ldd	r24, Y+8	; 0x08
    1bd4:	99 85       	ldd	r25, Y+9	; 0x09
    1bd6:	fc 01       	movw	r30, r24
    1bd8:	e2 0f       	add	r30, r18
    1bda:	f3 1f       	adc	r31, r19
    1bdc:	60 85       	ldd	r22, Z+8	; 0x08
    1bde:	8e 81       	ldd	r24, Y+6	; 0x06
    1be0:	48 2f       	mov	r20, r24
    1be2:	50 e0       	ldi	r21, 0x00	; 0
    1be4:	ca 01       	movw	r24, r20
    1be6:	88 0f       	add	r24, r24
    1be8:	99 1f       	adc	r25, r25
    1bea:	9c 01       	movw	r18, r24
    1bec:	22 0f       	add	r18, r18
    1bee:	33 1f       	adc	r19, r19
    1bf0:	22 0f       	add	r18, r18
    1bf2:	33 1f       	adc	r19, r19
    1bf4:	22 0f       	add	r18, r18
    1bf6:	33 1f       	adc	r19, r19
    1bf8:	82 0f       	add	r24, r18
    1bfa:	93 1f       	adc	r25, r19
    1bfc:	9c 01       	movw	r18, r24
    1bfe:	24 0f       	add	r18, r20
    1c00:	35 1f       	adc	r19, r21
    1c02:	88 85       	ldd	r24, Y+8	; 0x08
    1c04:	99 85       	ldd	r25, Y+9	; 0x09
    1c06:	fc 01       	movw	r30, r24
    1c08:	e2 0f       	add	r30, r18
    1c0a:	f3 1f       	adc	r31, r19
    1c0c:	91 85       	ldd	r25, Z+9	; 0x09
    1c0e:	86 2f       	mov	r24, r22
    1c10:	69 2f       	mov	r22, r25
    1c12:	41 e0       	ldi	r20, 0x01	; 1
    1c14:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1c18:	88 2f       	mov	r24, r24
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	98 2f       	mov	r25, r24
    1c1e:	88 27       	eor	r24, r24
    1c20:	92 95       	swap	r25
    1c22:	90 7f       	andi	r25, 0xF0	; 240
    1c24:	9c 01       	movw	r18, r24
    1c26:	44 27       	eor	r20, r20
    1c28:	37 fd       	sbrc	r19, 7
    1c2a:	40 95       	com	r20
    1c2c:	54 2f       	mov	r21, r20
    1c2e:	89 81       	ldd	r24, Y+1	; 0x01
    1c30:	9a 81       	ldd	r25, Y+2	; 0x02
    1c32:	ab 81       	ldd	r26, Y+3	; 0x03
    1c34:	bc 81       	ldd	r27, Y+4	; 0x04
    1c36:	82 2b       	or	r24, r18
    1c38:	93 2b       	or	r25, r19
    1c3a:	a4 2b       	or	r26, r20
    1c3c:	b5 2b       	or	r27, r21
    1c3e:	89 83       	std	Y+1, r24	; 0x01
    1c40:	9a 83       	std	Y+2, r25	; 0x02
    1c42:	ab 83       	std	Y+3, r26	; 0x03
    1c44:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8EPin, DIO_u8OUTPUT) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8FPort,
    1c46:	8e 81       	ldd	r24, Y+6	; 0x06
    1c48:	48 2f       	mov	r20, r24
    1c4a:	50 e0       	ldi	r21, 0x00	; 0
    1c4c:	ca 01       	movw	r24, r20
    1c4e:	88 0f       	add	r24, r24
    1c50:	99 1f       	adc	r25, r25
    1c52:	9c 01       	movw	r18, r24
    1c54:	22 0f       	add	r18, r18
    1c56:	33 1f       	adc	r19, r19
    1c58:	22 0f       	add	r18, r18
    1c5a:	33 1f       	adc	r19, r19
    1c5c:	22 0f       	add	r18, r18
    1c5e:	33 1f       	adc	r19, r19
    1c60:	82 0f       	add	r24, r18
    1c62:	93 1f       	adc	r25, r19
    1c64:	9c 01       	movw	r18, r24
    1c66:	24 0f       	add	r18, r20
    1c68:	35 1f       	adc	r19, r21
    1c6a:	88 85       	ldd	r24, Y+8	; 0x08
    1c6c:	99 85       	ldd	r25, Y+9	; 0x09
    1c6e:	fc 01       	movw	r30, r24
    1c70:	e2 0f       	add	r30, r18
    1c72:	f3 1f       	adc	r31, r19
    1c74:	62 85       	ldd	r22, Z+10	; 0x0a
    1c76:	8e 81       	ldd	r24, Y+6	; 0x06
    1c78:	48 2f       	mov	r20, r24
    1c7a:	50 e0       	ldi	r21, 0x00	; 0
    1c7c:	ca 01       	movw	r24, r20
    1c7e:	88 0f       	add	r24, r24
    1c80:	99 1f       	adc	r25, r25
    1c82:	9c 01       	movw	r18, r24
    1c84:	22 0f       	add	r18, r18
    1c86:	33 1f       	adc	r19, r19
    1c88:	22 0f       	add	r18, r18
    1c8a:	33 1f       	adc	r19, r19
    1c8c:	22 0f       	add	r18, r18
    1c8e:	33 1f       	adc	r19, r19
    1c90:	82 0f       	add	r24, r18
    1c92:	93 1f       	adc	r25, r19
    1c94:	9c 01       	movw	r18, r24
    1c96:	24 0f       	add	r18, r20
    1c98:	35 1f       	adc	r19, r21
    1c9a:	88 85       	ldd	r24, Y+8	; 0x08
    1c9c:	99 85       	ldd	r25, Y+9	; 0x09
    1c9e:	fc 01       	movw	r30, r24
    1ca0:	e2 0f       	add	r30, r18
    1ca2:	f3 1f       	adc	r31, r19
    1ca4:	93 85       	ldd	r25, Z+11	; 0x0b
    1ca6:	86 2f       	mov	r24, r22
    1ca8:	69 2f       	mov	r22, r25
    1caa:	41 e0       	ldi	r20, 0x01	; 1
    1cac:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1cb0:	88 2f       	mov	r24, r24
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	a0 e0       	ldi	r26, 0x00	; 0
    1cb6:	b0 e0       	ldi	r27, 0x00	; 0
    1cb8:	9c 01       	movw	r18, r24
    1cba:	ad 01       	movw	r20, r26
    1cbc:	01 2e       	mov	r0, r17
    1cbe:	1f e0       	ldi	r17, 0x0F	; 15
    1cc0:	22 0f       	add	r18, r18
    1cc2:	33 1f       	adc	r19, r19
    1cc4:	44 1f       	adc	r20, r20
    1cc6:	55 1f       	adc	r21, r21
    1cc8:	1a 95       	dec	r17
    1cca:	d1 f7       	brne	.-12     	; 0x1cc0 <SSDLT_enuInit+0x3a4>
    1ccc:	10 2d       	mov	r17, r0
    1cce:	89 81       	ldd	r24, Y+1	; 0x01
    1cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    1cd2:	ab 81       	ldd	r26, Y+3	; 0x03
    1cd4:	bc 81       	ldd	r27, Y+4	; 0x04
    1cd6:	82 2b       	or	r24, r18
    1cd8:	93 2b       	or	r25, r19
    1cda:	a4 2b       	or	r26, r20
    1cdc:	b5 2b       	or	r27, r21
    1cde:	89 83       	std	Y+1, r24	; 0x01
    1ce0:	9a 83       	std	Y+2, r25	; 0x02
    1ce2:	ab 83       	std	Y+3, r26	; 0x03
    1ce4:	bc 83       	std	Y+4, r27	; 0x04
													 Copy_pstrSegConfig[Local_u8Iterator].SEG_u8FPin, DIO_u8OUTPUT)) << 15);

			Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8GPort,
    1ce6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ce8:	48 2f       	mov	r20, r24
    1cea:	50 e0       	ldi	r21, 0x00	; 0
    1cec:	ca 01       	movw	r24, r20
    1cee:	88 0f       	add	r24, r24
    1cf0:	99 1f       	adc	r25, r25
    1cf2:	9c 01       	movw	r18, r24
    1cf4:	22 0f       	add	r18, r18
    1cf6:	33 1f       	adc	r19, r19
    1cf8:	22 0f       	add	r18, r18
    1cfa:	33 1f       	adc	r19, r19
    1cfc:	22 0f       	add	r18, r18
    1cfe:	33 1f       	adc	r19, r19
    1d00:	82 0f       	add	r24, r18
    1d02:	93 1f       	adc	r25, r19
    1d04:	9c 01       	movw	r18, r24
    1d06:	24 0f       	add	r18, r20
    1d08:	35 1f       	adc	r19, r21
    1d0a:	88 85       	ldd	r24, Y+8	; 0x08
    1d0c:	99 85       	ldd	r25, Y+9	; 0x09
    1d0e:	fc 01       	movw	r30, r24
    1d10:	e2 0f       	add	r30, r18
    1d12:	f3 1f       	adc	r31, r19
    1d14:	64 85       	ldd	r22, Z+12	; 0x0c
    1d16:	8e 81       	ldd	r24, Y+6	; 0x06
    1d18:	48 2f       	mov	r20, r24
    1d1a:	50 e0       	ldi	r21, 0x00	; 0
    1d1c:	ca 01       	movw	r24, r20
    1d1e:	88 0f       	add	r24, r24
    1d20:	99 1f       	adc	r25, r25
    1d22:	9c 01       	movw	r18, r24
    1d24:	22 0f       	add	r18, r18
    1d26:	33 1f       	adc	r19, r19
    1d28:	22 0f       	add	r18, r18
    1d2a:	33 1f       	adc	r19, r19
    1d2c:	22 0f       	add	r18, r18
    1d2e:	33 1f       	adc	r19, r19
    1d30:	82 0f       	add	r24, r18
    1d32:	93 1f       	adc	r25, r19
    1d34:	9c 01       	movw	r18, r24
    1d36:	24 0f       	add	r18, r20
    1d38:	35 1f       	adc	r19, r21
    1d3a:	88 85       	ldd	r24, Y+8	; 0x08
    1d3c:	99 85       	ldd	r25, Y+9	; 0x09
    1d3e:	fc 01       	movw	r30, r24
    1d40:	e2 0f       	add	r30, r18
    1d42:	f3 1f       	adc	r31, r19
    1d44:	95 85       	ldd	r25, Z+13	; 0x0d
    1d46:	86 2f       	mov	r24, r22
    1d48:	69 2f       	mov	r22, r25
    1d4a:	41 e0       	ldi	r20, 0x01	; 1
    1d4c:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1d50:	88 2f       	mov	r24, r24
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	a0 e0       	ldi	r26, 0x00	; 0
    1d56:	b0 e0       	ldi	r27, 0x00	; 0
    1d58:	9c 01       	movw	r18, r24
    1d5a:	ad 01       	movw	r20, r26
    1d5c:	01 2e       	mov	r0, r17
    1d5e:	12 e1       	ldi	r17, 0x12	; 18
    1d60:	22 0f       	add	r18, r18
    1d62:	33 1f       	adc	r19, r19
    1d64:	44 1f       	adc	r20, r20
    1d66:	55 1f       	adc	r21, r21
    1d68:	1a 95       	dec	r17
    1d6a:	d1 f7       	brne	.-12     	; 0x1d60 <SSDLT_enuInit+0x444>
    1d6c:	10 2d       	mov	r17, r0
    1d6e:	89 81       	ldd	r24, Y+1	; 0x01
    1d70:	9a 81       	ldd	r25, Y+2	; 0x02
    1d72:	ab 81       	ldd	r26, Y+3	; 0x03
    1d74:	bc 81       	ldd	r27, Y+4	; 0x04
    1d76:	82 2b       	or	r24, r18
    1d78:	93 2b       	or	r25, r19
    1d7a:	a4 2b       	or	r26, r20
    1d7c:	b5 2b       	or	r27, r21
    1d7e:	89 83       	std	Y+1, r24	; 0x01
    1d80:	9a 83       	std	Y+2, r25	; 0x02
    1d82:	ab 83       	std	Y+3, r26	; 0x03
    1d84:	bc 83       	std	Y+4, r27	; 0x04
													 Copy_pstrSegConfig[Local_u8Iterator].SEG_u8GPin, DIO_u8OUTPUT)) << 18);
			Local_u8LastBit = 21;
    1d86:	85 e1       	ldi	r24, 0x15	; 21
    1d88:	8d 83       	std	Y+5, r24	; 0x05

			if(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Port != NOT_CONNECTED ||
    1d8a:	8e 81       	ldd	r24, Y+6	; 0x06
    1d8c:	48 2f       	mov	r20, r24
    1d8e:	50 e0       	ldi	r21, 0x00	; 0
    1d90:	ca 01       	movw	r24, r20
    1d92:	88 0f       	add	r24, r24
    1d94:	99 1f       	adc	r25, r25
    1d96:	9c 01       	movw	r18, r24
    1d98:	22 0f       	add	r18, r18
    1d9a:	33 1f       	adc	r19, r19
    1d9c:	22 0f       	add	r18, r18
    1d9e:	33 1f       	adc	r19, r19
    1da0:	22 0f       	add	r18, r18
    1da2:	33 1f       	adc	r19, r19
    1da4:	82 0f       	add	r24, r18
    1da6:	93 1f       	adc	r25, r19
    1da8:	9c 01       	movw	r18, r24
    1daa:	24 0f       	add	r18, r20
    1dac:	35 1f       	adc	r19, r21
    1dae:	88 85       	ldd	r24, Y+8	; 0x08
    1db0:	99 85       	ldd	r25, Y+9	; 0x09
    1db2:	fc 01       	movw	r30, r24
    1db4:	e2 0f       	add	r30, r18
    1db6:	f3 1f       	adc	r31, r19
    1db8:	86 85       	ldd	r24, Z+14	; 0x0e
    1dba:	82 30       	cpi	r24, 0x02	; 2
    1dbc:	d9 f4       	brne	.+54     	; 0x1df4 <SSDLT_enuInit+0x4d8>
    1dbe:	8e 81       	ldd	r24, Y+6	; 0x06
    1dc0:	48 2f       	mov	r20, r24
    1dc2:	50 e0       	ldi	r21, 0x00	; 0
    1dc4:	ca 01       	movw	r24, r20
    1dc6:	88 0f       	add	r24, r24
    1dc8:	99 1f       	adc	r25, r25
    1dca:	9c 01       	movw	r18, r24
    1dcc:	22 0f       	add	r18, r18
    1dce:	33 1f       	adc	r19, r19
    1dd0:	22 0f       	add	r18, r18
    1dd2:	33 1f       	adc	r19, r19
    1dd4:	22 0f       	add	r18, r18
    1dd6:	33 1f       	adc	r19, r19
    1dd8:	82 0f       	add	r24, r18
    1dda:	93 1f       	adc	r25, r19
    1ddc:	9c 01       	movw	r18, r24
    1dde:	24 0f       	add	r18, r20
    1de0:	35 1f       	adc	r19, r21
    1de2:	88 85       	ldd	r24, Y+8	; 0x08
    1de4:	99 85       	ldd	r25, Y+9	; 0x09
    1de6:	fc 01       	movw	r30, r24
    1de8:	e2 0f       	add	r30, r18
    1dea:	f3 1f       	adc	r31, r19
    1dec:	87 85       	ldd	r24, Z+15	; 0x0f
    1dee:	82 30       	cpi	r24, 0x02	; 2
    1df0:	09 f4       	brne	.+2      	; 0x1df4 <SSDLT_enuInit+0x4d8>
    1df2:	52 c0       	rjmp	.+164    	; 0x1e98 <SSDLT_enuInit+0x57c>
			   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Pin != NOT_CONNECTED)
			{
				Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Port,
    1df4:	8e 81       	ldd	r24, Y+6	; 0x06
    1df6:	48 2f       	mov	r20, r24
    1df8:	50 e0       	ldi	r21, 0x00	; 0
    1dfa:	ca 01       	movw	r24, r20
    1dfc:	88 0f       	add	r24, r24
    1dfe:	99 1f       	adc	r25, r25
    1e00:	9c 01       	movw	r18, r24
    1e02:	22 0f       	add	r18, r18
    1e04:	33 1f       	adc	r19, r19
    1e06:	22 0f       	add	r18, r18
    1e08:	33 1f       	adc	r19, r19
    1e0a:	22 0f       	add	r18, r18
    1e0c:	33 1f       	adc	r19, r19
    1e0e:	82 0f       	add	r24, r18
    1e10:	93 1f       	adc	r25, r19
    1e12:	9c 01       	movw	r18, r24
    1e14:	24 0f       	add	r18, r20
    1e16:	35 1f       	adc	r19, r21
    1e18:	88 85       	ldd	r24, Y+8	; 0x08
    1e1a:	99 85       	ldd	r25, Y+9	; 0x09
    1e1c:	fc 01       	movw	r30, r24
    1e1e:	e2 0f       	add	r30, r18
    1e20:	f3 1f       	adc	r31, r19
    1e22:	66 85       	ldd	r22, Z+14	; 0x0e
    1e24:	8e 81       	ldd	r24, Y+6	; 0x06
    1e26:	48 2f       	mov	r20, r24
    1e28:	50 e0       	ldi	r21, 0x00	; 0
    1e2a:	ca 01       	movw	r24, r20
    1e2c:	88 0f       	add	r24, r24
    1e2e:	99 1f       	adc	r25, r25
    1e30:	9c 01       	movw	r18, r24
    1e32:	22 0f       	add	r18, r18
    1e34:	33 1f       	adc	r19, r19
    1e36:	22 0f       	add	r18, r18
    1e38:	33 1f       	adc	r19, r19
    1e3a:	22 0f       	add	r18, r18
    1e3c:	33 1f       	adc	r19, r19
    1e3e:	82 0f       	add	r24, r18
    1e40:	93 1f       	adc	r25, r19
    1e42:	9c 01       	movw	r18, r24
    1e44:	24 0f       	add	r18, r20
    1e46:	35 1f       	adc	r19, r21
    1e48:	88 85       	ldd	r24, Y+8	; 0x08
    1e4a:	99 85       	ldd	r25, Y+9	; 0x09
    1e4c:	fc 01       	movw	r30, r24
    1e4e:	e2 0f       	add	r30, r18
    1e50:	f3 1f       	adc	r31, r19
    1e52:	97 85       	ldd	r25, Z+15	; 0x0f
    1e54:	86 2f       	mov	r24, r22
    1e56:	69 2f       	mov	r22, r25
    1e58:	41 e0       	ldi	r20, 0x01	; 1
    1e5a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1e5e:	28 2f       	mov	r18, r24
    1e60:	30 e0       	ldi	r19, 0x00	; 0
    1e62:	40 e0       	ldi	r20, 0x00	; 0
    1e64:	50 e0       	ldi	r21, 0x00	; 0
    1e66:	8d 81       	ldd	r24, Y+5	; 0x05
    1e68:	88 2f       	mov	r24, r24
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	04 c0       	rjmp	.+8      	; 0x1e76 <SSDLT_enuInit+0x55a>
    1e6e:	22 0f       	add	r18, r18
    1e70:	33 1f       	adc	r19, r19
    1e72:	44 1f       	adc	r20, r20
    1e74:	55 1f       	adc	r21, r21
    1e76:	8a 95       	dec	r24
    1e78:	d2 f7       	brpl	.-12     	; 0x1e6e <SSDLT_enuInit+0x552>
    1e7a:	89 81       	ldd	r24, Y+1	; 0x01
    1e7c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e7e:	ab 81       	ldd	r26, Y+3	; 0x03
    1e80:	bc 81       	ldd	r27, Y+4	; 0x04
    1e82:	82 2b       	or	r24, r18
    1e84:	93 2b       	or	r25, r19
    1e86:	a4 2b       	or	r26, r20
    1e88:	b5 2b       	or	r27, r21
    1e8a:	89 83       	std	Y+1, r24	; 0x01
    1e8c:	9a 83       	std	Y+2, r25	; 0x02
    1e8e:	ab 83       	std	Y+3, r26	; 0x03
    1e90:	bc 83       	std	Y+4, r27	; 0x04
												   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Pin, DIO_u8OUTPUT) << Local_u8LastBit));
				Local_u8LastBit += 3;
    1e92:	8d 81       	ldd	r24, Y+5	; 0x05
    1e94:	8d 5f       	subi	r24, 0xFD	; 253
    1e96:	8d 83       	std	Y+5, r24	; 0x05
			}

			if(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Port != NOT_CONNECTED ||
    1e98:	8e 81       	ldd	r24, Y+6	; 0x06
    1e9a:	48 2f       	mov	r20, r24
    1e9c:	50 e0       	ldi	r21, 0x00	; 0
    1e9e:	ca 01       	movw	r24, r20
    1ea0:	88 0f       	add	r24, r24
    1ea2:	99 1f       	adc	r25, r25
    1ea4:	9c 01       	movw	r18, r24
    1ea6:	22 0f       	add	r18, r18
    1ea8:	33 1f       	adc	r19, r19
    1eaa:	22 0f       	add	r18, r18
    1eac:	33 1f       	adc	r19, r19
    1eae:	22 0f       	add	r18, r18
    1eb0:	33 1f       	adc	r19, r19
    1eb2:	82 0f       	add	r24, r18
    1eb4:	93 1f       	adc	r25, r19
    1eb6:	9c 01       	movw	r18, r24
    1eb8:	24 0f       	add	r18, r20
    1eba:	35 1f       	adc	r19, r21
    1ebc:	88 85       	ldd	r24, Y+8	; 0x08
    1ebe:	99 85       	ldd	r25, Y+9	; 0x09
    1ec0:	fc 01       	movw	r30, r24
    1ec2:	e2 0f       	add	r30, r18
    1ec4:	f3 1f       	adc	r31, r19
    1ec6:	80 89       	ldd	r24, Z+16	; 0x10
    1ec8:	82 30       	cpi	r24, 0x02	; 2
    1eca:	d9 f4       	brne	.+54     	; 0x1f02 <SSDLT_enuInit+0x5e6>
    1ecc:	8e 81       	ldd	r24, Y+6	; 0x06
    1ece:	48 2f       	mov	r20, r24
    1ed0:	50 e0       	ldi	r21, 0x00	; 0
    1ed2:	ca 01       	movw	r24, r20
    1ed4:	88 0f       	add	r24, r24
    1ed6:	99 1f       	adc	r25, r25
    1ed8:	9c 01       	movw	r18, r24
    1eda:	22 0f       	add	r18, r18
    1edc:	33 1f       	adc	r19, r19
    1ede:	22 0f       	add	r18, r18
    1ee0:	33 1f       	adc	r19, r19
    1ee2:	22 0f       	add	r18, r18
    1ee4:	33 1f       	adc	r19, r19
    1ee6:	82 0f       	add	r24, r18
    1ee8:	93 1f       	adc	r25, r19
    1eea:	9c 01       	movw	r18, r24
    1eec:	24 0f       	add	r18, r20
    1eee:	35 1f       	adc	r19, r21
    1ef0:	88 85       	ldd	r24, Y+8	; 0x08
    1ef2:	99 85       	ldd	r25, Y+9	; 0x09
    1ef4:	fc 01       	movw	r30, r24
    1ef6:	e2 0f       	add	r30, r18
    1ef8:	f3 1f       	adc	r31, r19
    1efa:	81 89       	ldd	r24, Z+17	; 0x11
    1efc:	82 30       	cpi	r24, 0x02	; 2
    1efe:	09 f4       	brne	.+2      	; 0x1f02 <SSDLT_enuInit+0x5e6>
    1f00:	52 c0       	rjmp	.+164    	; 0x1fa6 <SSDLT_enuInit+0x68a>
			   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Pin != NOT_CONNECTED)
			{
				Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Port,
    1f02:	8e 81       	ldd	r24, Y+6	; 0x06
    1f04:	48 2f       	mov	r20, r24
    1f06:	50 e0       	ldi	r21, 0x00	; 0
    1f08:	ca 01       	movw	r24, r20
    1f0a:	88 0f       	add	r24, r24
    1f0c:	99 1f       	adc	r25, r25
    1f0e:	9c 01       	movw	r18, r24
    1f10:	22 0f       	add	r18, r18
    1f12:	33 1f       	adc	r19, r19
    1f14:	22 0f       	add	r18, r18
    1f16:	33 1f       	adc	r19, r19
    1f18:	22 0f       	add	r18, r18
    1f1a:	33 1f       	adc	r19, r19
    1f1c:	82 0f       	add	r24, r18
    1f1e:	93 1f       	adc	r25, r19
    1f20:	9c 01       	movw	r18, r24
    1f22:	24 0f       	add	r18, r20
    1f24:	35 1f       	adc	r19, r21
    1f26:	88 85       	ldd	r24, Y+8	; 0x08
    1f28:	99 85       	ldd	r25, Y+9	; 0x09
    1f2a:	fc 01       	movw	r30, r24
    1f2c:	e2 0f       	add	r30, r18
    1f2e:	f3 1f       	adc	r31, r19
    1f30:	60 89       	ldd	r22, Z+16	; 0x10
    1f32:	8e 81       	ldd	r24, Y+6	; 0x06
    1f34:	48 2f       	mov	r20, r24
    1f36:	50 e0       	ldi	r21, 0x00	; 0
    1f38:	ca 01       	movw	r24, r20
    1f3a:	88 0f       	add	r24, r24
    1f3c:	99 1f       	adc	r25, r25
    1f3e:	9c 01       	movw	r18, r24
    1f40:	22 0f       	add	r18, r18
    1f42:	33 1f       	adc	r19, r19
    1f44:	22 0f       	add	r18, r18
    1f46:	33 1f       	adc	r19, r19
    1f48:	22 0f       	add	r18, r18
    1f4a:	33 1f       	adc	r19, r19
    1f4c:	82 0f       	add	r24, r18
    1f4e:	93 1f       	adc	r25, r19
    1f50:	9c 01       	movw	r18, r24
    1f52:	24 0f       	add	r18, r20
    1f54:	35 1f       	adc	r19, r21
    1f56:	88 85       	ldd	r24, Y+8	; 0x08
    1f58:	99 85       	ldd	r25, Y+9	; 0x09
    1f5a:	fc 01       	movw	r30, r24
    1f5c:	e2 0f       	add	r30, r18
    1f5e:	f3 1f       	adc	r31, r19
    1f60:	91 89       	ldd	r25, Z+17	; 0x11
    1f62:	86 2f       	mov	r24, r22
    1f64:	69 2f       	mov	r22, r25
    1f66:	41 e0       	ldi	r20, 0x01	; 1
    1f68:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	30 e0       	ldi	r19, 0x00	; 0
    1f70:	40 e0       	ldi	r20, 0x00	; 0
    1f72:	50 e0       	ldi	r21, 0x00	; 0
    1f74:	8d 81       	ldd	r24, Y+5	; 0x05
    1f76:	88 2f       	mov	r24, r24
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	04 c0       	rjmp	.+8      	; 0x1f84 <SSDLT_enuInit+0x668>
    1f7c:	22 0f       	add	r18, r18
    1f7e:	33 1f       	adc	r19, r19
    1f80:	44 1f       	adc	r20, r20
    1f82:	55 1f       	adc	r21, r21
    1f84:	8a 95       	dec	r24
    1f86:	d2 f7       	brpl	.-12     	; 0x1f7c <SSDLT_enuInit+0x660>
    1f88:	89 81       	ldd	r24, Y+1	; 0x01
    1f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f8c:	ab 81       	ldd	r26, Y+3	; 0x03
    1f8e:	bc 81       	ldd	r27, Y+4	; 0x04
    1f90:	82 2b       	or	r24, r18
    1f92:	93 2b       	or	r25, r19
    1f94:	a4 2b       	or	r26, r20
    1f96:	b5 2b       	or	r27, r21
    1f98:	89 83       	std	Y+1, r24	; 0x01
    1f9a:	9a 83       	std	Y+2, r25	; 0x02
    1f9c:	ab 83       	std	Y+3, r26	; 0x03
    1f9e:	bc 83       	std	Y+4, r27	; 0x04
												   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Pin, DIO_u8OUTPUT) << Local_u8LastBit));
				Local_u8LastBit += 3;
    1fa0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa2:	8d 5f       	subi	r24, 0xFD	; 253
    1fa4:	8d 83       	std	Y+5, r24	; 0x05
	u8 Local_u8LastBit  = 0;
	u32 Local_u32Check  = 0;

	if(Copy_pstrSegConfig != NULL)
	{
		for(Local_u8Iterator = 0; Local_u8Iterator < SEG_NUM; Local_u8Iterator++)
    1fa6:	8e 81       	ldd	r24, Y+6	; 0x06
    1fa8:	8f 5f       	subi	r24, 0xFF	; 255
    1faa:	8e 83       	std	Y+6, r24	; 0x06
    1fac:	8e 81       	ldd	r24, Y+6	; 0x06
    1fae:	82 30       	cpi	r24, 0x02	; 2
    1fb0:	08 f4       	brcc	.+2      	; 0x1fb4 <SSDLT_enuInit+0x698>
    1fb2:	ce cc       	rjmp	.-1636   	; 0x1950 <SSDLT_enuInit+0x34>
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <SSDLT_enuInit+0x69e>

		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    1fb6:	82 e0       	ldi	r24, 0x02	; 2
    1fb8:	8f 83       	std	Y+7, r24	; 0x07
	}


	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    1fba:	1e 82       	std	Y+6, r1	; 0x06
    1fbc:	1e c0       	rjmp	.+60     	; 0x1ffa <SSDLT_enuInit+0x6de>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    1fbe:	8e 81       	ldd	r24, Y+6	; 0x06
    1fc0:	28 2f       	mov	r18, r24
    1fc2:	30 e0       	ldi	r19, 0x00	; 0
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	ab 81       	ldd	r26, Y+3	; 0x03
    1fca:	bc 81       	ldd	r27, Y+4	; 0x04
    1fcc:	02 2e       	mov	r0, r18
    1fce:	04 c0       	rjmp	.+8      	; 0x1fd8 <SSDLT_enuInit+0x6bc>
    1fd0:	b6 95       	lsr	r27
    1fd2:	a7 95       	ror	r26
    1fd4:	97 95       	ror	r25
    1fd6:	87 95       	ror	r24
    1fd8:	0a 94       	dec	r0
    1fda:	d2 f7       	brpl	.-12     	; 0x1fd0 <SSDLT_enuInit+0x6b4>
    1fdc:	87 70       	andi	r24, 0x07	; 7
    1fde:	90 70       	andi	r25, 0x00	; 0
    1fe0:	a0 70       	andi	r26, 0x00	; 0
    1fe2:	b0 70       	andi	r27, 0x00	; 0
    1fe4:	81 30       	cpi	r24, 0x01	; 1
    1fe6:	91 05       	cpc	r25, r1
    1fe8:	a1 05       	cpc	r26, r1
    1fea:	b1 05       	cpc	r27, r1
    1fec:	19 f0       	breq	.+6      	; 0x1ff4 <SSDLT_enuInit+0x6d8>
		{
			return Local_enuErrorState;
    1fee:	8f 81       	ldd	r24, Y+7	; 0x07
    1ff0:	8a 87       	std	Y+10, r24	; 0x0a
    1ff2:	0b c0       	rjmp	.+22     	; 0x200a <SSDLT_enuInit+0x6ee>
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}


	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    1ff4:	8e 81       	ldd	r24, Y+6	; 0x06
    1ff6:	8d 5f       	subi	r24, 0xFD	; 253
    1ff8:	8e 83       	std	Y+6, r24	; 0x06
    1ffa:	9e 81       	ldd	r25, Y+6	; 0x06
    1ffc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ffe:	98 17       	cp	r25, r24
    2000:	f0 f2       	brcs	.-68     	; 0x1fbe <SSDLT_enuInit+0x6a2>
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
		{
			return Local_enuErrorState;
		}
	}
	Local_enuErrorState = ES_OK;
    2002:	81 e0       	ldi	r24, 0x01	; 1
    2004:	8f 83       	std	Y+7, r24	; 0x07

	return Local_enuErrorState;
    2006:	8f 81       	ldd	r24, Y+7	; 0x07
    2008:	8a 87       	std	Y+10, r24	; 0x0a
    200a:	8a 85       	ldd	r24, Y+10	; 0x0a
}
    200c:	2a 96       	adiw	r28, 0x0a	; 10
    200e:	0f b6       	in	r0, 0x3f	; 63
    2010:	f8 94       	cli
    2012:	de bf       	out	0x3e, r29	; 62
    2014:	0f be       	out	0x3f, r0	; 63
    2016:	cd bf       	out	0x3d, r28	; 61
    2018:	cf 91       	pop	r28
    201a:	df 91       	pop	r29
    201c:	08 95       	ret

0000201e <SSDLT_enuDisplayNum>:

ES_t SSDLT_enuDisplayNum(u8 Copy_u8SegID, u8 Copy_u8Number)
{
    201e:	df 93       	push	r29
    2020:	cf 93       	push	r28
    2022:	cd b7       	in	r28, 0x3d	; 61
    2024:	de b7       	in	r29, 0x3e	; 62
    2026:	6e 97       	sbiw	r28, 0x1e	; 30
    2028:	0f b6       	in	r0, 0x3f	; 63
    202a:	f8 94       	cli
    202c:	de bf       	out	0x3e, r29	; 62
    202e:	0f be       	out	0x3f, r0	; 63
    2030:	cd bf       	out	0x3d, r28	; 61
    2032:	8f 83       	std	Y+7, r24	; 0x07
    2034:	68 87       	std	Y+8, r22	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    2036:	1e 82       	std	Y+6, r1	; 0x06

	u8 Local_u8Iterator = 0;
    2038:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = 0;
    203a:	19 82       	std	Y+1, r1	; 0x01
    203c:	1a 82       	std	Y+2, r1	; 0x02
    203e:	1b 82       	std	Y+3, r1	; 0x03
    2040:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_u8Number < 10 && Copy_u8SegID < SEG_NUM)
    2042:	88 85       	ldd	r24, Y+8	; 0x08
    2044:	8a 30       	cpi	r24, 0x0A	; 10
    2046:	08 f0       	brcs	.+2      	; 0x204a <SSDLT_enuDisplayNum+0x2c>
    2048:	f6 c4       	rjmp	.+2540   	; 0x2a36 <SSDLT_enuDisplayNum+0xa18>
    204a:	8f 81       	ldd	r24, Y+7	; 0x07
    204c:	82 30       	cpi	r24, 0x02	; 2
    204e:	08 f0       	brcs	.+2      	; 0x2052 <SSDLT_enuDisplayNum+0x34>
    2050:	f2 c4       	rjmp	.+2532   	; 0x2a36 <SSDLT_enuDisplayNum+0xa18>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2052:	8f 81       	ldd	r24, Y+7	; 0x07
    2054:	48 2f       	mov	r20, r24
    2056:	50 e0       	ldi	r21, 0x00	; 0
    2058:	ca 01       	movw	r24, r20
    205a:	88 0f       	add	r24, r24
    205c:	99 1f       	adc	r25, r25
    205e:	9c 01       	movw	r18, r24
    2060:	22 0f       	add	r18, r18
    2062:	33 1f       	adc	r19, r19
    2064:	22 0f       	add	r18, r18
    2066:	33 1f       	adc	r19, r19
    2068:	22 0f       	add	r18, r18
    206a:	33 1f       	adc	r19, r19
    206c:	82 0f       	add	r24, r18
    206e:	93 1f       	adc	r25, r19
    2070:	84 0f       	add	r24, r20
    2072:	95 1f       	adc	r25, r21
    2074:	fc 01       	movw	r30, r24
    2076:	e3 57       	subi	r30, 0x73	; 115
    2078:	fe 4f       	sbci	r31, 0xFE	; 254
    207a:	80 81       	ld	r24, Z
    207c:	81 30       	cpi	r24, 0x01	; 1
    207e:	09 f0       	breq	.+2      	; 0x2082 <SSDLT_enuDisplayNum+0x64>
    2080:	40 c2       	rjmp	.+1152   	; 0x2502 <SSDLT_enuDisplayNum+0x4e4>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    2082:	8f 81       	ldd	r24, Y+7	; 0x07
    2084:	48 2f       	mov	r20, r24
    2086:	50 e0       	ldi	r21, 0x00	; 0
    2088:	ca 01       	movw	r24, r20
    208a:	88 0f       	add	r24, r24
    208c:	99 1f       	adc	r25, r25
    208e:	9c 01       	movw	r18, r24
    2090:	22 0f       	add	r18, r18
    2092:	33 1f       	adc	r19, r19
    2094:	22 0f       	add	r18, r18
    2096:	33 1f       	adc	r19, r19
    2098:	22 0f       	add	r18, r18
    209a:	33 1f       	adc	r19, r19
    209c:	82 0f       	add	r24, r18
    209e:	93 1f       	adc	r25, r19
    20a0:	84 0f       	add	r24, r20
    20a2:	95 1f       	adc	r25, r21
    20a4:	fc 01       	movw	r30, r24
    20a6:	e5 58       	subi	r30, 0x85	; 133
    20a8:	fe 4f       	sbci	r31, 0xFE	; 254
    20aa:	60 81       	ld	r22, Z
    20ac:	8f 81       	ldd	r24, Y+7	; 0x07
    20ae:	48 2f       	mov	r20, r24
    20b0:	50 e0       	ldi	r21, 0x00	; 0
    20b2:	ca 01       	movw	r24, r20
    20b4:	88 0f       	add	r24, r24
    20b6:	99 1f       	adc	r25, r25
    20b8:	9c 01       	movw	r18, r24
    20ba:	22 0f       	add	r18, r18
    20bc:	33 1f       	adc	r19, r19
    20be:	22 0f       	add	r18, r18
    20c0:	33 1f       	adc	r19, r19
    20c2:	22 0f       	add	r18, r18
    20c4:	33 1f       	adc	r19, r19
    20c6:	82 0f       	add	r24, r18
    20c8:	93 1f       	adc	r25, r19
    20ca:	84 0f       	add	r24, r20
    20cc:	95 1f       	adc	r25, r21
    20ce:	fc 01       	movw	r30, r24
    20d0:	e4 58       	subi	r30, 0x84	; 132
    20d2:	fe 4f       	sbci	r31, 0xFE	; 254
    20d4:	20 81       	ld	r18, Z
    20d6:	88 85       	ldd	r24, Y+8	; 0x08
    20d8:	88 2f       	mov	r24, r24
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	fc 01       	movw	r30, r24
    20de:	ef 55       	subi	r30, 0x5F	; 95
    20e0:	fe 4f       	sbci	r31, 0xFE	; 254
    20e2:	80 81       	ld	r24, Z
    20e4:	98 2f       	mov	r25, r24
    20e6:	91 70       	andi	r25, 0x01	; 1
    20e8:	86 2f       	mov	r24, r22
    20ea:	62 2f       	mov	r22, r18
    20ec:	49 2f       	mov	r20, r25
    20ee:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    20f2:	28 2f       	mov	r18, r24
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	40 e0       	ldi	r20, 0x00	; 0
    20f8:	50 e0       	ldi	r21, 0x00	; 0
    20fa:	89 81       	ldd	r24, Y+1	; 0x01
    20fc:	9a 81       	ldd	r25, Y+2	; 0x02
    20fe:	ab 81       	ldd	r26, Y+3	; 0x03
    2100:	bc 81       	ldd	r27, Y+4	; 0x04
    2102:	82 2b       	or	r24, r18
    2104:	93 2b       	or	r25, r19
    2106:	a4 2b       	or	r26, r20
    2108:	b5 2b       	or	r27, r21
    210a:	89 83       	std	Y+1, r24	; 0x01
    210c:	9a 83       	std	Y+2, r25	; 0x02
    210e:	ab 83       	std	Y+3, r26	; 0x03
    2110:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>0) & 1)) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    2112:	8f 81       	ldd	r24, Y+7	; 0x07
    2114:	48 2f       	mov	r20, r24
    2116:	50 e0       	ldi	r21, 0x00	; 0
    2118:	ca 01       	movw	r24, r20
    211a:	88 0f       	add	r24, r24
    211c:	99 1f       	adc	r25, r25
    211e:	9c 01       	movw	r18, r24
    2120:	22 0f       	add	r18, r18
    2122:	33 1f       	adc	r19, r19
    2124:	22 0f       	add	r18, r18
    2126:	33 1f       	adc	r19, r19
    2128:	22 0f       	add	r18, r18
    212a:	33 1f       	adc	r19, r19
    212c:	82 0f       	add	r24, r18
    212e:	93 1f       	adc	r25, r19
    2130:	84 0f       	add	r24, r20
    2132:	95 1f       	adc	r25, r21
    2134:	fc 01       	movw	r30, r24
    2136:	e3 58       	subi	r30, 0x83	; 131
    2138:	fe 4f       	sbci	r31, 0xFE	; 254
    213a:	60 81       	ld	r22, Z
    213c:	8f 81       	ldd	r24, Y+7	; 0x07
    213e:	48 2f       	mov	r20, r24
    2140:	50 e0       	ldi	r21, 0x00	; 0
    2142:	ca 01       	movw	r24, r20
    2144:	88 0f       	add	r24, r24
    2146:	99 1f       	adc	r25, r25
    2148:	9c 01       	movw	r18, r24
    214a:	22 0f       	add	r18, r18
    214c:	33 1f       	adc	r19, r19
    214e:	22 0f       	add	r18, r18
    2150:	33 1f       	adc	r19, r19
    2152:	22 0f       	add	r18, r18
    2154:	33 1f       	adc	r19, r19
    2156:	82 0f       	add	r24, r18
    2158:	93 1f       	adc	r25, r19
    215a:	84 0f       	add	r24, r20
    215c:	95 1f       	adc	r25, r21
    215e:	fc 01       	movw	r30, r24
    2160:	e2 58       	subi	r30, 0x82	; 130
    2162:	fe 4f       	sbci	r31, 0xFE	; 254
    2164:	20 81       	ld	r18, Z
    2166:	88 85       	ldd	r24, Y+8	; 0x08
    2168:	88 2f       	mov	r24, r24
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	fc 01       	movw	r30, r24
    216e:	ef 55       	subi	r30, 0x5F	; 95
    2170:	fe 4f       	sbci	r31, 0xFE	; 254
    2172:	80 81       	ld	r24, Z
    2174:	86 95       	lsr	r24
    2176:	98 2f       	mov	r25, r24
    2178:	91 70       	andi	r25, 0x01	; 1
    217a:	86 2f       	mov	r24, r22
    217c:	62 2f       	mov	r22, r18
    217e:	49 2f       	mov	r20, r25
    2180:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2184:	88 2f       	mov	r24, r24
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	88 0f       	add	r24, r24
    218a:	99 1f       	adc	r25, r25
    218c:	88 0f       	add	r24, r24
    218e:	99 1f       	adc	r25, r25
    2190:	88 0f       	add	r24, r24
    2192:	99 1f       	adc	r25, r25
    2194:	9c 01       	movw	r18, r24
    2196:	44 27       	eor	r20, r20
    2198:	37 fd       	sbrc	r19, 7
    219a:	40 95       	com	r20
    219c:	54 2f       	mov	r21, r20
    219e:	89 81       	ldd	r24, Y+1	; 0x01
    21a0:	9a 81       	ldd	r25, Y+2	; 0x02
    21a2:	ab 81       	ldd	r26, Y+3	; 0x03
    21a4:	bc 81       	ldd	r27, Y+4	; 0x04
    21a6:	82 2b       	or	r24, r18
    21a8:	93 2b       	or	r25, r19
    21aa:	a4 2b       	or	r26, r20
    21ac:	b5 2b       	or	r27, r21
    21ae:	89 83       	std	Y+1, r24	; 0x01
    21b0:	9a 83       	std	Y+2, r25	; 0x02
    21b2:	ab 83       	std	Y+3, r26	; 0x03
    21b4:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>1) & 1)) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    21b6:	8f 81       	ldd	r24, Y+7	; 0x07
    21b8:	48 2f       	mov	r20, r24
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	ca 01       	movw	r24, r20
    21be:	88 0f       	add	r24, r24
    21c0:	99 1f       	adc	r25, r25
    21c2:	9c 01       	movw	r18, r24
    21c4:	22 0f       	add	r18, r18
    21c6:	33 1f       	adc	r19, r19
    21c8:	22 0f       	add	r18, r18
    21ca:	33 1f       	adc	r19, r19
    21cc:	22 0f       	add	r18, r18
    21ce:	33 1f       	adc	r19, r19
    21d0:	82 0f       	add	r24, r18
    21d2:	93 1f       	adc	r25, r19
    21d4:	84 0f       	add	r24, r20
    21d6:	95 1f       	adc	r25, r21
    21d8:	fc 01       	movw	r30, r24
    21da:	e1 58       	subi	r30, 0x81	; 129
    21dc:	fe 4f       	sbci	r31, 0xFE	; 254
    21de:	60 81       	ld	r22, Z
    21e0:	8f 81       	ldd	r24, Y+7	; 0x07
    21e2:	48 2f       	mov	r20, r24
    21e4:	50 e0       	ldi	r21, 0x00	; 0
    21e6:	ca 01       	movw	r24, r20
    21e8:	88 0f       	add	r24, r24
    21ea:	99 1f       	adc	r25, r25
    21ec:	9c 01       	movw	r18, r24
    21ee:	22 0f       	add	r18, r18
    21f0:	33 1f       	adc	r19, r19
    21f2:	22 0f       	add	r18, r18
    21f4:	33 1f       	adc	r19, r19
    21f6:	22 0f       	add	r18, r18
    21f8:	33 1f       	adc	r19, r19
    21fa:	82 0f       	add	r24, r18
    21fc:	93 1f       	adc	r25, r19
    21fe:	84 0f       	add	r24, r20
    2200:	95 1f       	adc	r25, r21
    2202:	fc 01       	movw	r30, r24
    2204:	e0 58       	subi	r30, 0x80	; 128
    2206:	fe 4f       	sbci	r31, 0xFE	; 254
    2208:	20 81       	ld	r18, Z
    220a:	88 85       	ldd	r24, Y+8	; 0x08
    220c:	88 2f       	mov	r24, r24
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	fc 01       	movw	r30, r24
    2212:	ef 55       	subi	r30, 0x5F	; 95
    2214:	fe 4f       	sbci	r31, 0xFE	; 254
    2216:	80 81       	ld	r24, Z
    2218:	86 95       	lsr	r24
    221a:	86 95       	lsr	r24
    221c:	98 2f       	mov	r25, r24
    221e:	91 70       	andi	r25, 0x01	; 1
    2220:	86 2f       	mov	r24, r22
    2222:	62 2f       	mov	r22, r18
    2224:	49 2f       	mov	r20, r25
    2226:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    222a:	88 2f       	mov	r24, r24
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	00 24       	eor	r0, r0
    2230:	96 95       	lsr	r25
    2232:	87 95       	ror	r24
    2234:	07 94       	ror	r0
    2236:	96 95       	lsr	r25
    2238:	87 95       	ror	r24
    223a:	07 94       	ror	r0
    223c:	98 2f       	mov	r25, r24
    223e:	80 2d       	mov	r24, r0
    2240:	9c 01       	movw	r18, r24
    2242:	44 27       	eor	r20, r20
    2244:	37 fd       	sbrc	r19, 7
    2246:	40 95       	com	r20
    2248:	54 2f       	mov	r21, r20
    224a:	89 81       	ldd	r24, Y+1	; 0x01
    224c:	9a 81       	ldd	r25, Y+2	; 0x02
    224e:	ab 81       	ldd	r26, Y+3	; 0x03
    2250:	bc 81       	ldd	r27, Y+4	; 0x04
    2252:	82 2b       	or	r24, r18
    2254:	93 2b       	or	r25, r19
    2256:	a4 2b       	or	r26, r20
    2258:	b5 2b       	or	r27, r21
    225a:	89 83       	std	Y+1, r24	; 0x01
    225c:	9a 83       	std	Y+2, r25	; 0x02
    225e:	ab 83       	std	Y+3, r26	; 0x03
    2260:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>2) & 1)) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    2262:	8f 81       	ldd	r24, Y+7	; 0x07
    2264:	48 2f       	mov	r20, r24
    2266:	50 e0       	ldi	r21, 0x00	; 0
    2268:	ca 01       	movw	r24, r20
    226a:	88 0f       	add	r24, r24
    226c:	99 1f       	adc	r25, r25
    226e:	9c 01       	movw	r18, r24
    2270:	22 0f       	add	r18, r18
    2272:	33 1f       	adc	r19, r19
    2274:	22 0f       	add	r18, r18
    2276:	33 1f       	adc	r19, r19
    2278:	22 0f       	add	r18, r18
    227a:	33 1f       	adc	r19, r19
    227c:	82 0f       	add	r24, r18
    227e:	93 1f       	adc	r25, r19
    2280:	84 0f       	add	r24, r20
    2282:	95 1f       	adc	r25, r21
    2284:	fc 01       	movw	r30, r24
    2286:	ef 57       	subi	r30, 0x7F	; 127
    2288:	fe 4f       	sbci	r31, 0xFE	; 254
    228a:	60 81       	ld	r22, Z
    228c:	8f 81       	ldd	r24, Y+7	; 0x07
    228e:	48 2f       	mov	r20, r24
    2290:	50 e0       	ldi	r21, 0x00	; 0
    2292:	ca 01       	movw	r24, r20
    2294:	88 0f       	add	r24, r24
    2296:	99 1f       	adc	r25, r25
    2298:	9c 01       	movw	r18, r24
    229a:	22 0f       	add	r18, r18
    229c:	33 1f       	adc	r19, r19
    229e:	22 0f       	add	r18, r18
    22a0:	33 1f       	adc	r19, r19
    22a2:	22 0f       	add	r18, r18
    22a4:	33 1f       	adc	r19, r19
    22a6:	82 0f       	add	r24, r18
    22a8:	93 1f       	adc	r25, r19
    22aa:	84 0f       	add	r24, r20
    22ac:	95 1f       	adc	r25, r21
    22ae:	fc 01       	movw	r30, r24
    22b0:	ee 57       	subi	r30, 0x7E	; 126
    22b2:	fe 4f       	sbci	r31, 0xFE	; 254
    22b4:	20 81       	ld	r18, Z
    22b6:	88 85       	ldd	r24, Y+8	; 0x08
    22b8:	88 2f       	mov	r24, r24
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	fc 01       	movw	r30, r24
    22be:	ef 55       	subi	r30, 0x5F	; 95
    22c0:	fe 4f       	sbci	r31, 0xFE	; 254
    22c2:	80 81       	ld	r24, Z
    22c4:	86 95       	lsr	r24
    22c6:	86 95       	lsr	r24
    22c8:	86 95       	lsr	r24
    22ca:	98 2f       	mov	r25, r24
    22cc:	91 70       	andi	r25, 0x01	; 1
    22ce:	86 2f       	mov	r24, r22
    22d0:	62 2f       	mov	r22, r18
    22d2:	49 2f       	mov	r20, r25
    22d4:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    22d8:	88 2f       	mov	r24, r24
    22da:	90 e0       	ldi	r25, 0x00	; 0
    22dc:	98 2f       	mov	r25, r24
    22de:	88 27       	eor	r24, r24
    22e0:	99 0f       	add	r25, r25
    22e2:	9c 01       	movw	r18, r24
    22e4:	44 27       	eor	r20, r20
    22e6:	37 fd       	sbrc	r19, 7
    22e8:	40 95       	com	r20
    22ea:	54 2f       	mov	r21, r20
    22ec:	89 81       	ldd	r24, Y+1	; 0x01
    22ee:	9a 81       	ldd	r25, Y+2	; 0x02
    22f0:	ab 81       	ldd	r26, Y+3	; 0x03
    22f2:	bc 81       	ldd	r27, Y+4	; 0x04
    22f4:	82 2b       	or	r24, r18
    22f6:	93 2b       	or	r25, r19
    22f8:	a4 2b       	or	r26, r20
    22fa:	b5 2b       	or	r27, r21
    22fc:	89 83       	std	Y+1, r24	; 0x01
    22fe:	9a 83       	std	Y+2, r25	; 0x02
    2300:	ab 83       	std	Y+3, r26	; 0x03
    2302:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>3) & 1)) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    2304:	8f 81       	ldd	r24, Y+7	; 0x07
    2306:	48 2f       	mov	r20, r24
    2308:	50 e0       	ldi	r21, 0x00	; 0
    230a:	ca 01       	movw	r24, r20
    230c:	88 0f       	add	r24, r24
    230e:	99 1f       	adc	r25, r25
    2310:	9c 01       	movw	r18, r24
    2312:	22 0f       	add	r18, r18
    2314:	33 1f       	adc	r19, r19
    2316:	22 0f       	add	r18, r18
    2318:	33 1f       	adc	r19, r19
    231a:	22 0f       	add	r18, r18
    231c:	33 1f       	adc	r19, r19
    231e:	82 0f       	add	r24, r18
    2320:	93 1f       	adc	r25, r19
    2322:	84 0f       	add	r24, r20
    2324:	95 1f       	adc	r25, r21
    2326:	fc 01       	movw	r30, r24
    2328:	ed 57       	subi	r30, 0x7D	; 125
    232a:	fe 4f       	sbci	r31, 0xFE	; 254
    232c:	60 81       	ld	r22, Z
    232e:	8f 81       	ldd	r24, Y+7	; 0x07
    2330:	48 2f       	mov	r20, r24
    2332:	50 e0       	ldi	r21, 0x00	; 0
    2334:	ca 01       	movw	r24, r20
    2336:	88 0f       	add	r24, r24
    2338:	99 1f       	adc	r25, r25
    233a:	9c 01       	movw	r18, r24
    233c:	22 0f       	add	r18, r18
    233e:	33 1f       	adc	r19, r19
    2340:	22 0f       	add	r18, r18
    2342:	33 1f       	adc	r19, r19
    2344:	22 0f       	add	r18, r18
    2346:	33 1f       	adc	r19, r19
    2348:	82 0f       	add	r24, r18
    234a:	93 1f       	adc	r25, r19
    234c:	84 0f       	add	r24, r20
    234e:	95 1f       	adc	r25, r21
    2350:	fc 01       	movw	r30, r24
    2352:	ec 57       	subi	r30, 0x7C	; 124
    2354:	fe 4f       	sbci	r31, 0xFE	; 254
    2356:	20 81       	ld	r18, Z
    2358:	88 85       	ldd	r24, Y+8	; 0x08
    235a:	88 2f       	mov	r24, r24
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	fc 01       	movw	r30, r24
    2360:	ef 55       	subi	r30, 0x5F	; 95
    2362:	fe 4f       	sbci	r31, 0xFE	; 254
    2364:	80 81       	ld	r24, Z
    2366:	82 95       	swap	r24
    2368:	8f 70       	andi	r24, 0x0F	; 15
    236a:	98 2f       	mov	r25, r24
    236c:	91 70       	andi	r25, 0x01	; 1
    236e:	86 2f       	mov	r24, r22
    2370:	62 2f       	mov	r22, r18
    2372:	49 2f       	mov	r20, r25
    2374:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2378:	88 2f       	mov	r24, r24
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	98 2f       	mov	r25, r24
    237e:	88 27       	eor	r24, r24
    2380:	92 95       	swap	r25
    2382:	90 7f       	andi	r25, 0xF0	; 240
    2384:	9c 01       	movw	r18, r24
    2386:	44 27       	eor	r20, r20
    2388:	37 fd       	sbrc	r19, 7
    238a:	40 95       	com	r20
    238c:	54 2f       	mov	r21, r20
    238e:	89 81       	ldd	r24, Y+1	; 0x01
    2390:	9a 81       	ldd	r25, Y+2	; 0x02
    2392:	ab 81       	ldd	r26, Y+3	; 0x03
    2394:	bc 81       	ldd	r27, Y+4	; 0x04
    2396:	82 2b       	or	r24, r18
    2398:	93 2b       	or	r25, r19
    239a:	a4 2b       	or	r26, r20
    239c:	b5 2b       	or	r27, r21
    239e:	89 83       	std	Y+1, r24	; 0x01
    23a0:	9a 83       	std	Y+2, r25	; 0x02
    23a2:	ab 83       	std	Y+3, r26	; 0x03
    23a4:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>4) & 1)) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    23a6:	8f 81       	ldd	r24, Y+7	; 0x07
    23a8:	48 2f       	mov	r20, r24
    23aa:	50 e0       	ldi	r21, 0x00	; 0
    23ac:	ca 01       	movw	r24, r20
    23ae:	88 0f       	add	r24, r24
    23b0:	99 1f       	adc	r25, r25
    23b2:	9c 01       	movw	r18, r24
    23b4:	22 0f       	add	r18, r18
    23b6:	33 1f       	adc	r19, r19
    23b8:	22 0f       	add	r18, r18
    23ba:	33 1f       	adc	r19, r19
    23bc:	22 0f       	add	r18, r18
    23be:	33 1f       	adc	r19, r19
    23c0:	82 0f       	add	r24, r18
    23c2:	93 1f       	adc	r25, r19
    23c4:	84 0f       	add	r24, r20
    23c6:	95 1f       	adc	r25, r21
    23c8:	fc 01       	movw	r30, r24
    23ca:	eb 57       	subi	r30, 0x7B	; 123
    23cc:	fe 4f       	sbci	r31, 0xFE	; 254
    23ce:	60 81       	ld	r22, Z
    23d0:	8f 81       	ldd	r24, Y+7	; 0x07
    23d2:	48 2f       	mov	r20, r24
    23d4:	50 e0       	ldi	r21, 0x00	; 0
    23d6:	ca 01       	movw	r24, r20
    23d8:	88 0f       	add	r24, r24
    23da:	99 1f       	adc	r25, r25
    23dc:	9c 01       	movw	r18, r24
    23de:	22 0f       	add	r18, r18
    23e0:	33 1f       	adc	r19, r19
    23e2:	22 0f       	add	r18, r18
    23e4:	33 1f       	adc	r19, r19
    23e6:	22 0f       	add	r18, r18
    23e8:	33 1f       	adc	r19, r19
    23ea:	82 0f       	add	r24, r18
    23ec:	93 1f       	adc	r25, r19
    23ee:	84 0f       	add	r24, r20
    23f0:	95 1f       	adc	r25, r21
    23f2:	fc 01       	movw	r30, r24
    23f4:	ea 57       	subi	r30, 0x7A	; 122
    23f6:	fe 4f       	sbci	r31, 0xFE	; 254
    23f8:	20 81       	ld	r18, Z
    23fa:	88 85       	ldd	r24, Y+8	; 0x08
    23fc:	88 2f       	mov	r24, r24
    23fe:	90 e0       	ldi	r25, 0x00	; 0
    2400:	fc 01       	movw	r30, r24
    2402:	ef 55       	subi	r30, 0x5F	; 95
    2404:	fe 4f       	sbci	r31, 0xFE	; 254
    2406:	80 81       	ld	r24, Z
    2408:	82 95       	swap	r24
    240a:	86 95       	lsr	r24
    240c:	87 70       	andi	r24, 0x07	; 7
    240e:	98 2f       	mov	r25, r24
    2410:	91 70       	andi	r25, 0x01	; 1
    2412:	86 2f       	mov	r24, r22
    2414:	62 2f       	mov	r22, r18
    2416:	49 2f       	mov	r20, r25
    2418:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    241c:	88 2f       	mov	r24, r24
    241e:	90 e0       	ldi	r25, 0x00	; 0
    2420:	a0 e0       	ldi	r26, 0x00	; 0
    2422:	b0 e0       	ldi	r27, 0x00	; 0
    2424:	9c 01       	movw	r18, r24
    2426:	ad 01       	movw	r20, r26
    2428:	01 2e       	mov	r0, r17
    242a:	1f e0       	ldi	r17, 0x0F	; 15
    242c:	22 0f       	add	r18, r18
    242e:	33 1f       	adc	r19, r19
    2430:	44 1f       	adc	r20, r20
    2432:	55 1f       	adc	r21, r21
    2434:	1a 95       	dec	r17
    2436:	d1 f7       	brne	.-12     	; 0x242c <SSDLT_enuDisplayNum+0x40e>
    2438:	10 2d       	mov	r17, r0
    243a:	89 81       	ldd	r24, Y+1	; 0x01
    243c:	9a 81       	ldd	r25, Y+2	; 0x02
    243e:	ab 81       	ldd	r26, Y+3	; 0x03
    2440:	bc 81       	ldd	r27, Y+4	; 0x04
    2442:	82 2b       	or	r24, r18
    2444:	93 2b       	or	r25, r19
    2446:	a4 2b       	or	r26, r20
    2448:	b5 2b       	or	r27, r21
    244a:	89 83       	std	Y+1, r24	; 0x01
    244c:	9a 83       	std	Y+2, r25	; 0x02
    244e:	ab 83       	std	Y+3, r26	; 0x03
    2450:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>5) & 1)) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    2452:	8f 81       	ldd	r24, Y+7	; 0x07
    2454:	48 2f       	mov	r20, r24
    2456:	50 e0       	ldi	r21, 0x00	; 0
    2458:	ca 01       	movw	r24, r20
    245a:	88 0f       	add	r24, r24
    245c:	99 1f       	adc	r25, r25
    245e:	9c 01       	movw	r18, r24
    2460:	22 0f       	add	r18, r18
    2462:	33 1f       	adc	r19, r19
    2464:	22 0f       	add	r18, r18
    2466:	33 1f       	adc	r19, r19
    2468:	22 0f       	add	r18, r18
    246a:	33 1f       	adc	r19, r19
    246c:	82 0f       	add	r24, r18
    246e:	93 1f       	adc	r25, r19
    2470:	84 0f       	add	r24, r20
    2472:	95 1f       	adc	r25, r21
    2474:	fc 01       	movw	r30, r24
    2476:	e9 57       	subi	r30, 0x79	; 121
    2478:	fe 4f       	sbci	r31, 0xFE	; 254
    247a:	60 81       	ld	r22, Z
    247c:	8f 81       	ldd	r24, Y+7	; 0x07
    247e:	48 2f       	mov	r20, r24
    2480:	50 e0       	ldi	r21, 0x00	; 0
    2482:	ca 01       	movw	r24, r20
    2484:	88 0f       	add	r24, r24
    2486:	99 1f       	adc	r25, r25
    2488:	9c 01       	movw	r18, r24
    248a:	22 0f       	add	r18, r18
    248c:	33 1f       	adc	r19, r19
    248e:	22 0f       	add	r18, r18
    2490:	33 1f       	adc	r19, r19
    2492:	22 0f       	add	r18, r18
    2494:	33 1f       	adc	r19, r19
    2496:	82 0f       	add	r24, r18
    2498:	93 1f       	adc	r25, r19
    249a:	84 0f       	add	r24, r20
    249c:	95 1f       	adc	r25, r21
    249e:	fc 01       	movw	r30, r24
    24a0:	e8 57       	subi	r30, 0x78	; 120
    24a2:	fe 4f       	sbci	r31, 0xFE	; 254
    24a4:	20 81       	ld	r18, Z
    24a6:	88 85       	ldd	r24, Y+8	; 0x08
    24a8:	88 2f       	mov	r24, r24
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	fc 01       	movw	r30, r24
    24ae:	ef 55       	subi	r30, 0x5F	; 95
    24b0:	fe 4f       	sbci	r31, 0xFE	; 254
    24b2:	80 81       	ld	r24, Z
    24b4:	82 95       	swap	r24
    24b6:	86 95       	lsr	r24
    24b8:	86 95       	lsr	r24
    24ba:	83 70       	andi	r24, 0x03	; 3
    24bc:	98 2f       	mov	r25, r24
    24be:	91 70       	andi	r25, 0x01	; 1
    24c0:	86 2f       	mov	r24, r22
    24c2:	62 2f       	mov	r22, r18
    24c4:	49 2f       	mov	r20, r25
    24c6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    24ca:	88 2f       	mov	r24, r24
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	a0 e0       	ldi	r26, 0x00	; 0
    24d0:	b0 e0       	ldi	r27, 0x00	; 0
    24d2:	9c 01       	movw	r18, r24
    24d4:	ad 01       	movw	r20, r26
    24d6:	01 2e       	mov	r0, r17
    24d8:	12 e1       	ldi	r17, 0x12	; 18
    24da:	22 0f       	add	r18, r18
    24dc:	33 1f       	adc	r19, r19
    24de:	44 1f       	adc	r20, r20
    24e0:	55 1f       	adc	r21, r21
    24e2:	1a 95       	dec	r17
    24e4:	d1 f7       	brne	.-12     	; 0x24da <SSDLT_enuDisplayNum+0x4bc>
    24e6:	10 2d       	mov	r17, r0
    24e8:	89 81       	ldd	r24, Y+1	; 0x01
    24ea:	9a 81       	ldd	r25, Y+2	; 0x02
    24ec:	ab 81       	ldd	r26, Y+3	; 0x03
    24ee:	bc 81       	ldd	r27, Y+4	; 0x04
    24f0:	82 2b       	or	r24, r18
    24f2:	93 2b       	or	r25, r19
    24f4:	a4 2b       	or	r26, r20
    24f6:	b5 2b       	or	r27, r21
    24f8:	89 83       	std	Y+1, r24	; 0x01
    24fa:	9a 83       	std	Y+2, r25	; 0x02
    24fc:	ab 83       	std	Y+3, r26	; 0x03
    24fe:	bc 83       	std	Y+4, r27	; 0x04
    2500:	9c c2       	rjmp	.+1336   	; 0x2a3a <SSDLT_enuDisplayNum+0xa1c>
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>6) & 1)) << 18));

		}
		else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2502:	8f 81       	ldd	r24, Y+7	; 0x07
    2504:	48 2f       	mov	r20, r24
    2506:	50 e0       	ldi	r21, 0x00	; 0
    2508:	ca 01       	movw	r24, r20
    250a:	88 0f       	add	r24, r24
    250c:	99 1f       	adc	r25, r25
    250e:	9c 01       	movw	r18, r24
    2510:	22 0f       	add	r18, r18
    2512:	33 1f       	adc	r19, r19
    2514:	22 0f       	add	r18, r18
    2516:	33 1f       	adc	r19, r19
    2518:	22 0f       	add	r18, r18
    251a:	33 1f       	adc	r19, r19
    251c:	82 0f       	add	r24, r18
    251e:	93 1f       	adc	r25, r19
    2520:	84 0f       	add	r24, r20
    2522:	95 1f       	adc	r25, r21
    2524:	fc 01       	movw	r30, r24
    2526:	e3 57       	subi	r30, 0x73	; 115
    2528:	fe 4f       	sbci	r31, 0xFE	; 254
    252a:	80 81       	ld	r24, Z
    252c:	88 23       	and	r24, r24
    252e:	09 f0       	breq	.+2      	; 0x2532 <SSDLT_enuDisplayNum+0x514>
    2530:	7f c2       	rjmp	.+1278   	; 0x2a30 <SSDLT_enuDisplayNum+0xa12>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    2532:	8f 81       	ldd	r24, Y+7	; 0x07
    2534:	48 2f       	mov	r20, r24
    2536:	50 e0       	ldi	r21, 0x00	; 0
    2538:	ca 01       	movw	r24, r20
    253a:	88 0f       	add	r24, r24
    253c:	99 1f       	adc	r25, r25
    253e:	9c 01       	movw	r18, r24
    2540:	22 0f       	add	r18, r18
    2542:	33 1f       	adc	r19, r19
    2544:	22 0f       	add	r18, r18
    2546:	33 1f       	adc	r19, r19
    2548:	22 0f       	add	r18, r18
    254a:	33 1f       	adc	r19, r19
    254c:	82 0f       	add	r24, r18
    254e:	93 1f       	adc	r25, r19
    2550:	84 0f       	add	r24, r20
    2552:	95 1f       	adc	r25, r21
    2554:	fc 01       	movw	r30, r24
    2556:	e5 58       	subi	r30, 0x85	; 133
    2558:	fe 4f       	sbci	r31, 0xFE	; 254
    255a:	80 81       	ld	r24, Z
    255c:	8e 8f       	std	Y+30, r24	; 0x1e
    255e:	8f 81       	ldd	r24, Y+7	; 0x07
    2560:	48 2f       	mov	r20, r24
    2562:	50 e0       	ldi	r21, 0x00	; 0
    2564:	ca 01       	movw	r24, r20
    2566:	88 0f       	add	r24, r24
    2568:	99 1f       	adc	r25, r25
    256a:	9c 01       	movw	r18, r24
    256c:	22 0f       	add	r18, r18
    256e:	33 1f       	adc	r19, r19
    2570:	22 0f       	add	r18, r18
    2572:	33 1f       	adc	r19, r19
    2574:	22 0f       	add	r18, r18
    2576:	33 1f       	adc	r19, r19
    2578:	82 0f       	add	r24, r18
    257a:	93 1f       	adc	r25, r19
    257c:	84 0f       	add	r24, r20
    257e:	95 1f       	adc	r25, r21
    2580:	fc 01       	movw	r30, r24
    2582:	e4 58       	subi	r30, 0x84	; 132
    2584:	fe 4f       	sbci	r31, 0xFE	; 254
    2586:	80 81       	ld	r24, Z
    2588:	8d 8f       	std	Y+29, r24	; 0x1d
    258a:	88 85       	ldd	r24, Y+8	; 0x08
    258c:	88 2f       	mov	r24, r24
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	fc 01       	movw	r30, r24
    2592:	ef 55       	subi	r30, 0x5F	; 95
    2594:	fe 4f       	sbci	r31, 0xFE	; 254
    2596:	80 81       	ld	r24, Z
    2598:	88 2f       	mov	r24, r24
    259a:	90 e0       	ldi	r25, 0x00	; 0
    259c:	81 70       	andi	r24, 0x01	; 1
    259e:	90 70       	andi	r25, 0x00	; 0
    25a0:	1c 8e       	std	Y+28, r1	; 0x1c
    25a2:	00 97       	sbiw	r24, 0x00	; 0
    25a4:	11 f4       	brne	.+4      	; 0x25aa <SSDLT_enuDisplayNum+0x58c>
    25a6:	81 e0       	ldi	r24, 0x01	; 1
    25a8:	8c 8f       	std	Y+28, r24	; 0x1c
    25aa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    25ac:	6d 8d       	ldd	r22, Y+29	; 0x1d
    25ae:	4c 8d       	ldd	r20, Y+28	; 0x1c
    25b0:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    25b4:	28 2f       	mov	r18, r24
    25b6:	30 e0       	ldi	r19, 0x00	; 0
    25b8:	40 e0       	ldi	r20, 0x00	; 0
    25ba:	50 e0       	ldi	r21, 0x00	; 0
    25bc:	89 81       	ldd	r24, Y+1	; 0x01
    25be:	9a 81       	ldd	r25, Y+2	; 0x02
    25c0:	ab 81       	ldd	r26, Y+3	; 0x03
    25c2:	bc 81       	ldd	r27, Y+4	; 0x04
    25c4:	82 2b       	or	r24, r18
    25c6:	93 2b       	or	r25, r19
    25c8:	a4 2b       	or	r26, r20
    25ca:	b5 2b       	or	r27, r21
    25cc:	89 83       	std	Y+1, r24	; 0x01
    25ce:	9a 83       	std	Y+2, r25	; 0x02
    25d0:	ab 83       	std	Y+3, r26	; 0x03
    25d2:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>0) & 1))) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    25d4:	8f 81       	ldd	r24, Y+7	; 0x07
    25d6:	48 2f       	mov	r20, r24
    25d8:	50 e0       	ldi	r21, 0x00	; 0
    25da:	ca 01       	movw	r24, r20
    25dc:	88 0f       	add	r24, r24
    25de:	99 1f       	adc	r25, r25
    25e0:	9c 01       	movw	r18, r24
    25e2:	22 0f       	add	r18, r18
    25e4:	33 1f       	adc	r19, r19
    25e6:	22 0f       	add	r18, r18
    25e8:	33 1f       	adc	r19, r19
    25ea:	22 0f       	add	r18, r18
    25ec:	33 1f       	adc	r19, r19
    25ee:	82 0f       	add	r24, r18
    25f0:	93 1f       	adc	r25, r19
    25f2:	84 0f       	add	r24, r20
    25f4:	95 1f       	adc	r25, r21
    25f6:	fc 01       	movw	r30, r24
    25f8:	e3 58       	subi	r30, 0x83	; 131
    25fa:	fe 4f       	sbci	r31, 0xFE	; 254
    25fc:	80 81       	ld	r24, Z
    25fe:	8b 8f       	std	Y+27, r24	; 0x1b
    2600:	8f 81       	ldd	r24, Y+7	; 0x07
    2602:	48 2f       	mov	r20, r24
    2604:	50 e0       	ldi	r21, 0x00	; 0
    2606:	ca 01       	movw	r24, r20
    2608:	88 0f       	add	r24, r24
    260a:	99 1f       	adc	r25, r25
    260c:	9c 01       	movw	r18, r24
    260e:	22 0f       	add	r18, r18
    2610:	33 1f       	adc	r19, r19
    2612:	22 0f       	add	r18, r18
    2614:	33 1f       	adc	r19, r19
    2616:	22 0f       	add	r18, r18
    2618:	33 1f       	adc	r19, r19
    261a:	82 0f       	add	r24, r18
    261c:	93 1f       	adc	r25, r19
    261e:	84 0f       	add	r24, r20
    2620:	95 1f       	adc	r25, r21
    2622:	fc 01       	movw	r30, r24
    2624:	e2 58       	subi	r30, 0x82	; 130
    2626:	fe 4f       	sbci	r31, 0xFE	; 254
    2628:	80 81       	ld	r24, Z
    262a:	8a 8f       	std	Y+26, r24	; 0x1a
    262c:	88 85       	ldd	r24, Y+8	; 0x08
    262e:	88 2f       	mov	r24, r24
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	fc 01       	movw	r30, r24
    2634:	ef 55       	subi	r30, 0x5F	; 95
    2636:	fe 4f       	sbci	r31, 0xFE	; 254
    2638:	80 81       	ld	r24, Z
    263a:	86 95       	lsr	r24
    263c:	88 2f       	mov	r24, r24
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	81 70       	andi	r24, 0x01	; 1
    2642:	90 70       	andi	r25, 0x00	; 0
    2644:	19 8e       	std	Y+25, r1	; 0x19
    2646:	00 97       	sbiw	r24, 0x00	; 0
    2648:	11 f4       	brne	.+4      	; 0x264e <SSDLT_enuDisplayNum+0x630>
    264a:	81 e0       	ldi	r24, 0x01	; 1
    264c:	89 8f       	std	Y+25, r24	; 0x19
    264e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2650:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2652:	49 8d       	ldd	r20, Y+25	; 0x19
    2654:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2658:	88 2f       	mov	r24, r24
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	88 0f       	add	r24, r24
    265e:	99 1f       	adc	r25, r25
    2660:	88 0f       	add	r24, r24
    2662:	99 1f       	adc	r25, r25
    2664:	88 0f       	add	r24, r24
    2666:	99 1f       	adc	r25, r25
    2668:	9c 01       	movw	r18, r24
    266a:	44 27       	eor	r20, r20
    266c:	37 fd       	sbrc	r19, 7
    266e:	40 95       	com	r20
    2670:	54 2f       	mov	r21, r20
    2672:	89 81       	ldd	r24, Y+1	; 0x01
    2674:	9a 81       	ldd	r25, Y+2	; 0x02
    2676:	ab 81       	ldd	r26, Y+3	; 0x03
    2678:	bc 81       	ldd	r27, Y+4	; 0x04
    267a:	82 2b       	or	r24, r18
    267c:	93 2b       	or	r25, r19
    267e:	a4 2b       	or	r26, r20
    2680:	b5 2b       	or	r27, r21
    2682:	89 83       	std	Y+1, r24	; 0x01
    2684:	9a 83       	std	Y+2, r25	; 0x02
    2686:	ab 83       	std	Y+3, r26	; 0x03
    2688:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>1) & 1))) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    268a:	8f 81       	ldd	r24, Y+7	; 0x07
    268c:	48 2f       	mov	r20, r24
    268e:	50 e0       	ldi	r21, 0x00	; 0
    2690:	ca 01       	movw	r24, r20
    2692:	88 0f       	add	r24, r24
    2694:	99 1f       	adc	r25, r25
    2696:	9c 01       	movw	r18, r24
    2698:	22 0f       	add	r18, r18
    269a:	33 1f       	adc	r19, r19
    269c:	22 0f       	add	r18, r18
    269e:	33 1f       	adc	r19, r19
    26a0:	22 0f       	add	r18, r18
    26a2:	33 1f       	adc	r19, r19
    26a4:	82 0f       	add	r24, r18
    26a6:	93 1f       	adc	r25, r19
    26a8:	84 0f       	add	r24, r20
    26aa:	95 1f       	adc	r25, r21
    26ac:	fc 01       	movw	r30, r24
    26ae:	e1 58       	subi	r30, 0x81	; 129
    26b0:	fe 4f       	sbci	r31, 0xFE	; 254
    26b2:	80 81       	ld	r24, Z
    26b4:	88 8f       	std	Y+24, r24	; 0x18
    26b6:	8f 81       	ldd	r24, Y+7	; 0x07
    26b8:	48 2f       	mov	r20, r24
    26ba:	50 e0       	ldi	r21, 0x00	; 0
    26bc:	ca 01       	movw	r24, r20
    26be:	88 0f       	add	r24, r24
    26c0:	99 1f       	adc	r25, r25
    26c2:	9c 01       	movw	r18, r24
    26c4:	22 0f       	add	r18, r18
    26c6:	33 1f       	adc	r19, r19
    26c8:	22 0f       	add	r18, r18
    26ca:	33 1f       	adc	r19, r19
    26cc:	22 0f       	add	r18, r18
    26ce:	33 1f       	adc	r19, r19
    26d0:	82 0f       	add	r24, r18
    26d2:	93 1f       	adc	r25, r19
    26d4:	84 0f       	add	r24, r20
    26d6:	95 1f       	adc	r25, r21
    26d8:	fc 01       	movw	r30, r24
    26da:	e0 58       	subi	r30, 0x80	; 128
    26dc:	fe 4f       	sbci	r31, 0xFE	; 254
    26de:	80 81       	ld	r24, Z
    26e0:	8f 8b       	std	Y+23, r24	; 0x17
    26e2:	88 85       	ldd	r24, Y+8	; 0x08
    26e4:	88 2f       	mov	r24, r24
    26e6:	90 e0       	ldi	r25, 0x00	; 0
    26e8:	fc 01       	movw	r30, r24
    26ea:	ef 55       	subi	r30, 0x5F	; 95
    26ec:	fe 4f       	sbci	r31, 0xFE	; 254
    26ee:	80 81       	ld	r24, Z
    26f0:	86 95       	lsr	r24
    26f2:	86 95       	lsr	r24
    26f4:	88 2f       	mov	r24, r24
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	81 70       	andi	r24, 0x01	; 1
    26fa:	90 70       	andi	r25, 0x00	; 0
    26fc:	1e 8a       	std	Y+22, r1	; 0x16
    26fe:	00 97       	sbiw	r24, 0x00	; 0
    2700:	11 f4       	brne	.+4      	; 0x2706 <SSDLT_enuDisplayNum+0x6e8>
    2702:	81 e0       	ldi	r24, 0x01	; 1
    2704:	8e 8b       	std	Y+22, r24	; 0x16
    2706:	88 8d       	ldd	r24, Y+24	; 0x18
    2708:	6f 89       	ldd	r22, Y+23	; 0x17
    270a:	4e 89       	ldd	r20, Y+22	; 0x16
    270c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2710:	88 2f       	mov	r24, r24
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	00 24       	eor	r0, r0
    2716:	96 95       	lsr	r25
    2718:	87 95       	ror	r24
    271a:	07 94       	ror	r0
    271c:	96 95       	lsr	r25
    271e:	87 95       	ror	r24
    2720:	07 94       	ror	r0
    2722:	98 2f       	mov	r25, r24
    2724:	80 2d       	mov	r24, r0
    2726:	9c 01       	movw	r18, r24
    2728:	44 27       	eor	r20, r20
    272a:	37 fd       	sbrc	r19, 7
    272c:	40 95       	com	r20
    272e:	54 2f       	mov	r21, r20
    2730:	89 81       	ldd	r24, Y+1	; 0x01
    2732:	9a 81       	ldd	r25, Y+2	; 0x02
    2734:	ab 81       	ldd	r26, Y+3	; 0x03
    2736:	bc 81       	ldd	r27, Y+4	; 0x04
    2738:	82 2b       	or	r24, r18
    273a:	93 2b       	or	r25, r19
    273c:	a4 2b       	or	r26, r20
    273e:	b5 2b       	or	r27, r21
    2740:	89 83       	std	Y+1, r24	; 0x01
    2742:	9a 83       	std	Y+2, r25	; 0x02
    2744:	ab 83       	std	Y+3, r26	; 0x03
    2746:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>2) & 1))) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    2748:	8f 81       	ldd	r24, Y+7	; 0x07
    274a:	48 2f       	mov	r20, r24
    274c:	50 e0       	ldi	r21, 0x00	; 0
    274e:	ca 01       	movw	r24, r20
    2750:	88 0f       	add	r24, r24
    2752:	99 1f       	adc	r25, r25
    2754:	9c 01       	movw	r18, r24
    2756:	22 0f       	add	r18, r18
    2758:	33 1f       	adc	r19, r19
    275a:	22 0f       	add	r18, r18
    275c:	33 1f       	adc	r19, r19
    275e:	22 0f       	add	r18, r18
    2760:	33 1f       	adc	r19, r19
    2762:	82 0f       	add	r24, r18
    2764:	93 1f       	adc	r25, r19
    2766:	84 0f       	add	r24, r20
    2768:	95 1f       	adc	r25, r21
    276a:	fc 01       	movw	r30, r24
    276c:	ef 57       	subi	r30, 0x7F	; 127
    276e:	fe 4f       	sbci	r31, 0xFE	; 254
    2770:	80 81       	ld	r24, Z
    2772:	8d 8b       	std	Y+21, r24	; 0x15
    2774:	8f 81       	ldd	r24, Y+7	; 0x07
    2776:	48 2f       	mov	r20, r24
    2778:	50 e0       	ldi	r21, 0x00	; 0
    277a:	ca 01       	movw	r24, r20
    277c:	88 0f       	add	r24, r24
    277e:	99 1f       	adc	r25, r25
    2780:	9c 01       	movw	r18, r24
    2782:	22 0f       	add	r18, r18
    2784:	33 1f       	adc	r19, r19
    2786:	22 0f       	add	r18, r18
    2788:	33 1f       	adc	r19, r19
    278a:	22 0f       	add	r18, r18
    278c:	33 1f       	adc	r19, r19
    278e:	82 0f       	add	r24, r18
    2790:	93 1f       	adc	r25, r19
    2792:	84 0f       	add	r24, r20
    2794:	95 1f       	adc	r25, r21
    2796:	fc 01       	movw	r30, r24
    2798:	ee 57       	subi	r30, 0x7E	; 126
    279a:	fe 4f       	sbci	r31, 0xFE	; 254
    279c:	80 81       	ld	r24, Z
    279e:	8c 8b       	std	Y+20, r24	; 0x14
    27a0:	88 85       	ldd	r24, Y+8	; 0x08
    27a2:	88 2f       	mov	r24, r24
    27a4:	90 e0       	ldi	r25, 0x00	; 0
    27a6:	fc 01       	movw	r30, r24
    27a8:	ef 55       	subi	r30, 0x5F	; 95
    27aa:	fe 4f       	sbci	r31, 0xFE	; 254
    27ac:	80 81       	ld	r24, Z
    27ae:	86 95       	lsr	r24
    27b0:	86 95       	lsr	r24
    27b2:	86 95       	lsr	r24
    27b4:	88 2f       	mov	r24, r24
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	81 70       	andi	r24, 0x01	; 1
    27ba:	90 70       	andi	r25, 0x00	; 0
    27bc:	1b 8a       	std	Y+19, r1	; 0x13
    27be:	00 97       	sbiw	r24, 0x00	; 0
    27c0:	11 f4       	brne	.+4      	; 0x27c6 <SSDLT_enuDisplayNum+0x7a8>
    27c2:	81 e0       	ldi	r24, 0x01	; 1
    27c4:	8b 8b       	std	Y+19, r24	; 0x13
    27c6:	8d 89       	ldd	r24, Y+21	; 0x15
    27c8:	6c 89       	ldd	r22, Y+20	; 0x14
    27ca:	4b 89       	ldd	r20, Y+19	; 0x13
    27cc:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    27d0:	88 2f       	mov	r24, r24
    27d2:	90 e0       	ldi	r25, 0x00	; 0
    27d4:	98 2f       	mov	r25, r24
    27d6:	88 27       	eor	r24, r24
    27d8:	99 0f       	add	r25, r25
    27da:	9c 01       	movw	r18, r24
    27dc:	44 27       	eor	r20, r20
    27de:	37 fd       	sbrc	r19, 7
    27e0:	40 95       	com	r20
    27e2:	54 2f       	mov	r21, r20
    27e4:	89 81       	ldd	r24, Y+1	; 0x01
    27e6:	9a 81       	ldd	r25, Y+2	; 0x02
    27e8:	ab 81       	ldd	r26, Y+3	; 0x03
    27ea:	bc 81       	ldd	r27, Y+4	; 0x04
    27ec:	82 2b       	or	r24, r18
    27ee:	93 2b       	or	r25, r19
    27f0:	a4 2b       	or	r26, r20
    27f2:	b5 2b       	or	r27, r21
    27f4:	89 83       	std	Y+1, r24	; 0x01
    27f6:	9a 83       	std	Y+2, r25	; 0x02
    27f8:	ab 83       	std	Y+3, r26	; 0x03
    27fa:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>3) & 1))) << 9);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    27fc:	8f 81       	ldd	r24, Y+7	; 0x07
    27fe:	48 2f       	mov	r20, r24
    2800:	50 e0       	ldi	r21, 0x00	; 0
    2802:	ca 01       	movw	r24, r20
    2804:	88 0f       	add	r24, r24
    2806:	99 1f       	adc	r25, r25
    2808:	9c 01       	movw	r18, r24
    280a:	22 0f       	add	r18, r18
    280c:	33 1f       	adc	r19, r19
    280e:	22 0f       	add	r18, r18
    2810:	33 1f       	adc	r19, r19
    2812:	22 0f       	add	r18, r18
    2814:	33 1f       	adc	r19, r19
    2816:	82 0f       	add	r24, r18
    2818:	93 1f       	adc	r25, r19
    281a:	84 0f       	add	r24, r20
    281c:	95 1f       	adc	r25, r21
    281e:	fc 01       	movw	r30, r24
    2820:	ed 57       	subi	r30, 0x7D	; 125
    2822:	fe 4f       	sbci	r31, 0xFE	; 254
    2824:	80 81       	ld	r24, Z
    2826:	8a 8b       	std	Y+18, r24	; 0x12
    2828:	8f 81       	ldd	r24, Y+7	; 0x07
    282a:	48 2f       	mov	r20, r24
    282c:	50 e0       	ldi	r21, 0x00	; 0
    282e:	ca 01       	movw	r24, r20
    2830:	88 0f       	add	r24, r24
    2832:	99 1f       	adc	r25, r25
    2834:	9c 01       	movw	r18, r24
    2836:	22 0f       	add	r18, r18
    2838:	33 1f       	adc	r19, r19
    283a:	22 0f       	add	r18, r18
    283c:	33 1f       	adc	r19, r19
    283e:	22 0f       	add	r18, r18
    2840:	33 1f       	adc	r19, r19
    2842:	82 0f       	add	r24, r18
    2844:	93 1f       	adc	r25, r19
    2846:	84 0f       	add	r24, r20
    2848:	95 1f       	adc	r25, r21
    284a:	fc 01       	movw	r30, r24
    284c:	ec 57       	subi	r30, 0x7C	; 124
    284e:	fe 4f       	sbci	r31, 0xFE	; 254
    2850:	80 81       	ld	r24, Z
    2852:	89 8b       	std	Y+17, r24	; 0x11
    2854:	88 85       	ldd	r24, Y+8	; 0x08
    2856:	88 2f       	mov	r24, r24
    2858:	90 e0       	ldi	r25, 0x00	; 0
    285a:	fc 01       	movw	r30, r24
    285c:	ef 55       	subi	r30, 0x5F	; 95
    285e:	fe 4f       	sbci	r31, 0xFE	; 254
    2860:	80 81       	ld	r24, Z
    2862:	82 95       	swap	r24
    2864:	8f 70       	andi	r24, 0x0F	; 15
    2866:	88 2f       	mov	r24, r24
    2868:	90 e0       	ldi	r25, 0x00	; 0
    286a:	81 70       	andi	r24, 0x01	; 1
    286c:	90 70       	andi	r25, 0x00	; 0
    286e:	18 8a       	std	Y+16, r1	; 0x10
    2870:	00 97       	sbiw	r24, 0x00	; 0
    2872:	11 f4       	brne	.+4      	; 0x2878 <SSDLT_enuDisplayNum+0x85a>
    2874:	81 e0       	ldi	r24, 0x01	; 1
    2876:	88 8b       	std	Y+16, r24	; 0x10
    2878:	8a 89       	ldd	r24, Y+18	; 0x12
    287a:	69 89       	ldd	r22, Y+17	; 0x11
    287c:	48 89       	ldd	r20, Y+16	; 0x10
    287e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2882:	88 2f       	mov	r24, r24
    2884:	90 e0       	ldi	r25, 0x00	; 0
    2886:	98 2f       	mov	r25, r24
    2888:	88 27       	eor	r24, r24
    288a:	92 95       	swap	r25
    288c:	90 7f       	andi	r25, 0xF0	; 240
    288e:	9c 01       	movw	r18, r24
    2890:	44 27       	eor	r20, r20
    2892:	37 fd       	sbrc	r19, 7
    2894:	40 95       	com	r20
    2896:	54 2f       	mov	r21, r20
    2898:	89 81       	ldd	r24, Y+1	; 0x01
    289a:	9a 81       	ldd	r25, Y+2	; 0x02
    289c:	ab 81       	ldd	r26, Y+3	; 0x03
    289e:	bc 81       	ldd	r27, Y+4	; 0x04
    28a0:	82 2b       	or	r24, r18
    28a2:	93 2b       	or	r25, r19
    28a4:	a4 2b       	or	r26, r20
    28a6:	b5 2b       	or	r27, r21
    28a8:	89 83       	std	Y+1, r24	; 0x01
    28aa:	9a 83       	std	Y+2, r25	; 0x02
    28ac:	ab 83       	std	Y+3, r26	; 0x03
    28ae:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>4) & 1))) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    28b0:	8f 81       	ldd	r24, Y+7	; 0x07
    28b2:	48 2f       	mov	r20, r24
    28b4:	50 e0       	ldi	r21, 0x00	; 0
    28b6:	ca 01       	movw	r24, r20
    28b8:	88 0f       	add	r24, r24
    28ba:	99 1f       	adc	r25, r25
    28bc:	9c 01       	movw	r18, r24
    28be:	22 0f       	add	r18, r18
    28c0:	33 1f       	adc	r19, r19
    28c2:	22 0f       	add	r18, r18
    28c4:	33 1f       	adc	r19, r19
    28c6:	22 0f       	add	r18, r18
    28c8:	33 1f       	adc	r19, r19
    28ca:	82 0f       	add	r24, r18
    28cc:	93 1f       	adc	r25, r19
    28ce:	84 0f       	add	r24, r20
    28d0:	95 1f       	adc	r25, r21
    28d2:	fc 01       	movw	r30, r24
    28d4:	eb 57       	subi	r30, 0x7B	; 123
    28d6:	fe 4f       	sbci	r31, 0xFE	; 254
    28d8:	80 81       	ld	r24, Z
    28da:	8f 87       	std	Y+15, r24	; 0x0f
    28dc:	8f 81       	ldd	r24, Y+7	; 0x07
    28de:	48 2f       	mov	r20, r24
    28e0:	50 e0       	ldi	r21, 0x00	; 0
    28e2:	ca 01       	movw	r24, r20
    28e4:	88 0f       	add	r24, r24
    28e6:	99 1f       	adc	r25, r25
    28e8:	9c 01       	movw	r18, r24
    28ea:	22 0f       	add	r18, r18
    28ec:	33 1f       	adc	r19, r19
    28ee:	22 0f       	add	r18, r18
    28f0:	33 1f       	adc	r19, r19
    28f2:	22 0f       	add	r18, r18
    28f4:	33 1f       	adc	r19, r19
    28f6:	82 0f       	add	r24, r18
    28f8:	93 1f       	adc	r25, r19
    28fa:	84 0f       	add	r24, r20
    28fc:	95 1f       	adc	r25, r21
    28fe:	fc 01       	movw	r30, r24
    2900:	ea 57       	subi	r30, 0x7A	; 122
    2902:	fe 4f       	sbci	r31, 0xFE	; 254
    2904:	80 81       	ld	r24, Z
    2906:	8e 87       	std	Y+14, r24	; 0x0e
    2908:	88 85       	ldd	r24, Y+8	; 0x08
    290a:	88 2f       	mov	r24, r24
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	fc 01       	movw	r30, r24
    2910:	ef 55       	subi	r30, 0x5F	; 95
    2912:	fe 4f       	sbci	r31, 0xFE	; 254
    2914:	80 81       	ld	r24, Z
    2916:	82 95       	swap	r24
    2918:	86 95       	lsr	r24
    291a:	87 70       	andi	r24, 0x07	; 7
    291c:	88 2f       	mov	r24, r24
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	81 70       	andi	r24, 0x01	; 1
    2922:	90 70       	andi	r25, 0x00	; 0
    2924:	1d 86       	std	Y+13, r1	; 0x0d
    2926:	00 97       	sbiw	r24, 0x00	; 0
    2928:	11 f4       	brne	.+4      	; 0x292e <SSDLT_enuDisplayNum+0x910>
    292a:	81 e0       	ldi	r24, 0x01	; 1
    292c:	8d 87       	std	Y+13, r24	; 0x0d
    292e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2930:	6e 85       	ldd	r22, Y+14	; 0x0e
    2932:	4d 85       	ldd	r20, Y+13	; 0x0d
    2934:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2938:	88 2f       	mov	r24, r24
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	a0 e0       	ldi	r26, 0x00	; 0
    293e:	b0 e0       	ldi	r27, 0x00	; 0
    2940:	9c 01       	movw	r18, r24
    2942:	ad 01       	movw	r20, r26
    2944:	01 2e       	mov	r0, r17
    2946:	1f e0       	ldi	r17, 0x0F	; 15
    2948:	22 0f       	add	r18, r18
    294a:	33 1f       	adc	r19, r19
    294c:	44 1f       	adc	r20, r20
    294e:	55 1f       	adc	r21, r21
    2950:	1a 95       	dec	r17
    2952:	d1 f7       	brne	.-12     	; 0x2948 <SSDLT_enuDisplayNum+0x92a>
    2954:	10 2d       	mov	r17, r0
    2956:	89 81       	ldd	r24, Y+1	; 0x01
    2958:	9a 81       	ldd	r25, Y+2	; 0x02
    295a:	ab 81       	ldd	r26, Y+3	; 0x03
    295c:	bc 81       	ldd	r27, Y+4	; 0x04
    295e:	82 2b       	or	r24, r18
    2960:	93 2b       	or	r25, r19
    2962:	a4 2b       	or	r26, r20
    2964:	b5 2b       	or	r27, r21
    2966:	89 83       	std	Y+1, r24	; 0x01
    2968:	9a 83       	std	Y+2, r25	; 0x02
    296a:	ab 83       	std	Y+3, r26	; 0x03
    296c:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>5) & 1))) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    296e:	8f 81       	ldd	r24, Y+7	; 0x07
    2970:	48 2f       	mov	r20, r24
    2972:	50 e0       	ldi	r21, 0x00	; 0
    2974:	ca 01       	movw	r24, r20
    2976:	88 0f       	add	r24, r24
    2978:	99 1f       	adc	r25, r25
    297a:	9c 01       	movw	r18, r24
    297c:	22 0f       	add	r18, r18
    297e:	33 1f       	adc	r19, r19
    2980:	22 0f       	add	r18, r18
    2982:	33 1f       	adc	r19, r19
    2984:	22 0f       	add	r18, r18
    2986:	33 1f       	adc	r19, r19
    2988:	82 0f       	add	r24, r18
    298a:	93 1f       	adc	r25, r19
    298c:	84 0f       	add	r24, r20
    298e:	95 1f       	adc	r25, r21
    2990:	fc 01       	movw	r30, r24
    2992:	e9 57       	subi	r30, 0x79	; 121
    2994:	fe 4f       	sbci	r31, 0xFE	; 254
    2996:	80 81       	ld	r24, Z
    2998:	8c 87       	std	Y+12, r24	; 0x0c
    299a:	8f 81       	ldd	r24, Y+7	; 0x07
    299c:	48 2f       	mov	r20, r24
    299e:	50 e0       	ldi	r21, 0x00	; 0
    29a0:	ca 01       	movw	r24, r20
    29a2:	88 0f       	add	r24, r24
    29a4:	99 1f       	adc	r25, r25
    29a6:	9c 01       	movw	r18, r24
    29a8:	22 0f       	add	r18, r18
    29aa:	33 1f       	adc	r19, r19
    29ac:	22 0f       	add	r18, r18
    29ae:	33 1f       	adc	r19, r19
    29b0:	22 0f       	add	r18, r18
    29b2:	33 1f       	adc	r19, r19
    29b4:	82 0f       	add	r24, r18
    29b6:	93 1f       	adc	r25, r19
    29b8:	84 0f       	add	r24, r20
    29ba:	95 1f       	adc	r25, r21
    29bc:	fc 01       	movw	r30, r24
    29be:	e8 57       	subi	r30, 0x78	; 120
    29c0:	fe 4f       	sbci	r31, 0xFE	; 254
    29c2:	80 81       	ld	r24, Z
    29c4:	8b 87       	std	Y+11, r24	; 0x0b
    29c6:	88 85       	ldd	r24, Y+8	; 0x08
    29c8:	88 2f       	mov	r24, r24
    29ca:	90 e0       	ldi	r25, 0x00	; 0
    29cc:	fc 01       	movw	r30, r24
    29ce:	ef 55       	subi	r30, 0x5F	; 95
    29d0:	fe 4f       	sbci	r31, 0xFE	; 254
    29d2:	80 81       	ld	r24, Z
    29d4:	82 95       	swap	r24
    29d6:	86 95       	lsr	r24
    29d8:	86 95       	lsr	r24
    29da:	83 70       	andi	r24, 0x03	; 3
    29dc:	88 2f       	mov	r24, r24
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	81 70       	andi	r24, 0x01	; 1
    29e2:	90 70       	andi	r25, 0x00	; 0
    29e4:	1a 86       	std	Y+10, r1	; 0x0a
    29e6:	00 97       	sbiw	r24, 0x00	; 0
    29e8:	11 f4       	brne	.+4      	; 0x29ee <SSDLT_enuDisplayNum+0x9d0>
    29ea:	81 e0       	ldi	r24, 0x01	; 1
    29ec:	8a 87       	std	Y+10, r24	; 0x0a
    29ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    29f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    29f2:	4a 85       	ldd	r20, Y+10	; 0x0a
    29f4:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    29f8:	88 2f       	mov	r24, r24
    29fa:	90 e0       	ldi	r25, 0x00	; 0
    29fc:	a0 e0       	ldi	r26, 0x00	; 0
    29fe:	b0 e0       	ldi	r27, 0x00	; 0
    2a00:	9c 01       	movw	r18, r24
    2a02:	ad 01       	movw	r20, r26
    2a04:	01 2e       	mov	r0, r17
    2a06:	12 e1       	ldi	r17, 0x12	; 18
    2a08:	22 0f       	add	r18, r18
    2a0a:	33 1f       	adc	r19, r19
    2a0c:	44 1f       	adc	r20, r20
    2a0e:	55 1f       	adc	r21, r21
    2a10:	1a 95       	dec	r17
    2a12:	d1 f7       	brne	.-12     	; 0x2a08 <SSDLT_enuDisplayNum+0x9ea>
    2a14:	10 2d       	mov	r17, r0
    2a16:	89 81       	ldd	r24, Y+1	; 0x01
    2a18:	9a 81       	ldd	r25, Y+2	; 0x02
    2a1a:	ab 81       	ldd	r26, Y+3	; 0x03
    2a1c:	bc 81       	ldd	r27, Y+4	; 0x04
    2a1e:	82 2b       	or	r24, r18
    2a20:	93 2b       	or	r25, r19
    2a22:	a4 2b       	or	r26, r20
    2a24:	b5 2b       	or	r27, r21
    2a26:	89 83       	std	Y+1, r24	; 0x01
    2a28:	9a 83       	std	Y+2, r25	; 0x02
    2a2a:	ab 83       	std	Y+3, r26	; 0x03
    2a2c:	bc 83       	std	Y+4, r27	; 0x04
    2a2e:	05 c0       	rjmp	.+10     	; 0x2a3a <SSDLT_enuDisplayNum+0xa1c>
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>6) & 1))) << 18));
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    2a30:	83 e0       	ldi	r24, 0x03	; 3
    2a32:	8e 83       	std	Y+6, r24	; 0x06
    2a34:	02 c0       	rjmp	.+4      	; 0x2a3a <SSDLT_enuDisplayNum+0xa1c>
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2a36:	83 e0       	ldi	r24, 0x03	; 3
    2a38:	8e 83       	std	Y+6, r24	; 0x06
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    2a3a:	1d 82       	std	Y+5, r1	; 0x05
    2a3c:	1e c0       	rjmp	.+60     	; 0x2a7a <SSDLT_enuDisplayNum+0xa5c>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    2a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2a40:	28 2f       	mov	r18, r24
    2a42:	30 e0       	ldi	r19, 0x00	; 0
    2a44:	89 81       	ldd	r24, Y+1	; 0x01
    2a46:	9a 81       	ldd	r25, Y+2	; 0x02
    2a48:	ab 81       	ldd	r26, Y+3	; 0x03
    2a4a:	bc 81       	ldd	r27, Y+4	; 0x04
    2a4c:	02 2e       	mov	r0, r18
    2a4e:	04 c0       	rjmp	.+8      	; 0x2a58 <SSDLT_enuDisplayNum+0xa3a>
    2a50:	b6 95       	lsr	r27
    2a52:	a7 95       	ror	r26
    2a54:	97 95       	ror	r25
    2a56:	87 95       	ror	r24
    2a58:	0a 94       	dec	r0
    2a5a:	d2 f7       	brpl	.-12     	; 0x2a50 <SSDLT_enuDisplayNum+0xa32>
    2a5c:	87 70       	andi	r24, 0x07	; 7
    2a5e:	90 70       	andi	r25, 0x00	; 0
    2a60:	a0 70       	andi	r26, 0x00	; 0
    2a62:	b0 70       	andi	r27, 0x00	; 0
    2a64:	81 30       	cpi	r24, 0x01	; 1
    2a66:	91 05       	cpc	r25, r1
    2a68:	a1 05       	cpc	r26, r1
    2a6a:	b1 05       	cpc	r27, r1
    2a6c:	19 f0       	breq	.+6      	; 0x2a74 <SSDLT_enuDisplayNum+0xa56>
		{
			return Local_enuErrorState;
    2a6e:	8e 81       	ldd	r24, Y+6	; 0x06
    2a70:	89 87       	std	Y+9, r24	; 0x09
    2a72:	0a c0       	rjmp	.+20     	; 0x2a88 <SSDLT_enuDisplayNum+0xa6a>
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    2a74:	8d 81       	ldd	r24, Y+5	; 0x05
    2a76:	8d 5f       	subi	r24, 0xFD	; 253
    2a78:	8d 83       	std	Y+5, r24	; 0x05
    2a7a:	8d 81       	ldd	r24, Y+5	; 0x05
    2a7c:	85 31       	cpi	r24, 0x15	; 21
    2a7e:	f8 f2       	brcs	.-66     	; 0x2a3e <SSDLT_enuDisplayNum+0xa20>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    2a80:	81 e0       	ldi	r24, 0x01	; 1
    2a82:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    2a84:	8e 81       	ldd	r24, Y+6	; 0x06
    2a86:	89 87       	std	Y+9, r24	; 0x09
    2a88:	89 85       	ldd	r24, Y+9	; 0x09
}
    2a8a:	6e 96       	adiw	r28, 0x1e	; 30
    2a8c:	0f b6       	in	r0, 0x3f	; 63
    2a8e:	f8 94       	cli
    2a90:	de bf       	out	0x3e, r29	; 62
    2a92:	0f be       	out	0x3f, r0	; 63
    2a94:	cd bf       	out	0x3d, r28	; 61
    2a96:	cf 91       	pop	r28
    2a98:	df 91       	pop	r29
    2a9a:	08 95       	ret

00002a9c <SSDLT_enuEnableCommon>:

ES_t SSDLT_enuEnableCommon(u8 Copy_u8SegID)
{
    2a9c:	df 93       	push	r29
    2a9e:	cf 93       	push	r28
    2aa0:	00 d0       	rcall	.+0      	; 0x2aa2 <SSDLT_enuEnableCommon+0x6>
    2aa2:	cd b7       	in	r28, 0x3d	; 61
    2aa4:	de b7       	in	r29, 0x3e	; 62
    2aa6:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2aa8:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2aaa:	8a 81       	ldd	r24, Y+2	; 0x02
    2aac:	82 30       	cpi	r24, 0x02	; 2
    2aae:	08 f0       	brcs	.+2      	; 0x2ab2 <SSDLT_enuEnableCommon+0x16>
    2ab0:	c2 c0       	rjmp	.+388    	; 0x2c36 <SSDLT_enuEnableCommon+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port != NOT_CONNECTED ||
    2ab2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab4:	48 2f       	mov	r20, r24
    2ab6:	50 e0       	ldi	r21, 0x00	; 0
    2ab8:	ca 01       	movw	r24, r20
    2aba:	88 0f       	add	r24, r24
    2abc:	99 1f       	adc	r25, r25
    2abe:	9c 01       	movw	r18, r24
    2ac0:	22 0f       	add	r18, r18
    2ac2:	33 1f       	adc	r19, r19
    2ac4:	22 0f       	add	r18, r18
    2ac6:	33 1f       	adc	r19, r19
    2ac8:	22 0f       	add	r18, r18
    2aca:	33 1f       	adc	r19, r19
    2acc:	82 0f       	add	r24, r18
    2ace:	93 1f       	adc	r25, r19
    2ad0:	84 0f       	add	r24, r20
    2ad2:	95 1f       	adc	r25, r21
    2ad4:	fc 01       	movw	r30, r24
    2ad6:	e7 57       	subi	r30, 0x77	; 119
    2ad8:	fe 4f       	sbci	r31, 0xFE	; 254
    2ada:	80 81       	ld	r24, Z
    2adc:	82 30       	cpi	r24, 0x02	; 2
    2ade:	c1 f4       	brne	.+48     	; 0x2b10 <SSDLT_enuEnableCommon+0x74>
    2ae0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae2:	48 2f       	mov	r20, r24
    2ae4:	50 e0       	ldi	r21, 0x00	; 0
    2ae6:	ca 01       	movw	r24, r20
    2ae8:	88 0f       	add	r24, r24
    2aea:	99 1f       	adc	r25, r25
    2aec:	9c 01       	movw	r18, r24
    2aee:	22 0f       	add	r18, r18
    2af0:	33 1f       	adc	r19, r19
    2af2:	22 0f       	add	r18, r18
    2af4:	33 1f       	adc	r19, r19
    2af6:	22 0f       	add	r18, r18
    2af8:	33 1f       	adc	r19, r19
    2afa:	82 0f       	add	r24, r18
    2afc:	93 1f       	adc	r25, r19
    2afe:	84 0f       	add	r24, r20
    2b00:	95 1f       	adc	r25, r21
    2b02:	fc 01       	movw	r30, r24
    2b04:	e6 57       	subi	r30, 0x76	; 118
    2b06:	fe 4f       	sbci	r31, 0xFE	; 254
    2b08:	80 81       	ld	r24, Z
    2b0a:	82 30       	cpi	r24, 0x02	; 2
    2b0c:	09 f4       	brne	.+2      	; 0x2b10 <SSDLT_enuEnableCommon+0x74>
    2b0e:	95 c0       	rjmp	.+298    	; 0x2c3a <SSDLT_enuEnableCommon+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2b10:	8a 81       	ldd	r24, Y+2	; 0x02
    2b12:	48 2f       	mov	r20, r24
    2b14:	50 e0       	ldi	r21, 0x00	; 0
    2b16:	ca 01       	movw	r24, r20
    2b18:	88 0f       	add	r24, r24
    2b1a:	99 1f       	adc	r25, r25
    2b1c:	9c 01       	movw	r18, r24
    2b1e:	22 0f       	add	r18, r18
    2b20:	33 1f       	adc	r19, r19
    2b22:	22 0f       	add	r18, r18
    2b24:	33 1f       	adc	r19, r19
    2b26:	22 0f       	add	r18, r18
    2b28:	33 1f       	adc	r19, r19
    2b2a:	82 0f       	add	r24, r18
    2b2c:	93 1f       	adc	r25, r19
    2b2e:	84 0f       	add	r24, r20
    2b30:	95 1f       	adc	r25, r21
    2b32:	fc 01       	movw	r30, r24
    2b34:	e3 57       	subi	r30, 0x73	; 115
    2b36:	fe 4f       	sbci	r31, 0xFE	; 254
    2b38:	80 81       	ld	r24, Z
    2b3a:	81 30       	cpi	r24, 0x01	; 1
    2b3c:	89 f5       	brne	.+98     	; 0x2ba0 <SSDLT_enuEnableCommon+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    2b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b40:	48 2f       	mov	r20, r24
    2b42:	50 e0       	ldi	r21, 0x00	; 0
    2b44:	ca 01       	movw	r24, r20
    2b46:	88 0f       	add	r24, r24
    2b48:	99 1f       	adc	r25, r25
    2b4a:	9c 01       	movw	r18, r24
    2b4c:	22 0f       	add	r18, r18
    2b4e:	33 1f       	adc	r19, r19
    2b50:	22 0f       	add	r18, r18
    2b52:	33 1f       	adc	r19, r19
    2b54:	22 0f       	add	r18, r18
    2b56:	33 1f       	adc	r19, r19
    2b58:	82 0f       	add	r24, r18
    2b5a:	93 1f       	adc	r25, r19
    2b5c:	84 0f       	add	r24, r20
    2b5e:	95 1f       	adc	r25, r21
    2b60:	fc 01       	movw	r30, r24
    2b62:	e7 57       	subi	r30, 0x77	; 119
    2b64:	fe 4f       	sbci	r31, 0xFE	; 254
    2b66:	60 81       	ld	r22, Z
    2b68:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6a:	48 2f       	mov	r20, r24
    2b6c:	50 e0       	ldi	r21, 0x00	; 0
    2b6e:	ca 01       	movw	r24, r20
    2b70:	88 0f       	add	r24, r24
    2b72:	99 1f       	adc	r25, r25
    2b74:	9c 01       	movw	r18, r24
    2b76:	22 0f       	add	r18, r18
    2b78:	33 1f       	adc	r19, r19
    2b7a:	22 0f       	add	r18, r18
    2b7c:	33 1f       	adc	r19, r19
    2b7e:	22 0f       	add	r18, r18
    2b80:	33 1f       	adc	r19, r19
    2b82:	82 0f       	add	r24, r18
    2b84:	93 1f       	adc	r25, r19
    2b86:	84 0f       	add	r24, r20
    2b88:	95 1f       	adc	r25, r21
    2b8a:	fc 01       	movw	r30, r24
    2b8c:	e6 57       	subi	r30, 0x76	; 118
    2b8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b90:	90 81       	ld	r25, Z
    2b92:	86 2f       	mov	r24, r22
    2b94:	69 2f       	mov	r22, r25
    2b96:	40 e0       	ldi	r20, 0x00	; 0
    2b98:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2b9c:	89 83       	std	Y+1, r24	; 0x01
    2b9e:	4d c0       	rjmp	.+154    	; 0x2c3a <SSDLT_enuEnableCommon+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8LOW);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2ba0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba2:	48 2f       	mov	r20, r24
    2ba4:	50 e0       	ldi	r21, 0x00	; 0
    2ba6:	ca 01       	movw	r24, r20
    2ba8:	88 0f       	add	r24, r24
    2baa:	99 1f       	adc	r25, r25
    2bac:	9c 01       	movw	r18, r24
    2bae:	22 0f       	add	r18, r18
    2bb0:	33 1f       	adc	r19, r19
    2bb2:	22 0f       	add	r18, r18
    2bb4:	33 1f       	adc	r19, r19
    2bb6:	22 0f       	add	r18, r18
    2bb8:	33 1f       	adc	r19, r19
    2bba:	82 0f       	add	r24, r18
    2bbc:	93 1f       	adc	r25, r19
    2bbe:	84 0f       	add	r24, r20
    2bc0:	95 1f       	adc	r25, r21
    2bc2:	fc 01       	movw	r30, r24
    2bc4:	e3 57       	subi	r30, 0x73	; 115
    2bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc8:	80 81       	ld	r24, Z
    2bca:	88 23       	and	r24, r24
    2bcc:	89 f5       	brne	.+98     	; 0x2c30 <SSDLT_enuEnableCommon+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    2bce:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd0:	48 2f       	mov	r20, r24
    2bd2:	50 e0       	ldi	r21, 0x00	; 0
    2bd4:	ca 01       	movw	r24, r20
    2bd6:	88 0f       	add	r24, r24
    2bd8:	99 1f       	adc	r25, r25
    2bda:	9c 01       	movw	r18, r24
    2bdc:	22 0f       	add	r18, r18
    2bde:	33 1f       	adc	r19, r19
    2be0:	22 0f       	add	r18, r18
    2be2:	33 1f       	adc	r19, r19
    2be4:	22 0f       	add	r18, r18
    2be6:	33 1f       	adc	r19, r19
    2be8:	82 0f       	add	r24, r18
    2bea:	93 1f       	adc	r25, r19
    2bec:	84 0f       	add	r24, r20
    2bee:	95 1f       	adc	r25, r21
    2bf0:	fc 01       	movw	r30, r24
    2bf2:	e7 57       	subi	r30, 0x77	; 119
    2bf4:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf6:	60 81       	ld	r22, Z
    2bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bfa:	48 2f       	mov	r20, r24
    2bfc:	50 e0       	ldi	r21, 0x00	; 0
    2bfe:	ca 01       	movw	r24, r20
    2c00:	88 0f       	add	r24, r24
    2c02:	99 1f       	adc	r25, r25
    2c04:	9c 01       	movw	r18, r24
    2c06:	22 0f       	add	r18, r18
    2c08:	33 1f       	adc	r19, r19
    2c0a:	22 0f       	add	r18, r18
    2c0c:	33 1f       	adc	r19, r19
    2c0e:	22 0f       	add	r18, r18
    2c10:	33 1f       	adc	r19, r19
    2c12:	82 0f       	add	r24, r18
    2c14:	93 1f       	adc	r25, r19
    2c16:	84 0f       	add	r24, r20
    2c18:	95 1f       	adc	r25, r21
    2c1a:	fc 01       	movw	r30, r24
    2c1c:	e6 57       	subi	r30, 0x76	; 118
    2c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c20:	90 81       	ld	r25, Z
    2c22:	86 2f       	mov	r24, r22
    2c24:	69 2f       	mov	r22, r25
    2c26:	41 e0       	ldi	r20, 0x01	; 1
    2c28:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2c2c:	89 83       	std	Y+1, r24	; 0x01
    2c2e:	05 c0       	rjmp	.+10     	; 0x2c3a <SSDLT_enuEnableCommon+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8HIGH);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2c30:	83 e0       	ldi	r24, 0x03	; 3
    2c32:	89 83       	std	Y+1, r24	; 0x01
    2c34:	02 c0       	rjmp	.+4      	; 0x2c3a <SSDLT_enuEnableCommon+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2c36:	83 e0       	ldi	r24, 0x03	; 3
    2c38:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2c3a:	89 81       	ldd	r24, Y+1	; 0x01
}
    2c3c:	0f 90       	pop	r0
    2c3e:	0f 90       	pop	r0
    2c40:	cf 91       	pop	r28
    2c42:	df 91       	pop	r29
    2c44:	08 95       	ret

00002c46 <SSDLT_enuDisableCommon>:

ES_t SSDLT_enuDisableCommon(u8 Copy_u8SegID)
{
    2c46:	df 93       	push	r29
    2c48:	cf 93       	push	r28
    2c4a:	00 d0       	rcall	.+0      	; 0x2c4c <SSDLT_enuDisableCommon+0x6>
    2c4c:	cd b7       	in	r28, 0x3d	; 61
    2c4e:	de b7       	in	r29, 0x3e	; 62
    2c50:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2c52:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2c54:	8a 81       	ldd	r24, Y+2	; 0x02
    2c56:	82 30       	cpi	r24, 0x02	; 2
    2c58:	08 f0       	brcs	.+2      	; 0x2c5c <SSDLT_enuDisableCommon+0x16>
    2c5a:	c2 c0       	rjmp	.+388    	; 0x2de0 <SSDLT_enuDisableCommon+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port != NOT_CONNECTED ||
    2c5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c5e:	48 2f       	mov	r20, r24
    2c60:	50 e0       	ldi	r21, 0x00	; 0
    2c62:	ca 01       	movw	r24, r20
    2c64:	88 0f       	add	r24, r24
    2c66:	99 1f       	adc	r25, r25
    2c68:	9c 01       	movw	r18, r24
    2c6a:	22 0f       	add	r18, r18
    2c6c:	33 1f       	adc	r19, r19
    2c6e:	22 0f       	add	r18, r18
    2c70:	33 1f       	adc	r19, r19
    2c72:	22 0f       	add	r18, r18
    2c74:	33 1f       	adc	r19, r19
    2c76:	82 0f       	add	r24, r18
    2c78:	93 1f       	adc	r25, r19
    2c7a:	84 0f       	add	r24, r20
    2c7c:	95 1f       	adc	r25, r21
    2c7e:	fc 01       	movw	r30, r24
    2c80:	e7 57       	subi	r30, 0x77	; 119
    2c82:	fe 4f       	sbci	r31, 0xFE	; 254
    2c84:	80 81       	ld	r24, Z
    2c86:	82 30       	cpi	r24, 0x02	; 2
    2c88:	c1 f4       	brne	.+48     	; 0x2cba <SSDLT_enuDisableCommon+0x74>
    2c8a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c8c:	48 2f       	mov	r20, r24
    2c8e:	50 e0       	ldi	r21, 0x00	; 0
    2c90:	ca 01       	movw	r24, r20
    2c92:	88 0f       	add	r24, r24
    2c94:	99 1f       	adc	r25, r25
    2c96:	9c 01       	movw	r18, r24
    2c98:	22 0f       	add	r18, r18
    2c9a:	33 1f       	adc	r19, r19
    2c9c:	22 0f       	add	r18, r18
    2c9e:	33 1f       	adc	r19, r19
    2ca0:	22 0f       	add	r18, r18
    2ca2:	33 1f       	adc	r19, r19
    2ca4:	82 0f       	add	r24, r18
    2ca6:	93 1f       	adc	r25, r19
    2ca8:	84 0f       	add	r24, r20
    2caa:	95 1f       	adc	r25, r21
    2cac:	fc 01       	movw	r30, r24
    2cae:	e6 57       	subi	r30, 0x76	; 118
    2cb0:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb2:	80 81       	ld	r24, Z
    2cb4:	82 30       	cpi	r24, 0x02	; 2
    2cb6:	09 f4       	brne	.+2      	; 0x2cba <SSDLT_enuDisableCommon+0x74>
    2cb8:	95 c0       	rjmp	.+298    	; 0x2de4 <SSDLT_enuDisableCommon+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2cba:	8a 81       	ldd	r24, Y+2	; 0x02
    2cbc:	48 2f       	mov	r20, r24
    2cbe:	50 e0       	ldi	r21, 0x00	; 0
    2cc0:	ca 01       	movw	r24, r20
    2cc2:	88 0f       	add	r24, r24
    2cc4:	99 1f       	adc	r25, r25
    2cc6:	9c 01       	movw	r18, r24
    2cc8:	22 0f       	add	r18, r18
    2cca:	33 1f       	adc	r19, r19
    2ccc:	22 0f       	add	r18, r18
    2cce:	33 1f       	adc	r19, r19
    2cd0:	22 0f       	add	r18, r18
    2cd2:	33 1f       	adc	r19, r19
    2cd4:	82 0f       	add	r24, r18
    2cd6:	93 1f       	adc	r25, r19
    2cd8:	84 0f       	add	r24, r20
    2cda:	95 1f       	adc	r25, r21
    2cdc:	fc 01       	movw	r30, r24
    2cde:	e3 57       	subi	r30, 0x73	; 115
    2ce0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce2:	80 81       	ld	r24, Z
    2ce4:	81 30       	cpi	r24, 0x01	; 1
    2ce6:	89 f5       	brne	.+98     	; 0x2d4a <SSDLT_enuDisableCommon+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    2ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    2cea:	48 2f       	mov	r20, r24
    2cec:	50 e0       	ldi	r21, 0x00	; 0
    2cee:	ca 01       	movw	r24, r20
    2cf0:	88 0f       	add	r24, r24
    2cf2:	99 1f       	adc	r25, r25
    2cf4:	9c 01       	movw	r18, r24
    2cf6:	22 0f       	add	r18, r18
    2cf8:	33 1f       	adc	r19, r19
    2cfa:	22 0f       	add	r18, r18
    2cfc:	33 1f       	adc	r19, r19
    2cfe:	22 0f       	add	r18, r18
    2d00:	33 1f       	adc	r19, r19
    2d02:	82 0f       	add	r24, r18
    2d04:	93 1f       	adc	r25, r19
    2d06:	84 0f       	add	r24, r20
    2d08:	95 1f       	adc	r25, r21
    2d0a:	fc 01       	movw	r30, r24
    2d0c:	e7 57       	subi	r30, 0x77	; 119
    2d0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d10:	60 81       	ld	r22, Z
    2d12:	8a 81       	ldd	r24, Y+2	; 0x02
    2d14:	48 2f       	mov	r20, r24
    2d16:	50 e0       	ldi	r21, 0x00	; 0
    2d18:	ca 01       	movw	r24, r20
    2d1a:	88 0f       	add	r24, r24
    2d1c:	99 1f       	adc	r25, r25
    2d1e:	9c 01       	movw	r18, r24
    2d20:	22 0f       	add	r18, r18
    2d22:	33 1f       	adc	r19, r19
    2d24:	22 0f       	add	r18, r18
    2d26:	33 1f       	adc	r19, r19
    2d28:	22 0f       	add	r18, r18
    2d2a:	33 1f       	adc	r19, r19
    2d2c:	82 0f       	add	r24, r18
    2d2e:	93 1f       	adc	r25, r19
    2d30:	84 0f       	add	r24, r20
    2d32:	95 1f       	adc	r25, r21
    2d34:	fc 01       	movw	r30, r24
    2d36:	e6 57       	subi	r30, 0x76	; 118
    2d38:	fe 4f       	sbci	r31, 0xFE	; 254
    2d3a:	90 81       	ld	r25, Z
    2d3c:	86 2f       	mov	r24, r22
    2d3e:	69 2f       	mov	r22, r25
    2d40:	41 e0       	ldi	r20, 0x01	; 1
    2d42:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2d46:	89 83       	std	Y+1, r24	; 0x01
    2d48:	4d c0       	rjmp	.+154    	; 0x2de4 <SSDLT_enuDisableCommon+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8HIGH);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2d4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d4c:	48 2f       	mov	r20, r24
    2d4e:	50 e0       	ldi	r21, 0x00	; 0
    2d50:	ca 01       	movw	r24, r20
    2d52:	88 0f       	add	r24, r24
    2d54:	99 1f       	adc	r25, r25
    2d56:	9c 01       	movw	r18, r24
    2d58:	22 0f       	add	r18, r18
    2d5a:	33 1f       	adc	r19, r19
    2d5c:	22 0f       	add	r18, r18
    2d5e:	33 1f       	adc	r19, r19
    2d60:	22 0f       	add	r18, r18
    2d62:	33 1f       	adc	r19, r19
    2d64:	82 0f       	add	r24, r18
    2d66:	93 1f       	adc	r25, r19
    2d68:	84 0f       	add	r24, r20
    2d6a:	95 1f       	adc	r25, r21
    2d6c:	fc 01       	movw	r30, r24
    2d6e:	e3 57       	subi	r30, 0x73	; 115
    2d70:	fe 4f       	sbci	r31, 0xFE	; 254
    2d72:	80 81       	ld	r24, Z
    2d74:	88 23       	and	r24, r24
    2d76:	89 f5       	brne	.+98     	; 0x2dda <SSDLT_enuDisableCommon+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    2d78:	8a 81       	ldd	r24, Y+2	; 0x02
    2d7a:	48 2f       	mov	r20, r24
    2d7c:	50 e0       	ldi	r21, 0x00	; 0
    2d7e:	ca 01       	movw	r24, r20
    2d80:	88 0f       	add	r24, r24
    2d82:	99 1f       	adc	r25, r25
    2d84:	9c 01       	movw	r18, r24
    2d86:	22 0f       	add	r18, r18
    2d88:	33 1f       	adc	r19, r19
    2d8a:	22 0f       	add	r18, r18
    2d8c:	33 1f       	adc	r19, r19
    2d8e:	22 0f       	add	r18, r18
    2d90:	33 1f       	adc	r19, r19
    2d92:	82 0f       	add	r24, r18
    2d94:	93 1f       	adc	r25, r19
    2d96:	84 0f       	add	r24, r20
    2d98:	95 1f       	adc	r25, r21
    2d9a:	fc 01       	movw	r30, r24
    2d9c:	e7 57       	subi	r30, 0x77	; 119
    2d9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2da0:	60 81       	ld	r22, Z
    2da2:	8a 81       	ldd	r24, Y+2	; 0x02
    2da4:	48 2f       	mov	r20, r24
    2da6:	50 e0       	ldi	r21, 0x00	; 0
    2da8:	ca 01       	movw	r24, r20
    2daa:	88 0f       	add	r24, r24
    2dac:	99 1f       	adc	r25, r25
    2dae:	9c 01       	movw	r18, r24
    2db0:	22 0f       	add	r18, r18
    2db2:	33 1f       	adc	r19, r19
    2db4:	22 0f       	add	r18, r18
    2db6:	33 1f       	adc	r19, r19
    2db8:	22 0f       	add	r18, r18
    2dba:	33 1f       	adc	r19, r19
    2dbc:	82 0f       	add	r24, r18
    2dbe:	93 1f       	adc	r25, r19
    2dc0:	84 0f       	add	r24, r20
    2dc2:	95 1f       	adc	r25, r21
    2dc4:	fc 01       	movw	r30, r24
    2dc6:	e6 57       	subi	r30, 0x76	; 118
    2dc8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dca:	90 81       	ld	r25, Z
    2dcc:	86 2f       	mov	r24, r22
    2dce:	69 2f       	mov	r22, r25
    2dd0:	40 e0       	ldi	r20, 0x00	; 0
    2dd2:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2dd6:	89 83       	std	Y+1, r24	; 0x01
    2dd8:	05 c0       	rjmp	.+10     	; 0x2de4 <SSDLT_enuDisableCommon+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8LOW);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2dda:	83 e0       	ldi	r24, 0x03	; 3
    2ddc:	89 83       	std	Y+1, r24	; 0x01
    2dde:	02 c0       	rjmp	.+4      	; 0x2de4 <SSDLT_enuDisableCommon+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2de0:	83 e0       	ldi	r24, 0x03	; 3
    2de2:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2de4:	89 81       	ldd	r24, Y+1	; 0x01
}
    2de6:	0f 90       	pop	r0
    2de8:	0f 90       	pop	r0
    2dea:	cf 91       	pop	r28
    2dec:	df 91       	pop	r29
    2dee:	08 95       	ret

00002df0 <SSDLT_enuEnableDot>:

ES_t SSDLT_enuEnableDot(u8 Copy_u8SegID)
{
    2df0:	df 93       	push	r29
    2df2:	cf 93       	push	r28
    2df4:	00 d0       	rcall	.+0      	; 0x2df6 <SSDLT_enuEnableDot+0x6>
    2df6:	cd b7       	in	r28, 0x3d	; 61
    2df8:	de b7       	in	r29, 0x3e	; 62
    2dfa:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2dfc:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2dfe:	8a 81       	ldd	r24, Y+2	; 0x02
    2e00:	82 30       	cpi	r24, 0x02	; 2
    2e02:	08 f0       	brcs	.+2      	; 0x2e06 <SSDLT_enuEnableDot+0x16>
    2e04:	c2 c0       	rjmp	.+388    	; 0x2f8a <SSDLT_enuEnableDot+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    2e06:	8a 81       	ldd	r24, Y+2	; 0x02
    2e08:	48 2f       	mov	r20, r24
    2e0a:	50 e0       	ldi	r21, 0x00	; 0
    2e0c:	ca 01       	movw	r24, r20
    2e0e:	88 0f       	add	r24, r24
    2e10:	99 1f       	adc	r25, r25
    2e12:	9c 01       	movw	r18, r24
    2e14:	22 0f       	add	r18, r18
    2e16:	33 1f       	adc	r19, r19
    2e18:	22 0f       	add	r18, r18
    2e1a:	33 1f       	adc	r19, r19
    2e1c:	22 0f       	add	r18, r18
    2e1e:	33 1f       	adc	r19, r19
    2e20:	82 0f       	add	r24, r18
    2e22:	93 1f       	adc	r25, r19
    2e24:	84 0f       	add	r24, r20
    2e26:	95 1f       	adc	r25, r21
    2e28:	fc 01       	movw	r30, r24
    2e2a:	e5 57       	subi	r30, 0x75	; 117
    2e2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2e2e:	80 81       	ld	r24, Z
    2e30:	82 30       	cpi	r24, 0x02	; 2
    2e32:	c1 f4       	brne	.+48     	; 0x2e64 <SSDLT_enuEnableDot+0x74>
    2e34:	8a 81       	ldd	r24, Y+2	; 0x02
    2e36:	48 2f       	mov	r20, r24
    2e38:	50 e0       	ldi	r21, 0x00	; 0
    2e3a:	ca 01       	movw	r24, r20
    2e3c:	88 0f       	add	r24, r24
    2e3e:	99 1f       	adc	r25, r25
    2e40:	9c 01       	movw	r18, r24
    2e42:	22 0f       	add	r18, r18
    2e44:	33 1f       	adc	r19, r19
    2e46:	22 0f       	add	r18, r18
    2e48:	33 1f       	adc	r19, r19
    2e4a:	22 0f       	add	r18, r18
    2e4c:	33 1f       	adc	r19, r19
    2e4e:	82 0f       	add	r24, r18
    2e50:	93 1f       	adc	r25, r19
    2e52:	84 0f       	add	r24, r20
    2e54:	95 1f       	adc	r25, r21
    2e56:	fc 01       	movw	r30, r24
    2e58:	e4 57       	subi	r30, 0x74	; 116
    2e5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e5c:	80 81       	ld	r24, Z
    2e5e:	82 30       	cpi	r24, 0x02	; 2
    2e60:	09 f4       	brne	.+2      	; 0x2e64 <SSDLT_enuEnableDot+0x74>
    2e62:	95 c0       	rjmp	.+298    	; 0x2f8e <SSDLT_enuEnableDot+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2e64:	8a 81       	ldd	r24, Y+2	; 0x02
    2e66:	48 2f       	mov	r20, r24
    2e68:	50 e0       	ldi	r21, 0x00	; 0
    2e6a:	ca 01       	movw	r24, r20
    2e6c:	88 0f       	add	r24, r24
    2e6e:	99 1f       	adc	r25, r25
    2e70:	9c 01       	movw	r18, r24
    2e72:	22 0f       	add	r18, r18
    2e74:	33 1f       	adc	r19, r19
    2e76:	22 0f       	add	r18, r18
    2e78:	33 1f       	adc	r19, r19
    2e7a:	22 0f       	add	r18, r18
    2e7c:	33 1f       	adc	r19, r19
    2e7e:	82 0f       	add	r24, r18
    2e80:	93 1f       	adc	r25, r19
    2e82:	84 0f       	add	r24, r20
    2e84:	95 1f       	adc	r25, r21
    2e86:	fc 01       	movw	r30, r24
    2e88:	e3 57       	subi	r30, 0x73	; 115
    2e8a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e8c:	80 81       	ld	r24, Z
    2e8e:	81 30       	cpi	r24, 0x01	; 1
    2e90:	89 f5       	brne	.+98     	; 0x2ef4 <SSDLT_enuEnableDot+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2e92:	8a 81       	ldd	r24, Y+2	; 0x02
    2e94:	48 2f       	mov	r20, r24
    2e96:	50 e0       	ldi	r21, 0x00	; 0
    2e98:	ca 01       	movw	r24, r20
    2e9a:	88 0f       	add	r24, r24
    2e9c:	99 1f       	adc	r25, r25
    2e9e:	9c 01       	movw	r18, r24
    2ea0:	22 0f       	add	r18, r18
    2ea2:	33 1f       	adc	r19, r19
    2ea4:	22 0f       	add	r18, r18
    2ea6:	33 1f       	adc	r19, r19
    2ea8:	22 0f       	add	r18, r18
    2eaa:	33 1f       	adc	r19, r19
    2eac:	82 0f       	add	r24, r18
    2eae:	93 1f       	adc	r25, r19
    2eb0:	84 0f       	add	r24, r20
    2eb2:	95 1f       	adc	r25, r21
    2eb4:	fc 01       	movw	r30, r24
    2eb6:	e5 57       	subi	r30, 0x75	; 117
    2eb8:	fe 4f       	sbci	r31, 0xFE	; 254
    2eba:	60 81       	ld	r22, Z
    2ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    2ebe:	48 2f       	mov	r20, r24
    2ec0:	50 e0       	ldi	r21, 0x00	; 0
    2ec2:	ca 01       	movw	r24, r20
    2ec4:	88 0f       	add	r24, r24
    2ec6:	99 1f       	adc	r25, r25
    2ec8:	9c 01       	movw	r18, r24
    2eca:	22 0f       	add	r18, r18
    2ecc:	33 1f       	adc	r19, r19
    2ece:	22 0f       	add	r18, r18
    2ed0:	33 1f       	adc	r19, r19
    2ed2:	22 0f       	add	r18, r18
    2ed4:	33 1f       	adc	r19, r19
    2ed6:	82 0f       	add	r24, r18
    2ed8:	93 1f       	adc	r25, r19
    2eda:	84 0f       	add	r24, r20
    2edc:	95 1f       	adc	r25, r21
    2ede:	fc 01       	movw	r30, r24
    2ee0:	e4 57       	subi	r30, 0x74	; 116
    2ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee4:	90 81       	ld	r25, Z
    2ee6:	86 2f       	mov	r24, r22
    2ee8:	69 2f       	mov	r22, r25
    2eea:	41 e0       	ldi	r20, 0x01	; 1
    2eec:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2ef0:	89 83       	std	Y+1, r24	; 0x01
    2ef2:	4d c0       	rjmp	.+154    	; 0x2f8e <SSDLT_enuEnableDot+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8HIGH);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2ef4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ef6:	48 2f       	mov	r20, r24
    2ef8:	50 e0       	ldi	r21, 0x00	; 0
    2efa:	ca 01       	movw	r24, r20
    2efc:	88 0f       	add	r24, r24
    2efe:	99 1f       	adc	r25, r25
    2f00:	9c 01       	movw	r18, r24
    2f02:	22 0f       	add	r18, r18
    2f04:	33 1f       	adc	r19, r19
    2f06:	22 0f       	add	r18, r18
    2f08:	33 1f       	adc	r19, r19
    2f0a:	22 0f       	add	r18, r18
    2f0c:	33 1f       	adc	r19, r19
    2f0e:	82 0f       	add	r24, r18
    2f10:	93 1f       	adc	r25, r19
    2f12:	84 0f       	add	r24, r20
    2f14:	95 1f       	adc	r25, r21
    2f16:	fc 01       	movw	r30, r24
    2f18:	e3 57       	subi	r30, 0x73	; 115
    2f1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f1c:	80 81       	ld	r24, Z
    2f1e:	88 23       	and	r24, r24
    2f20:	89 f5       	brne	.+98     	; 0x2f84 <SSDLT_enuEnableDot+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2f22:	8a 81       	ldd	r24, Y+2	; 0x02
    2f24:	48 2f       	mov	r20, r24
    2f26:	50 e0       	ldi	r21, 0x00	; 0
    2f28:	ca 01       	movw	r24, r20
    2f2a:	88 0f       	add	r24, r24
    2f2c:	99 1f       	adc	r25, r25
    2f2e:	9c 01       	movw	r18, r24
    2f30:	22 0f       	add	r18, r18
    2f32:	33 1f       	adc	r19, r19
    2f34:	22 0f       	add	r18, r18
    2f36:	33 1f       	adc	r19, r19
    2f38:	22 0f       	add	r18, r18
    2f3a:	33 1f       	adc	r19, r19
    2f3c:	82 0f       	add	r24, r18
    2f3e:	93 1f       	adc	r25, r19
    2f40:	84 0f       	add	r24, r20
    2f42:	95 1f       	adc	r25, r21
    2f44:	fc 01       	movw	r30, r24
    2f46:	e5 57       	subi	r30, 0x75	; 117
    2f48:	fe 4f       	sbci	r31, 0xFE	; 254
    2f4a:	60 81       	ld	r22, Z
    2f4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f4e:	48 2f       	mov	r20, r24
    2f50:	50 e0       	ldi	r21, 0x00	; 0
    2f52:	ca 01       	movw	r24, r20
    2f54:	88 0f       	add	r24, r24
    2f56:	99 1f       	adc	r25, r25
    2f58:	9c 01       	movw	r18, r24
    2f5a:	22 0f       	add	r18, r18
    2f5c:	33 1f       	adc	r19, r19
    2f5e:	22 0f       	add	r18, r18
    2f60:	33 1f       	adc	r19, r19
    2f62:	22 0f       	add	r18, r18
    2f64:	33 1f       	adc	r19, r19
    2f66:	82 0f       	add	r24, r18
    2f68:	93 1f       	adc	r25, r19
    2f6a:	84 0f       	add	r24, r20
    2f6c:	95 1f       	adc	r25, r21
    2f6e:	fc 01       	movw	r30, r24
    2f70:	e4 57       	subi	r30, 0x74	; 116
    2f72:	fe 4f       	sbci	r31, 0xFE	; 254
    2f74:	90 81       	ld	r25, Z
    2f76:	86 2f       	mov	r24, r22
    2f78:	69 2f       	mov	r22, r25
    2f7a:	40 e0       	ldi	r20, 0x00	; 0
    2f7c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    2f80:	89 83       	std	Y+1, r24	; 0x01
    2f82:	05 c0       	rjmp	.+10     	; 0x2f8e <SSDLT_enuEnableDot+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8LOW);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2f84:	83 e0       	ldi	r24, 0x03	; 3
    2f86:	89 83       	std	Y+1, r24	; 0x01
    2f88:	02 c0       	rjmp	.+4      	; 0x2f8e <SSDLT_enuEnableDot+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2f8a:	83 e0       	ldi	r24, 0x03	; 3
    2f8c:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2f8e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2f90:	0f 90       	pop	r0
    2f92:	0f 90       	pop	r0
    2f94:	cf 91       	pop	r28
    2f96:	df 91       	pop	r29
    2f98:	08 95       	ret

00002f9a <SSDLT_enuDisableDot>:

ES_t SSDLT_enuDisableDot(u8 Copy_u8SegID)
{
    2f9a:	df 93       	push	r29
    2f9c:	cf 93       	push	r28
    2f9e:	00 d0       	rcall	.+0      	; 0x2fa0 <SSDLT_enuDisableDot+0x6>
    2fa0:	0f 92       	push	r0
    2fa2:	cd b7       	in	r28, 0x3d	; 61
    2fa4:	de b7       	in	r29, 0x3e	; 62
    2fa6:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2fa8:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2faa:	8a 81       	ldd	r24, Y+2	; 0x02
    2fac:	82 30       	cpi	r24, 0x02	; 2
    2fae:	08 f0       	brcs	.+2      	; 0x2fb2 <SSDLT_enuDisableDot+0x18>
    2fb0:	c5 c0       	rjmp	.+394    	; 0x313c <SSDLT_enuDisableDot+0x1a2>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    2fb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb4:	48 2f       	mov	r20, r24
    2fb6:	50 e0       	ldi	r21, 0x00	; 0
    2fb8:	ca 01       	movw	r24, r20
    2fba:	88 0f       	add	r24, r24
    2fbc:	99 1f       	adc	r25, r25
    2fbe:	9c 01       	movw	r18, r24
    2fc0:	22 0f       	add	r18, r18
    2fc2:	33 1f       	adc	r19, r19
    2fc4:	22 0f       	add	r18, r18
    2fc6:	33 1f       	adc	r19, r19
    2fc8:	22 0f       	add	r18, r18
    2fca:	33 1f       	adc	r19, r19
    2fcc:	82 0f       	add	r24, r18
    2fce:	93 1f       	adc	r25, r19
    2fd0:	84 0f       	add	r24, r20
    2fd2:	95 1f       	adc	r25, r21
    2fd4:	fc 01       	movw	r30, r24
    2fd6:	e5 57       	subi	r30, 0x75	; 117
    2fd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fda:	80 81       	ld	r24, Z
    2fdc:	82 30       	cpi	r24, 0x02	; 2
    2fde:	c1 f4       	brne	.+48     	; 0x3010 <SSDLT_enuDisableDot+0x76>
    2fe0:	8a 81       	ldd	r24, Y+2	; 0x02
    2fe2:	48 2f       	mov	r20, r24
    2fe4:	50 e0       	ldi	r21, 0x00	; 0
    2fe6:	ca 01       	movw	r24, r20
    2fe8:	88 0f       	add	r24, r24
    2fea:	99 1f       	adc	r25, r25
    2fec:	9c 01       	movw	r18, r24
    2fee:	22 0f       	add	r18, r18
    2ff0:	33 1f       	adc	r19, r19
    2ff2:	22 0f       	add	r18, r18
    2ff4:	33 1f       	adc	r19, r19
    2ff6:	22 0f       	add	r18, r18
    2ff8:	33 1f       	adc	r19, r19
    2ffa:	82 0f       	add	r24, r18
    2ffc:	93 1f       	adc	r25, r19
    2ffe:	84 0f       	add	r24, r20
    3000:	95 1f       	adc	r25, r21
    3002:	fc 01       	movw	r30, r24
    3004:	e4 57       	subi	r30, 0x74	; 116
    3006:	fe 4f       	sbci	r31, 0xFE	; 254
    3008:	80 81       	ld	r24, Z
    300a:	82 30       	cpi	r24, 0x02	; 2
    300c:	09 f4       	brne	.+2      	; 0x3010 <SSDLT_enuDisableDot+0x76>
    300e:	93 c0       	rjmp	.+294    	; 0x3136 <SSDLT_enuDisableDot+0x19c>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    3010:	8a 81       	ldd	r24, Y+2	; 0x02
    3012:	48 2f       	mov	r20, r24
    3014:	50 e0       	ldi	r21, 0x00	; 0
    3016:	ca 01       	movw	r24, r20
    3018:	88 0f       	add	r24, r24
    301a:	99 1f       	adc	r25, r25
    301c:	9c 01       	movw	r18, r24
    301e:	22 0f       	add	r18, r18
    3020:	33 1f       	adc	r19, r19
    3022:	22 0f       	add	r18, r18
    3024:	33 1f       	adc	r19, r19
    3026:	22 0f       	add	r18, r18
    3028:	33 1f       	adc	r19, r19
    302a:	82 0f       	add	r24, r18
    302c:	93 1f       	adc	r25, r19
    302e:	84 0f       	add	r24, r20
    3030:	95 1f       	adc	r25, r21
    3032:	fc 01       	movw	r30, r24
    3034:	e3 57       	subi	r30, 0x73	; 115
    3036:	fe 4f       	sbci	r31, 0xFE	; 254
    3038:	80 81       	ld	r24, Z
    303a:	81 30       	cpi	r24, 0x01	; 1
    303c:	89 f5       	brne	.+98     	; 0x30a0 <SSDLT_enuDisableDot+0x106>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    303e:	8a 81       	ldd	r24, Y+2	; 0x02
    3040:	48 2f       	mov	r20, r24
    3042:	50 e0       	ldi	r21, 0x00	; 0
    3044:	ca 01       	movw	r24, r20
    3046:	88 0f       	add	r24, r24
    3048:	99 1f       	adc	r25, r25
    304a:	9c 01       	movw	r18, r24
    304c:	22 0f       	add	r18, r18
    304e:	33 1f       	adc	r19, r19
    3050:	22 0f       	add	r18, r18
    3052:	33 1f       	adc	r19, r19
    3054:	22 0f       	add	r18, r18
    3056:	33 1f       	adc	r19, r19
    3058:	82 0f       	add	r24, r18
    305a:	93 1f       	adc	r25, r19
    305c:	84 0f       	add	r24, r20
    305e:	95 1f       	adc	r25, r21
    3060:	fc 01       	movw	r30, r24
    3062:	e5 57       	subi	r30, 0x75	; 117
    3064:	fe 4f       	sbci	r31, 0xFE	; 254
    3066:	60 81       	ld	r22, Z
    3068:	8a 81       	ldd	r24, Y+2	; 0x02
    306a:	48 2f       	mov	r20, r24
    306c:	50 e0       	ldi	r21, 0x00	; 0
    306e:	ca 01       	movw	r24, r20
    3070:	88 0f       	add	r24, r24
    3072:	99 1f       	adc	r25, r25
    3074:	9c 01       	movw	r18, r24
    3076:	22 0f       	add	r18, r18
    3078:	33 1f       	adc	r19, r19
    307a:	22 0f       	add	r18, r18
    307c:	33 1f       	adc	r19, r19
    307e:	22 0f       	add	r18, r18
    3080:	33 1f       	adc	r19, r19
    3082:	82 0f       	add	r24, r18
    3084:	93 1f       	adc	r25, r19
    3086:	84 0f       	add	r24, r20
    3088:	95 1f       	adc	r25, r21
    308a:	fc 01       	movw	r30, r24
    308c:	e4 57       	subi	r30, 0x74	; 116
    308e:	fe 4f       	sbci	r31, 0xFE	; 254
    3090:	90 81       	ld	r25, Z
    3092:	86 2f       	mov	r24, r22
    3094:	69 2f       	mov	r22, r25
    3096:	40 e0       	ldi	r20, 0x00	; 0
    3098:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    309c:	89 83       	std	Y+1, r24	; 0x01
    309e:	4b c0       	rjmp	.+150    	; 0x3136 <SSDLT_enuDisableDot+0x19c>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8LOW);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    30a0:	8a 81       	ldd	r24, Y+2	; 0x02
    30a2:	48 2f       	mov	r20, r24
    30a4:	50 e0       	ldi	r21, 0x00	; 0
    30a6:	ca 01       	movw	r24, r20
    30a8:	88 0f       	add	r24, r24
    30aa:	99 1f       	adc	r25, r25
    30ac:	9c 01       	movw	r18, r24
    30ae:	22 0f       	add	r18, r18
    30b0:	33 1f       	adc	r19, r19
    30b2:	22 0f       	add	r18, r18
    30b4:	33 1f       	adc	r19, r19
    30b6:	22 0f       	add	r18, r18
    30b8:	33 1f       	adc	r19, r19
    30ba:	82 0f       	add	r24, r18
    30bc:	93 1f       	adc	r25, r19
    30be:	84 0f       	add	r24, r20
    30c0:	95 1f       	adc	r25, r21
    30c2:	fc 01       	movw	r30, r24
    30c4:	e3 57       	subi	r30, 0x73	; 115
    30c6:	fe 4f       	sbci	r31, 0xFE	; 254
    30c8:	80 81       	ld	r24, Z
    30ca:	88 23       	and	r24, r24
    30cc:	89 f5       	brne	.+98     	; 0x3130 <SSDLT_enuDisableDot+0x196>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    30ce:	8a 81       	ldd	r24, Y+2	; 0x02
    30d0:	48 2f       	mov	r20, r24
    30d2:	50 e0       	ldi	r21, 0x00	; 0
    30d4:	ca 01       	movw	r24, r20
    30d6:	88 0f       	add	r24, r24
    30d8:	99 1f       	adc	r25, r25
    30da:	9c 01       	movw	r18, r24
    30dc:	22 0f       	add	r18, r18
    30de:	33 1f       	adc	r19, r19
    30e0:	22 0f       	add	r18, r18
    30e2:	33 1f       	adc	r19, r19
    30e4:	22 0f       	add	r18, r18
    30e6:	33 1f       	adc	r19, r19
    30e8:	82 0f       	add	r24, r18
    30ea:	93 1f       	adc	r25, r19
    30ec:	84 0f       	add	r24, r20
    30ee:	95 1f       	adc	r25, r21
    30f0:	fc 01       	movw	r30, r24
    30f2:	e5 57       	subi	r30, 0x75	; 117
    30f4:	fe 4f       	sbci	r31, 0xFE	; 254
    30f6:	60 81       	ld	r22, Z
    30f8:	8a 81       	ldd	r24, Y+2	; 0x02
    30fa:	48 2f       	mov	r20, r24
    30fc:	50 e0       	ldi	r21, 0x00	; 0
    30fe:	ca 01       	movw	r24, r20
    3100:	88 0f       	add	r24, r24
    3102:	99 1f       	adc	r25, r25
    3104:	9c 01       	movw	r18, r24
    3106:	22 0f       	add	r18, r18
    3108:	33 1f       	adc	r19, r19
    310a:	22 0f       	add	r18, r18
    310c:	33 1f       	adc	r19, r19
    310e:	22 0f       	add	r18, r18
    3110:	33 1f       	adc	r19, r19
    3112:	82 0f       	add	r24, r18
    3114:	93 1f       	adc	r25, r19
    3116:	84 0f       	add	r24, r20
    3118:	95 1f       	adc	r25, r21
    311a:	fc 01       	movw	r30, r24
    311c:	e4 57       	subi	r30, 0x74	; 116
    311e:	fe 4f       	sbci	r31, 0xFE	; 254
    3120:	90 81       	ld	r25, Z
    3122:	86 2f       	mov	r24, r22
    3124:	69 2f       	mov	r22, r25
    3126:	41 e0       	ldi	r20, 0x01	; 1
    3128:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    312c:	89 83       	std	Y+1, r24	; 0x01
    312e:	03 c0       	rjmp	.+6      	; 0x3136 <SSDLT_enuDisableDot+0x19c>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8HIGH);
			}
			else
			{
				return ES_OUT_OF_RANGE;
    3130:	83 e0       	ldi	r24, 0x03	; 3
    3132:	8b 83       	std	Y+3, r24	; 0x03
    3134:	05 c0       	rjmp	.+10     	; 0x3140 <SSDLT_enuDisableDot+0x1a6>
	}
	else
	{
		return ES_OUT_OF_RANGE;
	}
	return Local_enuErrorState;
    3136:	89 81       	ldd	r24, Y+1	; 0x01
    3138:	8b 83       	std	Y+3, r24	; 0x03
    313a:	02 c0       	rjmp	.+4      	; 0x3140 <SSDLT_enuDisableDot+0x1a6>
			}
		}
	}
	else
	{
		return ES_OUT_OF_RANGE;
    313c:	83 e0       	ldi	r24, 0x03	; 3
    313e:	8b 83       	std	Y+3, r24	; 0x03
    3140:	8b 81       	ldd	r24, Y+3	; 0x03
	}
	return Local_enuErrorState;
}
    3142:	0f 90       	pop	r0
    3144:	0f 90       	pop	r0
    3146:	0f 90       	pop	r0
    3148:	cf 91       	pop	r28
    314a:	df 91       	pop	r29
    314c:	08 95       	ret

0000314e <SSDLT_enuClearDisplay>:

ES_t SSDLT_enuClearDisplay(u8 Copy_u8SegID)
{
    314e:	ef 92       	push	r14
    3150:	ff 92       	push	r15
    3152:	0f 93       	push	r16
    3154:	1f 93       	push	r17
    3156:	df 93       	push	r29
    3158:	cf 93       	push	r28
    315a:	cd b7       	in	r28, 0x3d	; 61
    315c:	de b7       	in	r29, 0x3e	; 62
    315e:	29 97       	sbiw	r28, 0x09	; 9
    3160:	0f b6       	in	r0, 0x3f	; 63
    3162:	f8 94       	cli
    3164:	de bf       	out	0x3e, r29	; 62
    3166:	0f be       	out	0x3f, r0	; 63
    3168:	cd bf       	out	0x3d, r28	; 61
    316a:	88 87       	std	Y+8, r24	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    316c:	1f 82       	std	Y+7, r1	; 0x07

	u8 Local_u8Iterator = 0;
    316e:	1e 82       	std	Y+6, r1	; 0x06
	u8 Local_u8LastBit = 0;
    3170:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = 0;
    3172:	19 82       	std	Y+1, r1	; 0x01
    3174:	1a 82       	std	Y+2, r1	; 0x02
    3176:	1b 82       	std	Y+3, r1	; 0x03
    3178:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_u8SegID < SEG_NUM)
    317a:	88 85       	ldd	r24, Y+8	; 0x08
    317c:	82 30       	cpi	r24, 0x02	; 2
    317e:	08 f0       	brcs	.+2      	; 0x3182 <SSDLT_enuClearDisplay+0x34>
    3180:	33 c4       	rjmp	.+2150   	; 0x39e8 <SSDLT_enuClearDisplay+0x89a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    3182:	88 85       	ldd	r24, Y+8	; 0x08
    3184:	48 2f       	mov	r20, r24
    3186:	50 e0       	ldi	r21, 0x00	; 0
    3188:	ca 01       	movw	r24, r20
    318a:	88 0f       	add	r24, r24
    318c:	99 1f       	adc	r25, r25
    318e:	9c 01       	movw	r18, r24
    3190:	22 0f       	add	r18, r18
    3192:	33 1f       	adc	r19, r19
    3194:	22 0f       	add	r18, r18
    3196:	33 1f       	adc	r19, r19
    3198:	22 0f       	add	r18, r18
    319a:	33 1f       	adc	r19, r19
    319c:	82 0f       	add	r24, r18
    319e:	93 1f       	adc	r25, r19
    31a0:	84 0f       	add	r24, r20
    31a2:	95 1f       	adc	r25, r21
    31a4:	fc 01       	movw	r30, r24
    31a6:	e3 57       	subi	r30, 0x73	; 115
    31a8:	fe 4f       	sbci	r31, 0xFE	; 254
    31aa:	80 81       	ld	r24, Z
    31ac:	81 30       	cpi	r24, 0x01	; 1
    31ae:	09 f0       	breq	.+2      	; 0x31b2 <SSDLT_enuClearDisplay+0x64>
    31b0:	f4 c1       	rjmp	.+1000   	; 0x359a <SSDLT_enuClearDisplay+0x44c>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    31b2:	88 85       	ldd	r24, Y+8	; 0x08
    31b4:	48 2f       	mov	r20, r24
    31b6:	50 e0       	ldi	r21, 0x00	; 0
    31b8:	ca 01       	movw	r24, r20
    31ba:	88 0f       	add	r24, r24
    31bc:	99 1f       	adc	r25, r25
    31be:	9c 01       	movw	r18, r24
    31c0:	22 0f       	add	r18, r18
    31c2:	33 1f       	adc	r19, r19
    31c4:	22 0f       	add	r18, r18
    31c6:	33 1f       	adc	r19, r19
    31c8:	22 0f       	add	r18, r18
    31ca:	33 1f       	adc	r19, r19
    31cc:	82 0f       	add	r24, r18
    31ce:	93 1f       	adc	r25, r19
    31d0:	84 0f       	add	r24, r20
    31d2:	95 1f       	adc	r25, r21
    31d4:	fc 01       	movw	r30, r24
    31d6:	e5 58       	subi	r30, 0x85	; 133
    31d8:	fe 4f       	sbci	r31, 0xFE	; 254
    31da:	60 81       	ld	r22, Z
    31dc:	88 85       	ldd	r24, Y+8	; 0x08
    31de:	48 2f       	mov	r20, r24
    31e0:	50 e0       	ldi	r21, 0x00	; 0
    31e2:	ca 01       	movw	r24, r20
    31e4:	88 0f       	add	r24, r24
    31e6:	99 1f       	adc	r25, r25
    31e8:	9c 01       	movw	r18, r24
    31ea:	22 0f       	add	r18, r18
    31ec:	33 1f       	adc	r19, r19
    31ee:	22 0f       	add	r18, r18
    31f0:	33 1f       	adc	r19, r19
    31f2:	22 0f       	add	r18, r18
    31f4:	33 1f       	adc	r19, r19
    31f6:	82 0f       	add	r24, r18
    31f8:	93 1f       	adc	r25, r19
    31fa:	84 0f       	add	r24, r20
    31fc:	95 1f       	adc	r25, r21
    31fe:	fc 01       	movw	r30, r24
    3200:	e4 58       	subi	r30, 0x84	; 132
    3202:	fe 4f       	sbci	r31, 0xFE	; 254
    3204:	90 81       	ld	r25, Z
    3206:	86 2f       	mov	r24, r22
    3208:	69 2f       	mov	r22, r25
    320a:	40 e0       	ldi	r20, 0x00	; 0
    320c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3210:	28 2f       	mov	r18, r24
    3212:	30 e0       	ldi	r19, 0x00	; 0
    3214:	40 e0       	ldi	r20, 0x00	; 0
    3216:	50 e0       	ldi	r21, 0x00	; 0
    3218:	89 81       	ldd	r24, Y+1	; 0x01
    321a:	9a 81       	ldd	r25, Y+2	; 0x02
    321c:	ab 81       	ldd	r26, Y+3	; 0x03
    321e:	bc 81       	ldd	r27, Y+4	; 0x04
    3220:	82 2b       	or	r24, r18
    3222:	93 2b       	or	r25, r19
    3224:	a4 2b       	or	r26, r20
    3226:	b5 2b       	or	r27, r21
    3228:	89 83       	std	Y+1, r24	; 0x01
    322a:	9a 83       	std	Y+2, r25	; 0x02
    322c:	ab 83       	std	Y+3, r26	; 0x03
    322e:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  DIO_u8LOW) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    3230:	88 85       	ldd	r24, Y+8	; 0x08
    3232:	48 2f       	mov	r20, r24
    3234:	50 e0       	ldi	r21, 0x00	; 0
    3236:	ca 01       	movw	r24, r20
    3238:	88 0f       	add	r24, r24
    323a:	99 1f       	adc	r25, r25
    323c:	9c 01       	movw	r18, r24
    323e:	22 0f       	add	r18, r18
    3240:	33 1f       	adc	r19, r19
    3242:	22 0f       	add	r18, r18
    3244:	33 1f       	adc	r19, r19
    3246:	22 0f       	add	r18, r18
    3248:	33 1f       	adc	r19, r19
    324a:	82 0f       	add	r24, r18
    324c:	93 1f       	adc	r25, r19
    324e:	84 0f       	add	r24, r20
    3250:	95 1f       	adc	r25, r21
    3252:	fc 01       	movw	r30, r24
    3254:	e3 58       	subi	r30, 0x83	; 131
    3256:	fe 4f       	sbci	r31, 0xFE	; 254
    3258:	60 81       	ld	r22, Z
    325a:	88 85       	ldd	r24, Y+8	; 0x08
    325c:	48 2f       	mov	r20, r24
    325e:	50 e0       	ldi	r21, 0x00	; 0
    3260:	ca 01       	movw	r24, r20
    3262:	88 0f       	add	r24, r24
    3264:	99 1f       	adc	r25, r25
    3266:	9c 01       	movw	r18, r24
    3268:	22 0f       	add	r18, r18
    326a:	33 1f       	adc	r19, r19
    326c:	22 0f       	add	r18, r18
    326e:	33 1f       	adc	r19, r19
    3270:	22 0f       	add	r18, r18
    3272:	33 1f       	adc	r19, r19
    3274:	82 0f       	add	r24, r18
    3276:	93 1f       	adc	r25, r19
    3278:	84 0f       	add	r24, r20
    327a:	95 1f       	adc	r25, r21
    327c:	fc 01       	movw	r30, r24
    327e:	e2 58       	subi	r30, 0x82	; 130
    3280:	fe 4f       	sbci	r31, 0xFE	; 254
    3282:	90 81       	ld	r25, Z
    3284:	86 2f       	mov	r24, r22
    3286:	69 2f       	mov	r22, r25
    3288:	40 e0       	ldi	r20, 0x00	; 0
    328a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    328e:	88 2f       	mov	r24, r24
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	88 0f       	add	r24, r24
    3294:	99 1f       	adc	r25, r25
    3296:	88 0f       	add	r24, r24
    3298:	99 1f       	adc	r25, r25
    329a:	88 0f       	add	r24, r24
    329c:	99 1f       	adc	r25, r25
    329e:	9c 01       	movw	r18, r24
    32a0:	44 27       	eor	r20, r20
    32a2:	37 fd       	sbrc	r19, 7
    32a4:	40 95       	com	r20
    32a6:	54 2f       	mov	r21, r20
    32a8:	89 81       	ldd	r24, Y+1	; 0x01
    32aa:	9a 81       	ldd	r25, Y+2	; 0x02
    32ac:	ab 81       	ldd	r26, Y+3	; 0x03
    32ae:	bc 81       	ldd	r27, Y+4	; 0x04
    32b0:	82 2b       	or	r24, r18
    32b2:	93 2b       	or	r25, r19
    32b4:	a4 2b       	or	r26, r20
    32b6:	b5 2b       	or	r27, r21
    32b8:	89 83       	std	Y+1, r24	; 0x01
    32ba:	9a 83       	std	Y+2, r25	; 0x02
    32bc:	ab 83       	std	Y+3, r26	; 0x03
    32be:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  DIO_u8LOW) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    32c0:	88 85       	ldd	r24, Y+8	; 0x08
    32c2:	48 2f       	mov	r20, r24
    32c4:	50 e0       	ldi	r21, 0x00	; 0
    32c6:	ca 01       	movw	r24, r20
    32c8:	88 0f       	add	r24, r24
    32ca:	99 1f       	adc	r25, r25
    32cc:	9c 01       	movw	r18, r24
    32ce:	22 0f       	add	r18, r18
    32d0:	33 1f       	adc	r19, r19
    32d2:	22 0f       	add	r18, r18
    32d4:	33 1f       	adc	r19, r19
    32d6:	22 0f       	add	r18, r18
    32d8:	33 1f       	adc	r19, r19
    32da:	82 0f       	add	r24, r18
    32dc:	93 1f       	adc	r25, r19
    32de:	84 0f       	add	r24, r20
    32e0:	95 1f       	adc	r25, r21
    32e2:	fc 01       	movw	r30, r24
    32e4:	e1 58       	subi	r30, 0x81	; 129
    32e6:	fe 4f       	sbci	r31, 0xFE	; 254
    32e8:	60 81       	ld	r22, Z
    32ea:	88 85       	ldd	r24, Y+8	; 0x08
    32ec:	48 2f       	mov	r20, r24
    32ee:	50 e0       	ldi	r21, 0x00	; 0
    32f0:	ca 01       	movw	r24, r20
    32f2:	88 0f       	add	r24, r24
    32f4:	99 1f       	adc	r25, r25
    32f6:	9c 01       	movw	r18, r24
    32f8:	22 0f       	add	r18, r18
    32fa:	33 1f       	adc	r19, r19
    32fc:	22 0f       	add	r18, r18
    32fe:	33 1f       	adc	r19, r19
    3300:	22 0f       	add	r18, r18
    3302:	33 1f       	adc	r19, r19
    3304:	82 0f       	add	r24, r18
    3306:	93 1f       	adc	r25, r19
    3308:	84 0f       	add	r24, r20
    330a:	95 1f       	adc	r25, r21
    330c:	fc 01       	movw	r30, r24
    330e:	e0 58       	subi	r30, 0x80	; 128
    3310:	fe 4f       	sbci	r31, 0xFE	; 254
    3312:	90 81       	ld	r25, Z
    3314:	86 2f       	mov	r24, r22
    3316:	69 2f       	mov	r22, r25
    3318:	40 e0       	ldi	r20, 0x00	; 0
    331a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    331e:	88 2f       	mov	r24, r24
    3320:	90 e0       	ldi	r25, 0x00	; 0
    3322:	00 24       	eor	r0, r0
    3324:	96 95       	lsr	r25
    3326:	87 95       	ror	r24
    3328:	07 94       	ror	r0
    332a:	96 95       	lsr	r25
    332c:	87 95       	ror	r24
    332e:	07 94       	ror	r0
    3330:	98 2f       	mov	r25, r24
    3332:	80 2d       	mov	r24, r0
    3334:	9c 01       	movw	r18, r24
    3336:	44 27       	eor	r20, r20
    3338:	37 fd       	sbrc	r19, 7
    333a:	40 95       	com	r20
    333c:	54 2f       	mov	r21, r20
    333e:	89 81       	ldd	r24, Y+1	; 0x01
    3340:	9a 81       	ldd	r25, Y+2	; 0x02
    3342:	ab 81       	ldd	r26, Y+3	; 0x03
    3344:	bc 81       	ldd	r27, Y+4	; 0x04
    3346:	82 2b       	or	r24, r18
    3348:	93 2b       	or	r25, r19
    334a:	a4 2b       	or	r26, r20
    334c:	b5 2b       	or	r27, r21
    334e:	89 83       	std	Y+1, r24	; 0x01
    3350:	9a 83       	std	Y+2, r25	; 0x02
    3352:	ab 83       	std	Y+3, r26	; 0x03
    3354:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  DIO_u8LOW) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    3356:	88 85       	ldd	r24, Y+8	; 0x08
    3358:	48 2f       	mov	r20, r24
    335a:	50 e0       	ldi	r21, 0x00	; 0
    335c:	ca 01       	movw	r24, r20
    335e:	88 0f       	add	r24, r24
    3360:	99 1f       	adc	r25, r25
    3362:	9c 01       	movw	r18, r24
    3364:	22 0f       	add	r18, r18
    3366:	33 1f       	adc	r19, r19
    3368:	22 0f       	add	r18, r18
    336a:	33 1f       	adc	r19, r19
    336c:	22 0f       	add	r18, r18
    336e:	33 1f       	adc	r19, r19
    3370:	82 0f       	add	r24, r18
    3372:	93 1f       	adc	r25, r19
    3374:	84 0f       	add	r24, r20
    3376:	95 1f       	adc	r25, r21
    3378:	fc 01       	movw	r30, r24
    337a:	ef 57       	subi	r30, 0x7F	; 127
    337c:	fe 4f       	sbci	r31, 0xFE	; 254
    337e:	60 81       	ld	r22, Z
    3380:	88 85       	ldd	r24, Y+8	; 0x08
    3382:	48 2f       	mov	r20, r24
    3384:	50 e0       	ldi	r21, 0x00	; 0
    3386:	ca 01       	movw	r24, r20
    3388:	88 0f       	add	r24, r24
    338a:	99 1f       	adc	r25, r25
    338c:	9c 01       	movw	r18, r24
    338e:	22 0f       	add	r18, r18
    3390:	33 1f       	adc	r19, r19
    3392:	22 0f       	add	r18, r18
    3394:	33 1f       	adc	r19, r19
    3396:	22 0f       	add	r18, r18
    3398:	33 1f       	adc	r19, r19
    339a:	82 0f       	add	r24, r18
    339c:	93 1f       	adc	r25, r19
    339e:	84 0f       	add	r24, r20
    33a0:	95 1f       	adc	r25, r21
    33a2:	fc 01       	movw	r30, r24
    33a4:	ee 57       	subi	r30, 0x7E	; 126
    33a6:	fe 4f       	sbci	r31, 0xFE	; 254
    33a8:	90 81       	ld	r25, Z
    33aa:	86 2f       	mov	r24, r22
    33ac:	69 2f       	mov	r22, r25
    33ae:	40 e0       	ldi	r20, 0x00	; 0
    33b0:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    33b4:	88 2f       	mov	r24, r24
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	98 2f       	mov	r25, r24
    33ba:	88 27       	eor	r24, r24
    33bc:	99 0f       	add	r25, r25
    33be:	9c 01       	movw	r18, r24
    33c0:	44 27       	eor	r20, r20
    33c2:	37 fd       	sbrc	r19, 7
    33c4:	40 95       	com	r20
    33c6:	54 2f       	mov	r21, r20
    33c8:	89 81       	ldd	r24, Y+1	; 0x01
    33ca:	9a 81       	ldd	r25, Y+2	; 0x02
    33cc:	ab 81       	ldd	r26, Y+3	; 0x03
    33ce:	bc 81       	ldd	r27, Y+4	; 0x04
    33d0:	82 2b       	or	r24, r18
    33d2:	93 2b       	or	r25, r19
    33d4:	a4 2b       	or	r26, r20
    33d6:	b5 2b       	or	r27, r21
    33d8:	89 83       	std	Y+1, r24	; 0x01
    33da:	9a 83       	std	Y+2, r25	; 0x02
    33dc:	ab 83       	std	Y+3, r26	; 0x03
    33de:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  DIO_u8LOW) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    33e0:	88 85       	ldd	r24, Y+8	; 0x08
    33e2:	48 2f       	mov	r20, r24
    33e4:	50 e0       	ldi	r21, 0x00	; 0
    33e6:	ca 01       	movw	r24, r20
    33e8:	88 0f       	add	r24, r24
    33ea:	99 1f       	adc	r25, r25
    33ec:	9c 01       	movw	r18, r24
    33ee:	22 0f       	add	r18, r18
    33f0:	33 1f       	adc	r19, r19
    33f2:	22 0f       	add	r18, r18
    33f4:	33 1f       	adc	r19, r19
    33f6:	22 0f       	add	r18, r18
    33f8:	33 1f       	adc	r19, r19
    33fa:	82 0f       	add	r24, r18
    33fc:	93 1f       	adc	r25, r19
    33fe:	84 0f       	add	r24, r20
    3400:	95 1f       	adc	r25, r21
    3402:	fc 01       	movw	r30, r24
    3404:	ed 57       	subi	r30, 0x7D	; 125
    3406:	fe 4f       	sbci	r31, 0xFE	; 254
    3408:	60 81       	ld	r22, Z
    340a:	88 85       	ldd	r24, Y+8	; 0x08
    340c:	48 2f       	mov	r20, r24
    340e:	50 e0       	ldi	r21, 0x00	; 0
    3410:	ca 01       	movw	r24, r20
    3412:	88 0f       	add	r24, r24
    3414:	99 1f       	adc	r25, r25
    3416:	9c 01       	movw	r18, r24
    3418:	22 0f       	add	r18, r18
    341a:	33 1f       	adc	r19, r19
    341c:	22 0f       	add	r18, r18
    341e:	33 1f       	adc	r19, r19
    3420:	22 0f       	add	r18, r18
    3422:	33 1f       	adc	r19, r19
    3424:	82 0f       	add	r24, r18
    3426:	93 1f       	adc	r25, r19
    3428:	84 0f       	add	r24, r20
    342a:	95 1f       	adc	r25, r21
    342c:	fc 01       	movw	r30, r24
    342e:	ec 57       	subi	r30, 0x7C	; 124
    3430:	fe 4f       	sbci	r31, 0xFE	; 254
    3432:	90 81       	ld	r25, Z
    3434:	86 2f       	mov	r24, r22
    3436:	69 2f       	mov	r22, r25
    3438:	40 e0       	ldi	r20, 0x00	; 0
    343a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    343e:	88 2f       	mov	r24, r24
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	98 2f       	mov	r25, r24
    3444:	88 27       	eor	r24, r24
    3446:	92 95       	swap	r25
    3448:	90 7f       	andi	r25, 0xF0	; 240
    344a:	9c 01       	movw	r18, r24
    344c:	44 27       	eor	r20, r20
    344e:	37 fd       	sbrc	r19, 7
    3450:	40 95       	com	r20
    3452:	54 2f       	mov	r21, r20
    3454:	89 81       	ldd	r24, Y+1	; 0x01
    3456:	9a 81       	ldd	r25, Y+2	; 0x02
    3458:	ab 81       	ldd	r26, Y+3	; 0x03
    345a:	bc 81       	ldd	r27, Y+4	; 0x04
    345c:	82 2b       	or	r24, r18
    345e:	93 2b       	or	r25, r19
    3460:	a4 2b       	or	r26, r20
    3462:	b5 2b       	or	r27, r21
    3464:	89 83       	std	Y+1, r24	; 0x01
    3466:	9a 83       	std	Y+2, r25	; 0x02
    3468:	ab 83       	std	Y+3, r26	; 0x03
    346a:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  DIO_u8LOW) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    346c:	88 85       	ldd	r24, Y+8	; 0x08
    346e:	48 2f       	mov	r20, r24
    3470:	50 e0       	ldi	r21, 0x00	; 0
    3472:	ca 01       	movw	r24, r20
    3474:	88 0f       	add	r24, r24
    3476:	99 1f       	adc	r25, r25
    3478:	9c 01       	movw	r18, r24
    347a:	22 0f       	add	r18, r18
    347c:	33 1f       	adc	r19, r19
    347e:	22 0f       	add	r18, r18
    3480:	33 1f       	adc	r19, r19
    3482:	22 0f       	add	r18, r18
    3484:	33 1f       	adc	r19, r19
    3486:	82 0f       	add	r24, r18
    3488:	93 1f       	adc	r25, r19
    348a:	84 0f       	add	r24, r20
    348c:	95 1f       	adc	r25, r21
    348e:	fc 01       	movw	r30, r24
    3490:	eb 57       	subi	r30, 0x7B	; 123
    3492:	fe 4f       	sbci	r31, 0xFE	; 254
    3494:	60 81       	ld	r22, Z
    3496:	88 85       	ldd	r24, Y+8	; 0x08
    3498:	48 2f       	mov	r20, r24
    349a:	50 e0       	ldi	r21, 0x00	; 0
    349c:	ca 01       	movw	r24, r20
    349e:	88 0f       	add	r24, r24
    34a0:	99 1f       	adc	r25, r25
    34a2:	9c 01       	movw	r18, r24
    34a4:	22 0f       	add	r18, r18
    34a6:	33 1f       	adc	r19, r19
    34a8:	22 0f       	add	r18, r18
    34aa:	33 1f       	adc	r19, r19
    34ac:	22 0f       	add	r18, r18
    34ae:	33 1f       	adc	r19, r19
    34b0:	82 0f       	add	r24, r18
    34b2:	93 1f       	adc	r25, r19
    34b4:	84 0f       	add	r24, r20
    34b6:	95 1f       	adc	r25, r21
    34b8:	fc 01       	movw	r30, r24
    34ba:	ea 57       	subi	r30, 0x7A	; 122
    34bc:	fe 4f       	sbci	r31, 0xFE	; 254
    34be:	90 81       	ld	r25, Z
    34c0:	86 2f       	mov	r24, r22
    34c2:	69 2f       	mov	r22, r25
    34c4:	40 e0       	ldi	r20, 0x00	; 0
    34c6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    34ca:	88 2f       	mov	r24, r24
    34cc:	90 e0       	ldi	r25, 0x00	; 0
    34ce:	a0 e0       	ldi	r26, 0x00	; 0
    34d0:	b0 e0       	ldi	r27, 0x00	; 0
    34d2:	9c 01       	movw	r18, r24
    34d4:	ad 01       	movw	r20, r26
    34d6:	01 2e       	mov	r0, r17
    34d8:	1f e0       	ldi	r17, 0x0F	; 15
    34da:	22 0f       	add	r18, r18
    34dc:	33 1f       	adc	r19, r19
    34de:	44 1f       	adc	r20, r20
    34e0:	55 1f       	adc	r21, r21
    34e2:	1a 95       	dec	r17
    34e4:	d1 f7       	brne	.-12     	; 0x34da <SSDLT_enuClearDisplay+0x38c>
    34e6:	10 2d       	mov	r17, r0
    34e8:	89 81       	ldd	r24, Y+1	; 0x01
    34ea:	9a 81       	ldd	r25, Y+2	; 0x02
    34ec:	ab 81       	ldd	r26, Y+3	; 0x03
    34ee:	bc 81       	ldd	r27, Y+4	; 0x04
    34f0:	82 2b       	or	r24, r18
    34f2:	93 2b       	or	r25, r19
    34f4:	a4 2b       	or	r26, r20
    34f6:	b5 2b       	or	r27, r21
    34f8:	89 83       	std	Y+1, r24	; 0x01
    34fa:	9a 83       	std	Y+2, r25	; 0x02
    34fc:	ab 83       	std	Y+3, r26	; 0x03
    34fe:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  DIO_u8LOW) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    3500:	88 85       	ldd	r24, Y+8	; 0x08
    3502:	48 2f       	mov	r20, r24
    3504:	50 e0       	ldi	r21, 0x00	; 0
    3506:	ca 01       	movw	r24, r20
    3508:	88 0f       	add	r24, r24
    350a:	99 1f       	adc	r25, r25
    350c:	9c 01       	movw	r18, r24
    350e:	22 0f       	add	r18, r18
    3510:	33 1f       	adc	r19, r19
    3512:	22 0f       	add	r18, r18
    3514:	33 1f       	adc	r19, r19
    3516:	22 0f       	add	r18, r18
    3518:	33 1f       	adc	r19, r19
    351a:	82 0f       	add	r24, r18
    351c:	93 1f       	adc	r25, r19
    351e:	84 0f       	add	r24, r20
    3520:	95 1f       	adc	r25, r21
    3522:	fc 01       	movw	r30, r24
    3524:	e9 57       	subi	r30, 0x79	; 121
    3526:	fe 4f       	sbci	r31, 0xFE	; 254
    3528:	60 81       	ld	r22, Z
    352a:	88 85       	ldd	r24, Y+8	; 0x08
    352c:	48 2f       	mov	r20, r24
    352e:	50 e0       	ldi	r21, 0x00	; 0
    3530:	ca 01       	movw	r24, r20
    3532:	88 0f       	add	r24, r24
    3534:	99 1f       	adc	r25, r25
    3536:	9c 01       	movw	r18, r24
    3538:	22 0f       	add	r18, r18
    353a:	33 1f       	adc	r19, r19
    353c:	22 0f       	add	r18, r18
    353e:	33 1f       	adc	r19, r19
    3540:	22 0f       	add	r18, r18
    3542:	33 1f       	adc	r19, r19
    3544:	82 0f       	add	r24, r18
    3546:	93 1f       	adc	r25, r19
    3548:	84 0f       	add	r24, r20
    354a:	95 1f       	adc	r25, r21
    354c:	fc 01       	movw	r30, r24
    354e:	e8 57       	subi	r30, 0x78	; 120
    3550:	fe 4f       	sbci	r31, 0xFE	; 254
    3552:	90 81       	ld	r25, Z
    3554:	86 2f       	mov	r24, r22
    3556:	69 2f       	mov	r22, r25
    3558:	40 e0       	ldi	r20, 0x00	; 0
    355a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    355e:	88 2f       	mov	r24, r24
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	a0 e0       	ldi	r26, 0x00	; 0
    3564:	b0 e0       	ldi	r27, 0x00	; 0
    3566:	9c 01       	movw	r18, r24
    3568:	ad 01       	movw	r20, r26
    356a:	01 2e       	mov	r0, r17
    356c:	12 e1       	ldi	r17, 0x12	; 18
    356e:	22 0f       	add	r18, r18
    3570:	33 1f       	adc	r19, r19
    3572:	44 1f       	adc	r20, r20
    3574:	55 1f       	adc	r21, r21
    3576:	1a 95       	dec	r17
    3578:	d1 f7       	brne	.-12     	; 0x356e <SSDLT_enuClearDisplay+0x420>
    357a:	10 2d       	mov	r17, r0
    357c:	89 81       	ldd	r24, Y+1	; 0x01
    357e:	9a 81       	ldd	r25, Y+2	; 0x02
    3580:	ab 81       	ldd	r26, Y+3	; 0x03
    3582:	bc 81       	ldd	r27, Y+4	; 0x04
    3584:	82 2b       	or	r24, r18
    3586:	93 2b       	or	r25, r19
    3588:	a4 2b       	or	r26, r20
    358a:	b5 2b       	or	r27, r21
    358c:	89 83       	std	Y+1, r24	; 0x01
    358e:	9a 83       	std	Y+2, r25	; 0x02
    3590:	ab 83       	std	Y+3, r26	; 0x03
    3592:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  DIO_u8LOW) << 18));
			Local_u8LastBit = 21;
    3594:	85 e1       	ldi	r24, 0x15	; 21
    3596:	8d 83       	std	Y+5, r24	; 0x05
    3598:	0f c2       	rjmp	.+1054   	; 0x39b8 <SSDLT_enuClearDisplay+0x86a>
		}
		else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    359a:	88 85       	ldd	r24, Y+8	; 0x08
    359c:	48 2f       	mov	r20, r24
    359e:	50 e0       	ldi	r21, 0x00	; 0
    35a0:	ca 01       	movw	r24, r20
    35a2:	88 0f       	add	r24, r24
    35a4:	99 1f       	adc	r25, r25
    35a6:	9c 01       	movw	r18, r24
    35a8:	22 0f       	add	r18, r18
    35aa:	33 1f       	adc	r19, r19
    35ac:	22 0f       	add	r18, r18
    35ae:	33 1f       	adc	r19, r19
    35b0:	22 0f       	add	r18, r18
    35b2:	33 1f       	adc	r19, r19
    35b4:	82 0f       	add	r24, r18
    35b6:	93 1f       	adc	r25, r19
    35b8:	84 0f       	add	r24, r20
    35ba:	95 1f       	adc	r25, r21
    35bc:	fc 01       	movw	r30, r24
    35be:	e3 57       	subi	r30, 0x73	; 115
    35c0:	fe 4f       	sbci	r31, 0xFE	; 254
    35c2:	80 81       	ld	r24, Z
    35c4:	88 23       	and	r24, r24
    35c6:	09 f0       	breq	.+2      	; 0x35ca <SSDLT_enuClearDisplay+0x47c>
    35c8:	f4 c1       	rjmp	.+1000   	; 0x39b2 <SSDLT_enuClearDisplay+0x864>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    35ca:	88 85       	ldd	r24, Y+8	; 0x08
    35cc:	48 2f       	mov	r20, r24
    35ce:	50 e0       	ldi	r21, 0x00	; 0
    35d0:	ca 01       	movw	r24, r20
    35d2:	88 0f       	add	r24, r24
    35d4:	99 1f       	adc	r25, r25
    35d6:	9c 01       	movw	r18, r24
    35d8:	22 0f       	add	r18, r18
    35da:	33 1f       	adc	r19, r19
    35dc:	22 0f       	add	r18, r18
    35de:	33 1f       	adc	r19, r19
    35e0:	22 0f       	add	r18, r18
    35e2:	33 1f       	adc	r19, r19
    35e4:	82 0f       	add	r24, r18
    35e6:	93 1f       	adc	r25, r19
    35e8:	84 0f       	add	r24, r20
    35ea:	95 1f       	adc	r25, r21
    35ec:	fc 01       	movw	r30, r24
    35ee:	e5 58       	subi	r30, 0x85	; 133
    35f0:	fe 4f       	sbci	r31, 0xFE	; 254
    35f2:	60 81       	ld	r22, Z
    35f4:	88 85       	ldd	r24, Y+8	; 0x08
    35f6:	48 2f       	mov	r20, r24
    35f8:	50 e0       	ldi	r21, 0x00	; 0
    35fa:	ca 01       	movw	r24, r20
    35fc:	88 0f       	add	r24, r24
    35fe:	99 1f       	adc	r25, r25
    3600:	9c 01       	movw	r18, r24
    3602:	22 0f       	add	r18, r18
    3604:	33 1f       	adc	r19, r19
    3606:	22 0f       	add	r18, r18
    3608:	33 1f       	adc	r19, r19
    360a:	22 0f       	add	r18, r18
    360c:	33 1f       	adc	r19, r19
    360e:	82 0f       	add	r24, r18
    3610:	93 1f       	adc	r25, r19
    3612:	84 0f       	add	r24, r20
    3614:	95 1f       	adc	r25, r21
    3616:	fc 01       	movw	r30, r24
    3618:	e4 58       	subi	r30, 0x84	; 132
    361a:	fe 4f       	sbci	r31, 0xFE	; 254
    361c:	90 81       	ld	r25, Z
    361e:	86 2f       	mov	r24, r22
    3620:	69 2f       	mov	r22, r25
    3622:	41 e0       	ldi	r20, 0x01	; 1
    3624:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3628:	28 2f       	mov	r18, r24
    362a:	30 e0       	ldi	r19, 0x00	; 0
    362c:	40 e0       	ldi	r20, 0x00	; 0
    362e:	50 e0       	ldi	r21, 0x00	; 0
    3630:	89 81       	ldd	r24, Y+1	; 0x01
    3632:	9a 81       	ldd	r25, Y+2	; 0x02
    3634:	ab 81       	ldd	r26, Y+3	; 0x03
    3636:	bc 81       	ldd	r27, Y+4	; 0x04
    3638:	82 2b       	or	r24, r18
    363a:	93 2b       	or	r25, r19
    363c:	a4 2b       	or	r26, r20
    363e:	b5 2b       	or	r27, r21
    3640:	89 83       	std	Y+1, r24	; 0x01
    3642:	9a 83       	std	Y+2, r25	; 0x02
    3644:	ab 83       	std	Y+3, r26	; 0x03
    3646:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  DIO_u8HIGH) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    3648:	88 85       	ldd	r24, Y+8	; 0x08
    364a:	48 2f       	mov	r20, r24
    364c:	50 e0       	ldi	r21, 0x00	; 0
    364e:	ca 01       	movw	r24, r20
    3650:	88 0f       	add	r24, r24
    3652:	99 1f       	adc	r25, r25
    3654:	9c 01       	movw	r18, r24
    3656:	22 0f       	add	r18, r18
    3658:	33 1f       	adc	r19, r19
    365a:	22 0f       	add	r18, r18
    365c:	33 1f       	adc	r19, r19
    365e:	22 0f       	add	r18, r18
    3660:	33 1f       	adc	r19, r19
    3662:	82 0f       	add	r24, r18
    3664:	93 1f       	adc	r25, r19
    3666:	84 0f       	add	r24, r20
    3668:	95 1f       	adc	r25, r21
    366a:	fc 01       	movw	r30, r24
    366c:	e3 58       	subi	r30, 0x83	; 131
    366e:	fe 4f       	sbci	r31, 0xFE	; 254
    3670:	60 81       	ld	r22, Z
    3672:	88 85       	ldd	r24, Y+8	; 0x08
    3674:	48 2f       	mov	r20, r24
    3676:	50 e0       	ldi	r21, 0x00	; 0
    3678:	ca 01       	movw	r24, r20
    367a:	88 0f       	add	r24, r24
    367c:	99 1f       	adc	r25, r25
    367e:	9c 01       	movw	r18, r24
    3680:	22 0f       	add	r18, r18
    3682:	33 1f       	adc	r19, r19
    3684:	22 0f       	add	r18, r18
    3686:	33 1f       	adc	r19, r19
    3688:	22 0f       	add	r18, r18
    368a:	33 1f       	adc	r19, r19
    368c:	82 0f       	add	r24, r18
    368e:	93 1f       	adc	r25, r19
    3690:	84 0f       	add	r24, r20
    3692:	95 1f       	adc	r25, r21
    3694:	fc 01       	movw	r30, r24
    3696:	e2 58       	subi	r30, 0x82	; 130
    3698:	fe 4f       	sbci	r31, 0xFE	; 254
    369a:	90 81       	ld	r25, Z
    369c:	86 2f       	mov	r24, r22
    369e:	69 2f       	mov	r22, r25
    36a0:	41 e0       	ldi	r20, 0x01	; 1
    36a2:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    36a6:	88 2f       	mov	r24, r24
    36a8:	90 e0       	ldi	r25, 0x00	; 0
    36aa:	88 0f       	add	r24, r24
    36ac:	99 1f       	adc	r25, r25
    36ae:	88 0f       	add	r24, r24
    36b0:	99 1f       	adc	r25, r25
    36b2:	88 0f       	add	r24, r24
    36b4:	99 1f       	adc	r25, r25
    36b6:	9c 01       	movw	r18, r24
    36b8:	44 27       	eor	r20, r20
    36ba:	37 fd       	sbrc	r19, 7
    36bc:	40 95       	com	r20
    36be:	54 2f       	mov	r21, r20
    36c0:	89 81       	ldd	r24, Y+1	; 0x01
    36c2:	9a 81       	ldd	r25, Y+2	; 0x02
    36c4:	ab 81       	ldd	r26, Y+3	; 0x03
    36c6:	bc 81       	ldd	r27, Y+4	; 0x04
    36c8:	82 2b       	or	r24, r18
    36ca:	93 2b       	or	r25, r19
    36cc:	a4 2b       	or	r26, r20
    36ce:	b5 2b       	or	r27, r21
    36d0:	89 83       	std	Y+1, r24	; 0x01
    36d2:	9a 83       	std	Y+2, r25	; 0x02
    36d4:	ab 83       	std	Y+3, r26	; 0x03
    36d6:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  DIO_u8HIGH) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    36d8:	88 85       	ldd	r24, Y+8	; 0x08
    36da:	48 2f       	mov	r20, r24
    36dc:	50 e0       	ldi	r21, 0x00	; 0
    36de:	ca 01       	movw	r24, r20
    36e0:	88 0f       	add	r24, r24
    36e2:	99 1f       	adc	r25, r25
    36e4:	9c 01       	movw	r18, r24
    36e6:	22 0f       	add	r18, r18
    36e8:	33 1f       	adc	r19, r19
    36ea:	22 0f       	add	r18, r18
    36ec:	33 1f       	adc	r19, r19
    36ee:	22 0f       	add	r18, r18
    36f0:	33 1f       	adc	r19, r19
    36f2:	82 0f       	add	r24, r18
    36f4:	93 1f       	adc	r25, r19
    36f6:	84 0f       	add	r24, r20
    36f8:	95 1f       	adc	r25, r21
    36fa:	fc 01       	movw	r30, r24
    36fc:	e1 58       	subi	r30, 0x81	; 129
    36fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3700:	60 81       	ld	r22, Z
    3702:	88 85       	ldd	r24, Y+8	; 0x08
    3704:	48 2f       	mov	r20, r24
    3706:	50 e0       	ldi	r21, 0x00	; 0
    3708:	ca 01       	movw	r24, r20
    370a:	88 0f       	add	r24, r24
    370c:	99 1f       	adc	r25, r25
    370e:	9c 01       	movw	r18, r24
    3710:	22 0f       	add	r18, r18
    3712:	33 1f       	adc	r19, r19
    3714:	22 0f       	add	r18, r18
    3716:	33 1f       	adc	r19, r19
    3718:	22 0f       	add	r18, r18
    371a:	33 1f       	adc	r19, r19
    371c:	82 0f       	add	r24, r18
    371e:	93 1f       	adc	r25, r19
    3720:	84 0f       	add	r24, r20
    3722:	95 1f       	adc	r25, r21
    3724:	fc 01       	movw	r30, r24
    3726:	e0 58       	subi	r30, 0x80	; 128
    3728:	fe 4f       	sbci	r31, 0xFE	; 254
    372a:	90 81       	ld	r25, Z
    372c:	86 2f       	mov	r24, r22
    372e:	69 2f       	mov	r22, r25
    3730:	41 e0       	ldi	r20, 0x01	; 1
    3732:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3736:	88 2f       	mov	r24, r24
    3738:	90 e0       	ldi	r25, 0x00	; 0
    373a:	00 24       	eor	r0, r0
    373c:	96 95       	lsr	r25
    373e:	87 95       	ror	r24
    3740:	07 94       	ror	r0
    3742:	96 95       	lsr	r25
    3744:	87 95       	ror	r24
    3746:	07 94       	ror	r0
    3748:	98 2f       	mov	r25, r24
    374a:	80 2d       	mov	r24, r0
    374c:	9c 01       	movw	r18, r24
    374e:	44 27       	eor	r20, r20
    3750:	37 fd       	sbrc	r19, 7
    3752:	40 95       	com	r20
    3754:	54 2f       	mov	r21, r20
    3756:	89 81       	ldd	r24, Y+1	; 0x01
    3758:	9a 81       	ldd	r25, Y+2	; 0x02
    375a:	ab 81       	ldd	r26, Y+3	; 0x03
    375c:	bc 81       	ldd	r27, Y+4	; 0x04
    375e:	82 2b       	or	r24, r18
    3760:	93 2b       	or	r25, r19
    3762:	a4 2b       	or	r26, r20
    3764:	b5 2b       	or	r27, r21
    3766:	89 83       	std	Y+1, r24	; 0x01
    3768:	9a 83       	std	Y+2, r25	; 0x02
    376a:	ab 83       	std	Y+3, r26	; 0x03
    376c:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  DIO_u8HIGH) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    376e:	88 85       	ldd	r24, Y+8	; 0x08
    3770:	48 2f       	mov	r20, r24
    3772:	50 e0       	ldi	r21, 0x00	; 0
    3774:	ca 01       	movw	r24, r20
    3776:	88 0f       	add	r24, r24
    3778:	99 1f       	adc	r25, r25
    377a:	9c 01       	movw	r18, r24
    377c:	22 0f       	add	r18, r18
    377e:	33 1f       	adc	r19, r19
    3780:	22 0f       	add	r18, r18
    3782:	33 1f       	adc	r19, r19
    3784:	22 0f       	add	r18, r18
    3786:	33 1f       	adc	r19, r19
    3788:	82 0f       	add	r24, r18
    378a:	93 1f       	adc	r25, r19
    378c:	84 0f       	add	r24, r20
    378e:	95 1f       	adc	r25, r21
    3790:	fc 01       	movw	r30, r24
    3792:	ef 57       	subi	r30, 0x7F	; 127
    3794:	fe 4f       	sbci	r31, 0xFE	; 254
    3796:	60 81       	ld	r22, Z
    3798:	88 85       	ldd	r24, Y+8	; 0x08
    379a:	48 2f       	mov	r20, r24
    379c:	50 e0       	ldi	r21, 0x00	; 0
    379e:	ca 01       	movw	r24, r20
    37a0:	88 0f       	add	r24, r24
    37a2:	99 1f       	adc	r25, r25
    37a4:	9c 01       	movw	r18, r24
    37a6:	22 0f       	add	r18, r18
    37a8:	33 1f       	adc	r19, r19
    37aa:	22 0f       	add	r18, r18
    37ac:	33 1f       	adc	r19, r19
    37ae:	22 0f       	add	r18, r18
    37b0:	33 1f       	adc	r19, r19
    37b2:	82 0f       	add	r24, r18
    37b4:	93 1f       	adc	r25, r19
    37b6:	84 0f       	add	r24, r20
    37b8:	95 1f       	adc	r25, r21
    37ba:	fc 01       	movw	r30, r24
    37bc:	ee 57       	subi	r30, 0x7E	; 126
    37be:	fe 4f       	sbci	r31, 0xFE	; 254
    37c0:	90 81       	ld	r25, Z
    37c2:	86 2f       	mov	r24, r22
    37c4:	69 2f       	mov	r22, r25
    37c6:	41 e0       	ldi	r20, 0x01	; 1
    37c8:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    37cc:	88 2f       	mov	r24, r24
    37ce:	90 e0       	ldi	r25, 0x00	; 0
    37d0:	98 2f       	mov	r25, r24
    37d2:	88 27       	eor	r24, r24
    37d4:	99 0f       	add	r25, r25
    37d6:	9c 01       	movw	r18, r24
    37d8:	44 27       	eor	r20, r20
    37da:	37 fd       	sbrc	r19, 7
    37dc:	40 95       	com	r20
    37de:	54 2f       	mov	r21, r20
    37e0:	89 81       	ldd	r24, Y+1	; 0x01
    37e2:	9a 81       	ldd	r25, Y+2	; 0x02
    37e4:	ab 81       	ldd	r26, Y+3	; 0x03
    37e6:	bc 81       	ldd	r27, Y+4	; 0x04
    37e8:	82 2b       	or	r24, r18
    37ea:	93 2b       	or	r25, r19
    37ec:	a4 2b       	or	r26, r20
    37ee:	b5 2b       	or	r27, r21
    37f0:	89 83       	std	Y+1, r24	; 0x01
    37f2:	9a 83       	std	Y+2, r25	; 0x02
    37f4:	ab 83       	std	Y+3, r26	; 0x03
    37f6:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  DIO_u8HIGH) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    37f8:	88 85       	ldd	r24, Y+8	; 0x08
    37fa:	48 2f       	mov	r20, r24
    37fc:	50 e0       	ldi	r21, 0x00	; 0
    37fe:	ca 01       	movw	r24, r20
    3800:	88 0f       	add	r24, r24
    3802:	99 1f       	adc	r25, r25
    3804:	9c 01       	movw	r18, r24
    3806:	22 0f       	add	r18, r18
    3808:	33 1f       	adc	r19, r19
    380a:	22 0f       	add	r18, r18
    380c:	33 1f       	adc	r19, r19
    380e:	22 0f       	add	r18, r18
    3810:	33 1f       	adc	r19, r19
    3812:	82 0f       	add	r24, r18
    3814:	93 1f       	adc	r25, r19
    3816:	84 0f       	add	r24, r20
    3818:	95 1f       	adc	r25, r21
    381a:	fc 01       	movw	r30, r24
    381c:	ed 57       	subi	r30, 0x7D	; 125
    381e:	fe 4f       	sbci	r31, 0xFE	; 254
    3820:	60 81       	ld	r22, Z
    3822:	88 85       	ldd	r24, Y+8	; 0x08
    3824:	48 2f       	mov	r20, r24
    3826:	50 e0       	ldi	r21, 0x00	; 0
    3828:	ca 01       	movw	r24, r20
    382a:	88 0f       	add	r24, r24
    382c:	99 1f       	adc	r25, r25
    382e:	9c 01       	movw	r18, r24
    3830:	22 0f       	add	r18, r18
    3832:	33 1f       	adc	r19, r19
    3834:	22 0f       	add	r18, r18
    3836:	33 1f       	adc	r19, r19
    3838:	22 0f       	add	r18, r18
    383a:	33 1f       	adc	r19, r19
    383c:	82 0f       	add	r24, r18
    383e:	93 1f       	adc	r25, r19
    3840:	84 0f       	add	r24, r20
    3842:	95 1f       	adc	r25, r21
    3844:	fc 01       	movw	r30, r24
    3846:	ec 57       	subi	r30, 0x7C	; 124
    3848:	fe 4f       	sbci	r31, 0xFE	; 254
    384a:	90 81       	ld	r25, Z
    384c:	86 2f       	mov	r24, r22
    384e:	69 2f       	mov	r22, r25
    3850:	41 e0       	ldi	r20, 0x01	; 1
    3852:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3856:	88 2f       	mov	r24, r24
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	98 2f       	mov	r25, r24
    385c:	88 27       	eor	r24, r24
    385e:	92 95       	swap	r25
    3860:	90 7f       	andi	r25, 0xF0	; 240
    3862:	9c 01       	movw	r18, r24
    3864:	44 27       	eor	r20, r20
    3866:	37 fd       	sbrc	r19, 7
    3868:	40 95       	com	r20
    386a:	54 2f       	mov	r21, r20
    386c:	89 81       	ldd	r24, Y+1	; 0x01
    386e:	9a 81       	ldd	r25, Y+2	; 0x02
    3870:	ab 81       	ldd	r26, Y+3	; 0x03
    3872:	bc 81       	ldd	r27, Y+4	; 0x04
    3874:	82 2b       	or	r24, r18
    3876:	93 2b       	or	r25, r19
    3878:	a4 2b       	or	r26, r20
    387a:	b5 2b       	or	r27, r21
    387c:	89 83       	std	Y+1, r24	; 0x01
    387e:	9a 83       	std	Y+2, r25	; 0x02
    3880:	ab 83       	std	Y+3, r26	; 0x03
    3882:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  DIO_u8HIGH) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    3884:	88 85       	ldd	r24, Y+8	; 0x08
    3886:	48 2f       	mov	r20, r24
    3888:	50 e0       	ldi	r21, 0x00	; 0
    388a:	ca 01       	movw	r24, r20
    388c:	88 0f       	add	r24, r24
    388e:	99 1f       	adc	r25, r25
    3890:	9c 01       	movw	r18, r24
    3892:	22 0f       	add	r18, r18
    3894:	33 1f       	adc	r19, r19
    3896:	22 0f       	add	r18, r18
    3898:	33 1f       	adc	r19, r19
    389a:	22 0f       	add	r18, r18
    389c:	33 1f       	adc	r19, r19
    389e:	82 0f       	add	r24, r18
    38a0:	93 1f       	adc	r25, r19
    38a2:	84 0f       	add	r24, r20
    38a4:	95 1f       	adc	r25, r21
    38a6:	fc 01       	movw	r30, r24
    38a8:	eb 57       	subi	r30, 0x7B	; 123
    38aa:	fe 4f       	sbci	r31, 0xFE	; 254
    38ac:	60 81       	ld	r22, Z
    38ae:	88 85       	ldd	r24, Y+8	; 0x08
    38b0:	48 2f       	mov	r20, r24
    38b2:	50 e0       	ldi	r21, 0x00	; 0
    38b4:	ca 01       	movw	r24, r20
    38b6:	88 0f       	add	r24, r24
    38b8:	99 1f       	adc	r25, r25
    38ba:	9c 01       	movw	r18, r24
    38bc:	22 0f       	add	r18, r18
    38be:	33 1f       	adc	r19, r19
    38c0:	22 0f       	add	r18, r18
    38c2:	33 1f       	adc	r19, r19
    38c4:	22 0f       	add	r18, r18
    38c6:	33 1f       	adc	r19, r19
    38c8:	82 0f       	add	r24, r18
    38ca:	93 1f       	adc	r25, r19
    38cc:	84 0f       	add	r24, r20
    38ce:	95 1f       	adc	r25, r21
    38d0:	fc 01       	movw	r30, r24
    38d2:	ea 57       	subi	r30, 0x7A	; 122
    38d4:	fe 4f       	sbci	r31, 0xFE	; 254
    38d6:	90 81       	ld	r25, Z
    38d8:	86 2f       	mov	r24, r22
    38da:	69 2f       	mov	r22, r25
    38dc:	41 e0       	ldi	r20, 0x01	; 1
    38de:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    38e2:	88 2f       	mov	r24, r24
    38e4:	90 e0       	ldi	r25, 0x00	; 0
    38e6:	a0 e0       	ldi	r26, 0x00	; 0
    38e8:	b0 e0       	ldi	r27, 0x00	; 0
    38ea:	9c 01       	movw	r18, r24
    38ec:	ad 01       	movw	r20, r26
    38ee:	01 2e       	mov	r0, r17
    38f0:	1f e0       	ldi	r17, 0x0F	; 15
    38f2:	22 0f       	add	r18, r18
    38f4:	33 1f       	adc	r19, r19
    38f6:	44 1f       	adc	r20, r20
    38f8:	55 1f       	adc	r21, r21
    38fa:	1a 95       	dec	r17
    38fc:	d1 f7       	brne	.-12     	; 0x38f2 <SSDLT_enuClearDisplay+0x7a4>
    38fe:	10 2d       	mov	r17, r0
    3900:	89 81       	ldd	r24, Y+1	; 0x01
    3902:	9a 81       	ldd	r25, Y+2	; 0x02
    3904:	ab 81       	ldd	r26, Y+3	; 0x03
    3906:	bc 81       	ldd	r27, Y+4	; 0x04
    3908:	82 2b       	or	r24, r18
    390a:	93 2b       	or	r25, r19
    390c:	a4 2b       	or	r26, r20
    390e:	b5 2b       	or	r27, r21
    3910:	89 83       	std	Y+1, r24	; 0x01
    3912:	9a 83       	std	Y+2, r25	; 0x02
    3914:	ab 83       	std	Y+3, r26	; 0x03
    3916:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  DIO_u8HIGH) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    3918:	88 85       	ldd	r24, Y+8	; 0x08
    391a:	48 2f       	mov	r20, r24
    391c:	50 e0       	ldi	r21, 0x00	; 0
    391e:	ca 01       	movw	r24, r20
    3920:	88 0f       	add	r24, r24
    3922:	99 1f       	adc	r25, r25
    3924:	9c 01       	movw	r18, r24
    3926:	22 0f       	add	r18, r18
    3928:	33 1f       	adc	r19, r19
    392a:	22 0f       	add	r18, r18
    392c:	33 1f       	adc	r19, r19
    392e:	22 0f       	add	r18, r18
    3930:	33 1f       	adc	r19, r19
    3932:	82 0f       	add	r24, r18
    3934:	93 1f       	adc	r25, r19
    3936:	84 0f       	add	r24, r20
    3938:	95 1f       	adc	r25, r21
    393a:	fc 01       	movw	r30, r24
    393c:	e9 57       	subi	r30, 0x79	; 121
    393e:	fe 4f       	sbci	r31, 0xFE	; 254
    3940:	60 81       	ld	r22, Z
    3942:	88 85       	ldd	r24, Y+8	; 0x08
    3944:	48 2f       	mov	r20, r24
    3946:	50 e0       	ldi	r21, 0x00	; 0
    3948:	ca 01       	movw	r24, r20
    394a:	88 0f       	add	r24, r24
    394c:	99 1f       	adc	r25, r25
    394e:	9c 01       	movw	r18, r24
    3950:	22 0f       	add	r18, r18
    3952:	33 1f       	adc	r19, r19
    3954:	22 0f       	add	r18, r18
    3956:	33 1f       	adc	r19, r19
    3958:	22 0f       	add	r18, r18
    395a:	33 1f       	adc	r19, r19
    395c:	82 0f       	add	r24, r18
    395e:	93 1f       	adc	r25, r19
    3960:	84 0f       	add	r24, r20
    3962:	95 1f       	adc	r25, r21
    3964:	fc 01       	movw	r30, r24
    3966:	e8 57       	subi	r30, 0x78	; 120
    3968:	fe 4f       	sbci	r31, 0xFE	; 254
    396a:	90 81       	ld	r25, Z
    396c:	86 2f       	mov	r24, r22
    396e:	69 2f       	mov	r22, r25
    3970:	41 e0       	ldi	r20, 0x01	; 1
    3972:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3976:	88 2f       	mov	r24, r24
    3978:	90 e0       	ldi	r25, 0x00	; 0
    397a:	a0 e0       	ldi	r26, 0x00	; 0
    397c:	b0 e0       	ldi	r27, 0x00	; 0
    397e:	9c 01       	movw	r18, r24
    3980:	ad 01       	movw	r20, r26
    3982:	01 2e       	mov	r0, r17
    3984:	12 e1       	ldi	r17, 0x12	; 18
    3986:	22 0f       	add	r18, r18
    3988:	33 1f       	adc	r19, r19
    398a:	44 1f       	adc	r20, r20
    398c:	55 1f       	adc	r21, r21
    398e:	1a 95       	dec	r17
    3990:	d1 f7       	brne	.-12     	; 0x3986 <SSDLT_enuClearDisplay+0x838>
    3992:	10 2d       	mov	r17, r0
    3994:	89 81       	ldd	r24, Y+1	; 0x01
    3996:	9a 81       	ldd	r25, Y+2	; 0x02
    3998:	ab 81       	ldd	r26, Y+3	; 0x03
    399a:	bc 81       	ldd	r27, Y+4	; 0x04
    399c:	82 2b       	or	r24, r18
    399e:	93 2b       	or	r25, r19
    39a0:	a4 2b       	or	r26, r20
    39a2:	b5 2b       	or	r27, r21
    39a4:	89 83       	std	Y+1, r24	; 0x01
    39a6:	9a 83       	std	Y+2, r25	; 0x02
    39a8:	ab 83       	std	Y+3, r26	; 0x03
    39aa:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  DIO_u8HIGH) << 18));
			Local_u8LastBit = 21;
    39ac:	85 e1       	ldi	r24, 0x15	; 21
    39ae:	8d 83       	std	Y+5, r24	; 0x05
    39b0:	03 c0       	rjmp	.+6      	; 0x39b8 <SSDLT_enuClearDisplay+0x86a>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    39b2:	03 e0       	ldi	r16, 0x03	; 3
    39b4:	09 87       	std	Y+9, r16	; 0x09
    39b6:	23 c1       	rjmp	.+582    	; 0x3bfe <SSDLT_enuClearDisplay+0xab0>
	else
	{
		return ES_OUT_OF_RANGE;
	}

	if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    39b8:	88 85       	ldd	r24, Y+8	; 0x08
    39ba:	48 2f       	mov	r20, r24
    39bc:	50 e0       	ldi	r21, 0x00	; 0
    39be:	ca 01       	movw	r24, r20
    39c0:	88 0f       	add	r24, r24
    39c2:	99 1f       	adc	r25, r25
    39c4:	9c 01       	movw	r18, r24
    39c6:	22 0f       	add	r18, r18
    39c8:	33 1f       	adc	r19, r19
    39ca:	22 0f       	add	r18, r18
    39cc:	33 1f       	adc	r19, r19
    39ce:	22 0f       	add	r18, r18
    39d0:	33 1f       	adc	r19, r19
    39d2:	82 0f       	add	r24, r18
    39d4:	93 1f       	adc	r25, r19
    39d6:	84 0f       	add	r24, r20
    39d8:	95 1f       	adc	r25, r21
    39da:	fc 01       	movw	r30, r24
    39dc:	e5 57       	subi	r30, 0x75	; 117
    39de:	fe 4f       	sbci	r31, 0xFE	; 254
    39e0:	80 81       	ld	r24, Z
    39e2:	82 30       	cpi	r24, 0x02	; 2
    39e4:	e1 f4       	brne	.+56     	; 0x3a1e <SSDLT_enuClearDisplay+0x8d0>
    39e6:	03 c0       	rjmp	.+6      	; 0x39ee <SSDLT_enuClearDisplay+0x8a0>
			return ES_OUT_OF_RANGE;
		}
	}
	else
	{
		return ES_OUT_OF_RANGE;
    39e8:	13 e0       	ldi	r17, 0x03	; 3
    39ea:	19 87       	std	Y+9, r17	; 0x09
    39ec:	08 c1       	rjmp	.+528    	; 0x3bfe <SSDLT_enuClearDisplay+0xab0>
	}

	if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    39ee:	88 85       	ldd	r24, Y+8	; 0x08
    39f0:	48 2f       	mov	r20, r24
    39f2:	50 e0       	ldi	r21, 0x00	; 0
    39f4:	ca 01       	movw	r24, r20
    39f6:	88 0f       	add	r24, r24
    39f8:	99 1f       	adc	r25, r25
    39fa:	9c 01       	movw	r18, r24
    39fc:	22 0f       	add	r18, r18
    39fe:	33 1f       	adc	r19, r19
    3a00:	22 0f       	add	r18, r18
    3a02:	33 1f       	adc	r19, r19
    3a04:	22 0f       	add	r18, r18
    3a06:	33 1f       	adc	r19, r19
    3a08:	82 0f       	add	r24, r18
    3a0a:	93 1f       	adc	r25, r19
    3a0c:	84 0f       	add	r24, r20
    3a0e:	95 1f       	adc	r25, r21
    3a10:	fc 01       	movw	r30, r24
    3a12:	e4 57       	subi	r30, 0x74	; 116
    3a14:	fe 4f       	sbci	r31, 0xFE	; 254
    3a16:	80 81       	ld	r24, Z
    3a18:	82 30       	cpi	r24, 0x02	; 2
    3a1a:	09 f4       	brne	.+2      	; 0x3a1e <SSDLT_enuClearDisplay+0x8d0>
    3a1c:	c7 c0       	rjmp	.+398    	; 0x3bac <SSDLT_enuClearDisplay+0xa5e>
		SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    3a1e:	88 85       	ldd	r24, Y+8	; 0x08
    3a20:	48 2f       	mov	r20, r24
    3a22:	50 e0       	ldi	r21, 0x00	; 0
    3a24:	ca 01       	movw	r24, r20
    3a26:	88 0f       	add	r24, r24
    3a28:	99 1f       	adc	r25, r25
    3a2a:	9c 01       	movw	r18, r24
    3a2c:	22 0f       	add	r18, r18
    3a2e:	33 1f       	adc	r19, r19
    3a30:	22 0f       	add	r18, r18
    3a32:	33 1f       	adc	r19, r19
    3a34:	22 0f       	add	r18, r18
    3a36:	33 1f       	adc	r19, r19
    3a38:	82 0f       	add	r24, r18
    3a3a:	93 1f       	adc	r25, r19
    3a3c:	84 0f       	add	r24, r20
    3a3e:	95 1f       	adc	r25, r21
    3a40:	fc 01       	movw	r30, r24
    3a42:	e3 57       	subi	r30, 0x73	; 115
    3a44:	fe 4f       	sbci	r31, 0xFE	; 254
    3a46:	80 81       	ld	r24, Z
    3a48:	81 30       	cpi	r24, 0x01	; 1
    3a4a:	09 f0       	breq	.+2      	; 0x3a4e <SSDLT_enuClearDisplay+0x900>
    3a4c:	49 c0       	rjmp	.+146    	; 0x3ae0 <SSDLT_enuClearDisplay+0x992>
		{
			Local_enuErrorState |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    3a4e:	88 85       	ldd	r24, Y+8	; 0x08
    3a50:	48 2f       	mov	r20, r24
    3a52:	50 e0       	ldi	r21, 0x00	; 0
    3a54:	ca 01       	movw	r24, r20
    3a56:	88 0f       	add	r24, r24
    3a58:	99 1f       	adc	r25, r25
    3a5a:	9c 01       	movw	r18, r24
    3a5c:	22 0f       	add	r18, r18
    3a5e:	33 1f       	adc	r19, r19
    3a60:	22 0f       	add	r18, r18
    3a62:	33 1f       	adc	r19, r19
    3a64:	22 0f       	add	r18, r18
    3a66:	33 1f       	adc	r19, r19
    3a68:	82 0f       	add	r24, r18
    3a6a:	93 1f       	adc	r25, r19
    3a6c:	84 0f       	add	r24, r20
    3a6e:	95 1f       	adc	r25, r21
    3a70:	fc 01       	movw	r30, r24
    3a72:	e5 57       	subi	r30, 0x75	; 117
    3a74:	fe 4f       	sbci	r31, 0xFE	; 254
    3a76:	60 81       	ld	r22, Z
    3a78:	88 85       	ldd	r24, Y+8	; 0x08
    3a7a:	48 2f       	mov	r20, r24
    3a7c:	50 e0       	ldi	r21, 0x00	; 0
    3a7e:	ca 01       	movw	r24, r20
    3a80:	88 0f       	add	r24, r24
    3a82:	99 1f       	adc	r25, r25
    3a84:	9c 01       	movw	r18, r24
    3a86:	22 0f       	add	r18, r18
    3a88:	33 1f       	adc	r19, r19
    3a8a:	22 0f       	add	r18, r18
    3a8c:	33 1f       	adc	r19, r19
    3a8e:	22 0f       	add	r18, r18
    3a90:	33 1f       	adc	r19, r19
    3a92:	82 0f       	add	r24, r18
    3a94:	93 1f       	adc	r25, r19
    3a96:	84 0f       	add	r24, r20
    3a98:	95 1f       	adc	r25, r21
    3a9a:	fc 01       	movw	r30, r24
    3a9c:	e4 57       	subi	r30, 0x74	; 116
    3a9e:	fe 4f       	sbci	r31, 0xFE	; 254
    3aa0:	90 81       	ld	r25, Z
    3aa2:	86 2f       	mov	r24, r22
    3aa4:	69 2f       	mov	r22, r25
    3aa6:	40 e0       	ldi	r20, 0x00	; 0
    3aa8:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3aac:	28 2f       	mov	r18, r24
    3aae:	30 e0       	ldi	r19, 0x00	; 0
    3ab0:	40 e0       	ldi	r20, 0x00	; 0
    3ab2:	50 e0       	ldi	r21, 0x00	; 0
    3ab4:	8d 81       	ldd	r24, Y+5	; 0x05
    3ab6:	88 2f       	mov	r24, r24
    3ab8:	90 e0       	ldi	r25, 0x00	; 0
    3aba:	79 01       	movw	r14, r18
    3abc:	8a 01       	movw	r16, r20
    3abe:	04 c0       	rjmp	.+8      	; 0x3ac8 <SSDLT_enuClearDisplay+0x97a>
    3ac0:	ee 0c       	add	r14, r14
    3ac2:	ff 1c       	adc	r15, r15
    3ac4:	00 1f       	adc	r16, r16
    3ac6:	11 1f       	adc	r17, r17
    3ac8:	8a 95       	dec	r24
    3aca:	d2 f7       	brpl	.-12     	; 0x3ac0 <SSDLT_enuClearDisplay+0x972>
    3acc:	d8 01       	movw	r26, r16
    3ace:	c7 01       	movw	r24, r14
    3ad0:	98 2f       	mov	r25, r24
    3ad2:	8f 81       	ldd	r24, Y+7	; 0x07
    3ad4:	89 2b       	or	r24, r25
    3ad6:	8f 83       	std	Y+7, r24	; 0x07
													 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8LOW) << Local_u8LastBit));
			Local_u8LastBit += 3;
    3ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    3ada:	8d 5f       	subi	r24, 0xFD	; 253
    3adc:	8d 83       	std	Y+5, r24	; 0x05
    3ade:	64 c0       	rjmp	.+200    	; 0x3ba8 <SSDLT_enuClearDisplay+0xa5a>
		}
		else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    3ae0:	88 85       	ldd	r24, Y+8	; 0x08
    3ae2:	48 2f       	mov	r20, r24
    3ae4:	50 e0       	ldi	r21, 0x00	; 0
    3ae6:	ca 01       	movw	r24, r20
    3ae8:	88 0f       	add	r24, r24
    3aea:	99 1f       	adc	r25, r25
    3aec:	9c 01       	movw	r18, r24
    3aee:	22 0f       	add	r18, r18
    3af0:	33 1f       	adc	r19, r19
    3af2:	22 0f       	add	r18, r18
    3af4:	33 1f       	adc	r19, r19
    3af6:	22 0f       	add	r18, r18
    3af8:	33 1f       	adc	r19, r19
    3afa:	82 0f       	add	r24, r18
    3afc:	93 1f       	adc	r25, r19
    3afe:	84 0f       	add	r24, r20
    3b00:	95 1f       	adc	r25, r21
    3b02:	fc 01       	movw	r30, r24
    3b04:	e3 57       	subi	r30, 0x73	; 115
    3b06:	fe 4f       	sbci	r31, 0xFE	; 254
    3b08:	80 81       	ld	r24, Z
    3b0a:	88 23       	and	r24, r24
    3b0c:	09 f0       	breq	.+2      	; 0x3b10 <SSDLT_enuClearDisplay+0x9c2>
    3b0e:	49 c0       	rjmp	.+146    	; 0x3ba2 <SSDLT_enuClearDisplay+0xa54>
		{
			Local_enuErrorState |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    3b10:	88 85       	ldd	r24, Y+8	; 0x08
    3b12:	48 2f       	mov	r20, r24
    3b14:	50 e0       	ldi	r21, 0x00	; 0
    3b16:	ca 01       	movw	r24, r20
    3b18:	88 0f       	add	r24, r24
    3b1a:	99 1f       	adc	r25, r25
    3b1c:	9c 01       	movw	r18, r24
    3b1e:	22 0f       	add	r18, r18
    3b20:	33 1f       	adc	r19, r19
    3b22:	22 0f       	add	r18, r18
    3b24:	33 1f       	adc	r19, r19
    3b26:	22 0f       	add	r18, r18
    3b28:	33 1f       	adc	r19, r19
    3b2a:	82 0f       	add	r24, r18
    3b2c:	93 1f       	adc	r25, r19
    3b2e:	84 0f       	add	r24, r20
    3b30:	95 1f       	adc	r25, r21
    3b32:	fc 01       	movw	r30, r24
    3b34:	e5 57       	subi	r30, 0x75	; 117
    3b36:	fe 4f       	sbci	r31, 0xFE	; 254
    3b38:	60 81       	ld	r22, Z
    3b3a:	88 85       	ldd	r24, Y+8	; 0x08
    3b3c:	48 2f       	mov	r20, r24
    3b3e:	50 e0       	ldi	r21, 0x00	; 0
    3b40:	ca 01       	movw	r24, r20
    3b42:	88 0f       	add	r24, r24
    3b44:	99 1f       	adc	r25, r25
    3b46:	9c 01       	movw	r18, r24
    3b48:	22 0f       	add	r18, r18
    3b4a:	33 1f       	adc	r19, r19
    3b4c:	22 0f       	add	r18, r18
    3b4e:	33 1f       	adc	r19, r19
    3b50:	22 0f       	add	r18, r18
    3b52:	33 1f       	adc	r19, r19
    3b54:	82 0f       	add	r24, r18
    3b56:	93 1f       	adc	r25, r19
    3b58:	84 0f       	add	r24, r20
    3b5a:	95 1f       	adc	r25, r21
    3b5c:	fc 01       	movw	r30, r24
    3b5e:	e4 57       	subi	r30, 0x74	; 116
    3b60:	fe 4f       	sbci	r31, 0xFE	; 254
    3b62:	90 81       	ld	r25, Z
    3b64:	86 2f       	mov	r24, r22
    3b66:	69 2f       	mov	r22, r25
    3b68:	41 e0       	ldi	r20, 0x01	; 1
    3b6a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3b6e:	28 2f       	mov	r18, r24
    3b70:	30 e0       	ldi	r19, 0x00	; 0
    3b72:	40 e0       	ldi	r20, 0x00	; 0
    3b74:	50 e0       	ldi	r21, 0x00	; 0
    3b76:	8d 81       	ldd	r24, Y+5	; 0x05
    3b78:	88 2f       	mov	r24, r24
    3b7a:	90 e0       	ldi	r25, 0x00	; 0
    3b7c:	79 01       	movw	r14, r18
    3b7e:	8a 01       	movw	r16, r20
    3b80:	04 c0       	rjmp	.+8      	; 0x3b8a <SSDLT_enuClearDisplay+0xa3c>
    3b82:	ee 0c       	add	r14, r14
    3b84:	ff 1c       	adc	r15, r15
    3b86:	00 1f       	adc	r16, r16
    3b88:	11 1f       	adc	r17, r17
    3b8a:	8a 95       	dec	r24
    3b8c:	d2 f7       	brpl	.-12     	; 0x3b82 <SSDLT_enuClearDisplay+0xa34>
    3b8e:	d8 01       	movw	r26, r16
    3b90:	c7 01       	movw	r24, r14
    3b92:	98 2f       	mov	r25, r24
    3b94:	8f 81       	ldd	r24, Y+7	; 0x07
    3b96:	89 2b       	or	r24, r25
    3b98:	8f 83       	std	Y+7, r24	; 0x07
													SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8HIGH) << Local_u8LastBit));
			Local_u8LastBit += 3;
    3b9a:	8d 81       	ldd	r24, Y+5	; 0x05
    3b9c:	8d 5f       	subi	r24, 0xFD	; 253
    3b9e:	8d 83       	std	Y+5, r24	; 0x05
    3ba0:	03 c0       	rjmp	.+6      	; 0x3ba8 <SSDLT_enuClearDisplay+0xa5a>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    3ba2:	03 e0       	ldi	r16, 0x03	; 3
    3ba4:	09 87       	std	Y+9, r16	; 0x09
    3ba6:	2b c0       	rjmp	.+86     	; 0x3bfe <SSDLT_enuClearDisplay+0xab0>
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    3ba8:	1e 82       	std	Y+6, r1	; 0x06
    3baa:	21 c0       	rjmp	.+66     	; 0x3bee <SSDLT_enuClearDisplay+0xaa0>
		}

	}
	else
	{
		return ES_OUT_OF_RANGE;
    3bac:	13 e0       	ldi	r17, 0x03	; 3
    3bae:	19 87       	std	Y+9, r17	; 0x09
    3bb0:	26 c0       	rjmp	.+76     	; 0x3bfe <SSDLT_enuClearDisplay+0xab0>
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    3bb2:	8e 81       	ldd	r24, Y+6	; 0x06
    3bb4:	28 2f       	mov	r18, r24
    3bb6:	30 e0       	ldi	r19, 0x00	; 0
    3bb8:	89 81       	ldd	r24, Y+1	; 0x01
    3bba:	9a 81       	ldd	r25, Y+2	; 0x02
    3bbc:	ab 81       	ldd	r26, Y+3	; 0x03
    3bbe:	bc 81       	ldd	r27, Y+4	; 0x04
    3bc0:	02 2e       	mov	r0, r18
    3bc2:	04 c0       	rjmp	.+8      	; 0x3bcc <SSDLT_enuClearDisplay+0xa7e>
    3bc4:	b6 95       	lsr	r27
    3bc6:	a7 95       	ror	r26
    3bc8:	97 95       	ror	r25
    3bca:	87 95       	ror	r24
    3bcc:	0a 94       	dec	r0
    3bce:	d2 f7       	brpl	.-12     	; 0x3bc4 <SSDLT_enuClearDisplay+0xa76>
    3bd0:	87 70       	andi	r24, 0x07	; 7
    3bd2:	90 70       	andi	r25, 0x00	; 0
    3bd4:	a0 70       	andi	r26, 0x00	; 0
    3bd6:	b0 70       	andi	r27, 0x00	; 0
    3bd8:	81 30       	cpi	r24, 0x01	; 1
    3bda:	91 05       	cpc	r25, r1
    3bdc:	a1 05       	cpc	r26, r1
    3bde:	b1 05       	cpc	r27, r1
    3be0:	19 f0       	breq	.+6      	; 0x3be8 <SSDLT_enuClearDisplay+0xa9a>
		{
			return Local_enuErrorState;
    3be2:	8f 81       	ldd	r24, Y+7	; 0x07
    3be4:	89 87       	std	Y+9, r24	; 0x09
    3be6:	0b c0       	rjmp	.+22     	; 0x3bfe <SSDLT_enuClearDisplay+0xab0>
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    3be8:	8e 81       	ldd	r24, Y+6	; 0x06
    3bea:	8d 5f       	subi	r24, 0xFD	; 253
    3bec:	8e 83       	std	Y+6, r24	; 0x06
    3bee:	9e 81       	ldd	r25, Y+6	; 0x06
    3bf0:	8d 81       	ldd	r24, Y+5	; 0x05
    3bf2:	98 17       	cp	r25, r24
    3bf4:	f0 f2       	brcs	.-68     	; 0x3bb2 <SSDLT_enuClearDisplay+0xa64>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    3bf6:	81 e0       	ldi	r24, 0x01	; 1
    3bf8:	8f 83       	std	Y+7, r24	; 0x07

	return Local_enuErrorState;
    3bfa:	ef 80       	ldd	r14, Y+7	; 0x07
    3bfc:	e9 86       	std	Y+9, r14	; 0x09
    3bfe:	89 85       	ldd	r24, Y+9	; 0x09
}
    3c00:	29 96       	adiw	r28, 0x09	; 9
    3c02:	0f b6       	in	r0, 0x3f	; 63
    3c04:	f8 94       	cli
    3c06:	de bf       	out	0x3e, r29	; 62
    3c08:	0f be       	out	0x3f, r0	; 63
    3c0a:	cd bf       	out	0x3d, r28	; 61
    3c0c:	cf 91       	pop	r28
    3c0e:	df 91       	pop	r29
    3c10:	1f 91       	pop	r17
    3c12:	0f 91       	pop	r16
    3c14:	ff 90       	pop	r15
    3c16:	ef 90       	pop	r14
    3c18:	08 95       	ret

00003c1a <SSD_enuInit>:
#include "SSD_config.h"
#include "SSD_private.h"
/***********************	Includes Section End	***********************/

ES_t SSD_enuInit(void)
{
    3c1a:	df 93       	push	r29
    3c1c:	cf 93       	push	r28
    3c1e:	cd b7       	in	r28, 0x3d	; 61
    3c20:	de b7       	in	r29, 0x3e	; 62
    3c22:	27 97       	sbiw	r28, 0x07	; 7
    3c24:	0f b6       	in	r0, 0x3f	; 63
    3c26:	f8 94       	cli
    3c28:	de bf       	out	0x3e, r29	; 62
    3c2a:	0f be       	out	0x3f, r0	; 63
    3c2c:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    3c2e:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    3c30:	1a 82       	std	Y+2, r1	; 0x02
    3c32:	1b 82       	std	Y+3, r1	; 0x03
    3c34:	1c 82       	std	Y+4, r1	; 0x04
    3c36:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    3c38:	19 82       	std	Y+1, r1	; 0x01

	Local_u32Check |= (DIO_enuSetPinDirection(SEG_APORT, SEG_APIN, DIO_u8OUTPUT) << 0);
    3c3a:	80 e0       	ldi	r24, 0x00	; 0
    3c3c:	60 e0       	ldi	r22, 0x00	; 0
    3c3e:	41 e0       	ldi	r20, 0x01	; 1
    3c40:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3c44:	28 2f       	mov	r18, r24
    3c46:	30 e0       	ldi	r19, 0x00	; 0
    3c48:	40 e0       	ldi	r20, 0x00	; 0
    3c4a:	50 e0       	ldi	r21, 0x00	; 0
    3c4c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c4e:	9b 81       	ldd	r25, Y+3	; 0x03
    3c50:	ac 81       	ldd	r26, Y+4	; 0x04
    3c52:	bd 81       	ldd	r27, Y+5	; 0x05
    3c54:	82 2b       	or	r24, r18
    3c56:	93 2b       	or	r25, r19
    3c58:	a4 2b       	or	r26, r20
    3c5a:	b5 2b       	or	r27, r21
    3c5c:	8a 83       	std	Y+2, r24	; 0x02
    3c5e:	9b 83       	std	Y+3, r25	; 0x03
    3c60:	ac 83       	std	Y+4, r26	; 0x04
    3c62:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_BPORT, SEG_BPIN, DIO_u8OUTPUT) << 3);
    3c64:	80 e0       	ldi	r24, 0x00	; 0
    3c66:	61 e0       	ldi	r22, 0x01	; 1
    3c68:	41 e0       	ldi	r20, 0x01	; 1
    3c6a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3c6e:	88 2f       	mov	r24, r24
    3c70:	90 e0       	ldi	r25, 0x00	; 0
    3c72:	88 0f       	add	r24, r24
    3c74:	99 1f       	adc	r25, r25
    3c76:	88 0f       	add	r24, r24
    3c78:	99 1f       	adc	r25, r25
    3c7a:	88 0f       	add	r24, r24
    3c7c:	99 1f       	adc	r25, r25
    3c7e:	9c 01       	movw	r18, r24
    3c80:	44 27       	eor	r20, r20
    3c82:	37 fd       	sbrc	r19, 7
    3c84:	40 95       	com	r20
    3c86:	54 2f       	mov	r21, r20
    3c88:	8a 81       	ldd	r24, Y+2	; 0x02
    3c8a:	9b 81       	ldd	r25, Y+3	; 0x03
    3c8c:	ac 81       	ldd	r26, Y+4	; 0x04
    3c8e:	bd 81       	ldd	r27, Y+5	; 0x05
    3c90:	82 2b       	or	r24, r18
    3c92:	93 2b       	or	r25, r19
    3c94:	a4 2b       	or	r26, r20
    3c96:	b5 2b       	or	r27, r21
    3c98:	8a 83       	std	Y+2, r24	; 0x02
    3c9a:	9b 83       	std	Y+3, r25	; 0x03
    3c9c:	ac 83       	std	Y+4, r26	; 0x04
    3c9e:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_CPORT, SEG_CPIN, DIO_u8OUTPUT) << 6);
    3ca0:	80 e0       	ldi	r24, 0x00	; 0
    3ca2:	62 e0       	ldi	r22, 0x02	; 2
    3ca4:	41 e0       	ldi	r20, 0x01	; 1
    3ca6:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3caa:	88 2f       	mov	r24, r24
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	00 24       	eor	r0, r0
    3cb0:	96 95       	lsr	r25
    3cb2:	87 95       	ror	r24
    3cb4:	07 94       	ror	r0
    3cb6:	96 95       	lsr	r25
    3cb8:	87 95       	ror	r24
    3cba:	07 94       	ror	r0
    3cbc:	98 2f       	mov	r25, r24
    3cbe:	80 2d       	mov	r24, r0
    3cc0:	9c 01       	movw	r18, r24
    3cc2:	44 27       	eor	r20, r20
    3cc4:	37 fd       	sbrc	r19, 7
    3cc6:	40 95       	com	r20
    3cc8:	54 2f       	mov	r21, r20
    3cca:	8a 81       	ldd	r24, Y+2	; 0x02
    3ccc:	9b 81       	ldd	r25, Y+3	; 0x03
    3cce:	ac 81       	ldd	r26, Y+4	; 0x04
    3cd0:	bd 81       	ldd	r27, Y+5	; 0x05
    3cd2:	82 2b       	or	r24, r18
    3cd4:	93 2b       	or	r25, r19
    3cd6:	a4 2b       	or	r26, r20
    3cd8:	b5 2b       	or	r27, r21
    3cda:	8a 83       	std	Y+2, r24	; 0x02
    3cdc:	9b 83       	std	Y+3, r25	; 0x03
    3cde:	ac 83       	std	Y+4, r26	; 0x04
    3ce0:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_DPORT, SEG_DPIN, DIO_u8OUTPUT) << 9);
    3ce2:	81 e0       	ldi	r24, 0x01	; 1
    3ce4:	60 e0       	ldi	r22, 0x00	; 0
    3ce6:	41 e0       	ldi	r20, 0x01	; 1
    3ce8:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3cec:	88 2f       	mov	r24, r24
    3cee:	90 e0       	ldi	r25, 0x00	; 0
    3cf0:	98 2f       	mov	r25, r24
    3cf2:	88 27       	eor	r24, r24
    3cf4:	99 0f       	add	r25, r25
    3cf6:	9c 01       	movw	r18, r24
    3cf8:	44 27       	eor	r20, r20
    3cfa:	37 fd       	sbrc	r19, 7
    3cfc:	40 95       	com	r20
    3cfe:	54 2f       	mov	r21, r20
    3d00:	8a 81       	ldd	r24, Y+2	; 0x02
    3d02:	9b 81       	ldd	r25, Y+3	; 0x03
    3d04:	ac 81       	ldd	r26, Y+4	; 0x04
    3d06:	bd 81       	ldd	r27, Y+5	; 0x05
    3d08:	82 2b       	or	r24, r18
    3d0a:	93 2b       	or	r25, r19
    3d0c:	a4 2b       	or	r26, r20
    3d0e:	b5 2b       	or	r27, r21
    3d10:	8a 83       	std	Y+2, r24	; 0x02
    3d12:	9b 83       	std	Y+3, r25	; 0x03
    3d14:	ac 83       	std	Y+4, r26	; 0x04
    3d16:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_EPORT, SEG_EPIN, DIO_u8OUTPUT) << 12);
    3d18:	81 e0       	ldi	r24, 0x01	; 1
    3d1a:	61 e0       	ldi	r22, 0x01	; 1
    3d1c:	41 e0       	ldi	r20, 0x01	; 1
    3d1e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3d22:	88 2f       	mov	r24, r24
    3d24:	90 e0       	ldi	r25, 0x00	; 0
    3d26:	98 2f       	mov	r25, r24
    3d28:	88 27       	eor	r24, r24
    3d2a:	92 95       	swap	r25
    3d2c:	90 7f       	andi	r25, 0xF0	; 240
    3d2e:	9c 01       	movw	r18, r24
    3d30:	44 27       	eor	r20, r20
    3d32:	37 fd       	sbrc	r19, 7
    3d34:	40 95       	com	r20
    3d36:	54 2f       	mov	r21, r20
    3d38:	8a 81       	ldd	r24, Y+2	; 0x02
    3d3a:	9b 81       	ldd	r25, Y+3	; 0x03
    3d3c:	ac 81       	ldd	r26, Y+4	; 0x04
    3d3e:	bd 81       	ldd	r27, Y+5	; 0x05
    3d40:	82 2b       	or	r24, r18
    3d42:	93 2b       	or	r25, r19
    3d44:	a4 2b       	or	r26, r20
    3d46:	b5 2b       	or	r27, r21
    3d48:	8a 83       	std	Y+2, r24	; 0x02
    3d4a:	9b 83       	std	Y+3, r25	; 0x03
    3d4c:	ac 83       	std	Y+4, r26	; 0x04
    3d4e:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_GPORT, SEG_GPIN, DIO_u8OUTPUT)) << 15);
    3d50:	81 e0       	ldi	r24, 0x01	; 1
    3d52:	63 e0       	ldi	r22, 0x03	; 3
    3d54:	41 e0       	ldi	r20, 0x01	; 1
    3d56:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3d5a:	88 2f       	mov	r24, r24
    3d5c:	90 e0       	ldi	r25, 0x00	; 0
    3d5e:	a0 e0       	ldi	r26, 0x00	; 0
    3d60:	b0 e0       	ldi	r27, 0x00	; 0
    3d62:	9c 01       	movw	r18, r24
    3d64:	ad 01       	movw	r20, r26
    3d66:	01 2e       	mov	r0, r17
    3d68:	1f e0       	ldi	r17, 0x0F	; 15
    3d6a:	22 0f       	add	r18, r18
    3d6c:	33 1f       	adc	r19, r19
    3d6e:	44 1f       	adc	r20, r20
    3d70:	55 1f       	adc	r21, r21
    3d72:	1a 95       	dec	r17
    3d74:	d1 f7       	brne	.-12     	; 0x3d6a <SSD_enuInit+0x150>
    3d76:	10 2d       	mov	r17, r0
    3d78:	8a 81       	ldd	r24, Y+2	; 0x02
    3d7a:	9b 81       	ldd	r25, Y+3	; 0x03
    3d7c:	ac 81       	ldd	r26, Y+4	; 0x04
    3d7e:	bd 81       	ldd	r27, Y+5	; 0x05
    3d80:	82 2b       	or	r24, r18
    3d82:	93 2b       	or	r25, r19
    3d84:	a4 2b       	or	r26, r20
    3d86:	b5 2b       	or	r27, r21
    3d88:	8a 83       	std	Y+2, r24	; 0x02
    3d8a:	9b 83       	std	Y+3, r25	; 0x03
    3d8c:	ac 83       	std	Y+4, r26	; 0x04
    3d8e:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_GPORT, SEG_GPIN, DIO_u8OUTPUT)) << 18);
    3d90:	81 e0       	ldi	r24, 0x01	; 1
    3d92:	63 e0       	ldi	r22, 0x03	; 3
    3d94:	41 e0       	ldi	r20, 0x01	; 1
    3d96:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3d9a:	88 2f       	mov	r24, r24
    3d9c:	90 e0       	ldi	r25, 0x00	; 0
    3d9e:	a0 e0       	ldi	r26, 0x00	; 0
    3da0:	b0 e0       	ldi	r27, 0x00	; 0
    3da2:	9c 01       	movw	r18, r24
    3da4:	ad 01       	movw	r20, r26
    3da6:	01 2e       	mov	r0, r17
    3da8:	12 e1       	ldi	r17, 0x12	; 18
    3daa:	22 0f       	add	r18, r18
    3dac:	33 1f       	adc	r19, r19
    3dae:	44 1f       	adc	r20, r20
    3db0:	55 1f       	adc	r21, r21
    3db2:	1a 95       	dec	r17
    3db4:	d1 f7       	brne	.-12     	; 0x3daa <SSD_enuInit+0x190>
    3db6:	10 2d       	mov	r17, r0
    3db8:	8a 81       	ldd	r24, Y+2	; 0x02
    3dba:	9b 81       	ldd	r25, Y+3	; 0x03
    3dbc:	ac 81       	ldd	r26, Y+4	; 0x04
    3dbe:	bd 81       	ldd	r27, Y+5	; 0x05
    3dc0:	82 2b       	or	r24, r18
    3dc2:	93 2b       	or	r25, r19
    3dc4:	a4 2b       	or	r26, r20
    3dc6:	b5 2b       	or	r27, r21
    3dc8:	8a 83       	std	Y+2, r24	; 0x02
    3dca:	9b 83       	std	Y+3, r25	; 0x03
    3dcc:	ac 83       	std	Y+4, r26	; 0x04
    3dce:	bd 83       	std	Y+5, r27	; 0x05
	 *  	0000 0000 0000 0100 1001 0010 0100 1001
	 * */

	//Because we work as pre compile config we will use #if
	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8OUTPUT)) << 21);
    3dd0:	82 e0       	ldi	r24, 0x02	; 2
    3dd2:	62 e0       	ldi	r22, 0x02	; 2
    3dd4:	41 e0       	ldi	r20, 0x01	; 1
    3dd6:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3dda:	88 2f       	mov	r24, r24
    3ddc:	90 e0       	ldi	r25, 0x00	; 0
    3dde:	a0 e0       	ldi	r26, 0x00	; 0
    3de0:	b0 e0       	ldi	r27, 0x00	; 0
    3de2:	9c 01       	movw	r18, r24
    3de4:	ad 01       	movw	r20, r26
    3de6:	01 2e       	mov	r0, r17
    3de8:	15 e1       	ldi	r17, 0x15	; 21
    3dea:	22 0f       	add	r18, r18
    3dec:	33 1f       	adc	r19, r19
    3dee:	44 1f       	adc	r20, r20
    3df0:	55 1f       	adc	r21, r21
    3df2:	1a 95       	dec	r17
    3df4:	d1 f7       	brne	.-12     	; 0x3dea <SSD_enuInit+0x1d0>
    3df6:	10 2d       	mov	r17, r0
    3df8:	8a 81       	ldd	r24, Y+2	; 0x02
    3dfa:	9b 81       	ldd	r25, Y+3	; 0x03
    3dfc:	ac 81       	ldd	r26, Y+4	; 0x04
    3dfe:	bd 81       	ldd	r27, Y+5	; 0x05
    3e00:	82 2b       	or	r24, r18
    3e02:	93 2b       	or	r25, r19
    3e04:	a4 2b       	or	r26, r20
    3e06:	b5 2b       	or	r27, r21
    3e08:	8a 83       	std	Y+2, r24	; 0x02
    3e0a:	9b 83       	std	Y+3, r25	; 0x03
    3e0c:	ac 83       	std	Y+4, r26	; 0x04
    3e0e:	bd 83       	std	Y+5, r27	; 0x05
	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8OUTPUT)) << 24);
    3e10:	82 e0       	ldi	r24, 0x02	; 2
    3e12:	62 e0       	ldi	r22, 0x02	; 2
    3e14:	41 e0       	ldi	r20, 0x01	; 1
    3e16:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    3e1a:	88 2f       	mov	r24, r24
    3e1c:	90 e0       	ldi	r25, 0x00	; 0
    3e1e:	a0 e0       	ldi	r26, 0x00	; 0
    3e20:	b0 e0       	ldi	r27, 0x00	; 0
    3e22:	58 2f       	mov	r21, r24
    3e24:	44 27       	eor	r20, r20
    3e26:	33 27       	eor	r19, r19
    3e28:	22 27       	eor	r18, r18
    3e2a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e2c:	9b 81       	ldd	r25, Y+3	; 0x03
    3e2e:	ac 81       	ldd	r26, Y+4	; 0x04
    3e30:	bd 81       	ldd	r27, Y+5	; 0x05
    3e32:	82 2b       	or	r24, r18
    3e34:	93 2b       	or	r25, r19
    3e36:	a4 2b       	or	r26, r20
    3e38:	b5 2b       	or	r27, r21
    3e3a:	8a 83       	std	Y+2, r24	; 0x02
    3e3c:	9b 83       	std	Y+3, r25	; 0x03
    3e3e:	ac 83       	std	Y+4, r26	; 0x04
    3e40:	bd 83       	std	Y+5, r27	; 0x05
	#else
		#error "Your DOT pin has a wrong selection!"
	#endif


	for(Local_u8Iterator = 0; Local_u8Iterator < 27; Local_u8Iterator += 3)
    3e42:	19 82       	std	Y+1, r1	; 0x01
    3e44:	1e c0       	rjmp	.+60     	; 0x3e82 <SSD_enuInit+0x268>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    3e46:	89 81       	ldd	r24, Y+1	; 0x01
    3e48:	28 2f       	mov	r18, r24
    3e4a:	30 e0       	ldi	r19, 0x00	; 0
    3e4c:	8a 81       	ldd	r24, Y+2	; 0x02
    3e4e:	9b 81       	ldd	r25, Y+3	; 0x03
    3e50:	ac 81       	ldd	r26, Y+4	; 0x04
    3e52:	bd 81       	ldd	r27, Y+5	; 0x05
    3e54:	02 2e       	mov	r0, r18
    3e56:	04 c0       	rjmp	.+8      	; 0x3e60 <SSD_enuInit+0x246>
    3e58:	b6 95       	lsr	r27
    3e5a:	a7 95       	ror	r26
    3e5c:	97 95       	ror	r25
    3e5e:	87 95       	ror	r24
    3e60:	0a 94       	dec	r0
    3e62:	d2 f7       	brpl	.-12     	; 0x3e58 <SSD_enuInit+0x23e>
    3e64:	87 70       	andi	r24, 0x07	; 7
    3e66:	90 70       	andi	r25, 0x00	; 0
    3e68:	a0 70       	andi	r26, 0x00	; 0
    3e6a:	b0 70       	andi	r27, 0x00	; 0
    3e6c:	81 30       	cpi	r24, 0x01	; 1
    3e6e:	91 05       	cpc	r25, r1
    3e70:	a1 05       	cpc	r26, r1
    3e72:	b1 05       	cpc	r27, r1
    3e74:	19 f0       	breq	.+6      	; 0x3e7c <SSD_enuInit+0x262>
		{
			return Local_enuErrorState;
    3e76:	8e 81       	ldd	r24, Y+6	; 0x06
    3e78:	8f 83       	std	Y+7, r24	; 0x07
    3e7a:	0a c0       	rjmp	.+20     	; 0x3e90 <SSD_enuInit+0x276>
	#else
		#error "Your DOT pin has a wrong selection!"
	#endif


	for(Local_u8Iterator = 0; Local_u8Iterator < 27; Local_u8Iterator += 3)
    3e7c:	89 81       	ldd	r24, Y+1	; 0x01
    3e7e:	8d 5f       	subi	r24, 0xFD	; 253
    3e80:	89 83       	std	Y+1, r24	; 0x01
    3e82:	89 81       	ldd	r24, Y+1	; 0x01
    3e84:	8b 31       	cpi	r24, 0x1B	; 27
    3e86:	f8 f2       	brcs	.-66     	; 0x3e46 <SSD_enuInit+0x22c>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    3e88:	81 e0       	ldi	r24, 0x01	; 1
    3e8a:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    3e8c:	8e 81       	ldd	r24, Y+6	; 0x06
    3e8e:	8f 83       	std	Y+7, r24	; 0x07
    3e90:	8f 81       	ldd	r24, Y+7	; 0x07
}
    3e92:	27 96       	adiw	r28, 0x07	; 7
    3e94:	0f b6       	in	r0, 0x3f	; 63
    3e96:	f8 94       	cli
    3e98:	de bf       	out	0x3e, r29	; 62
    3e9a:	0f be       	out	0x3f, r0	; 63
    3e9c:	cd bf       	out	0x3d, r28	; 61
    3e9e:	cf 91       	pop	r28
    3ea0:	df 91       	pop	r29
    3ea2:	08 95       	ret

00003ea4 <SSD_enuDisplayNum>:

ES_t SSD_enuDisplayNum(u8 Copy_u8Number)
{
    3ea4:	df 93       	push	r29
    3ea6:	cf 93       	push	r28
    3ea8:	cd b7       	in	r28, 0x3d	; 61
    3eaa:	de b7       	in	r29, 0x3e	; 62
    3eac:	28 97       	sbiw	r28, 0x08	; 8
    3eae:	0f b6       	in	r0, 0x3f	; 63
    3eb0:	f8 94       	cli
    3eb2:	de bf       	out	0x3e, r29	; 62
    3eb4:	0f be       	out	0x3f, r0	; 63
    3eb6:	cd bf       	out	0x3d, r28	; 61
    3eb8:	8f 83       	std	Y+7, r24	; 0x07
	ES_t Local_enuErrorState = ES_NOK;
    3eba:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    3ebc:	1a 82       	std	Y+2, r1	; 0x02
    3ebe:	1b 82       	std	Y+3, r1	; 0x03
    3ec0:	1c 82       	std	Y+4, r1	; 0x04
    3ec2:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    3ec4:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Number < 10)
    3ec6:	8f 81       	ldd	r24, Y+7	; 0x07
    3ec8:	8a 30       	cpi	r24, 0x0A	; 10
    3eca:	08 f0       	brcs	.+2      	; 0x3ece <SSD_enuDisplayNum+0x2a>
    3ecc:	1b c1       	rjmp	.+566    	; 0x4104 <SSD_enuDisplayNum+0x260>
	{
		#if SEG_TYPE == COMMON_CATHODE
			Local_u32Check |= (DIO_enuSetPinValue(SEG_APORT, SEG_APIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 0) & 1)) << 0);
    3ece:	8f 81       	ldd	r24, Y+7	; 0x07
    3ed0:	88 2f       	mov	r24, r24
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	fc 01       	movw	r30, r24
    3ed6:	e5 55       	subi	r30, 0x55	; 85
    3ed8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eda:	80 81       	ld	r24, Z
    3edc:	98 2f       	mov	r25, r24
    3ede:	91 70       	andi	r25, 0x01	; 1
    3ee0:	80 e0       	ldi	r24, 0x00	; 0
    3ee2:	60 e0       	ldi	r22, 0x00	; 0
    3ee4:	49 2f       	mov	r20, r25
    3ee6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3eea:	28 2f       	mov	r18, r24
    3eec:	30 e0       	ldi	r19, 0x00	; 0
    3eee:	40 e0       	ldi	r20, 0x00	; 0
    3ef0:	50 e0       	ldi	r21, 0x00	; 0
    3ef2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ef4:	9b 81       	ldd	r25, Y+3	; 0x03
    3ef6:	ac 81       	ldd	r26, Y+4	; 0x04
    3ef8:	bd 81       	ldd	r27, Y+5	; 0x05
    3efa:	82 2b       	or	r24, r18
    3efc:	93 2b       	or	r25, r19
    3efe:	a4 2b       	or	r26, r20
    3f00:	b5 2b       	or	r27, r21
    3f02:	8a 83       	std	Y+2, r24	; 0x02
    3f04:	9b 83       	std	Y+3, r25	; 0x03
    3f06:	ac 83       	std	Y+4, r26	; 0x04
    3f08:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_BPORT, SEG_BPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 1) & 1)) << 3);
    3f0a:	8f 81       	ldd	r24, Y+7	; 0x07
    3f0c:	88 2f       	mov	r24, r24
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	fc 01       	movw	r30, r24
    3f12:	e5 55       	subi	r30, 0x55	; 85
    3f14:	fe 4f       	sbci	r31, 0xFE	; 254
    3f16:	80 81       	ld	r24, Z
    3f18:	86 95       	lsr	r24
    3f1a:	98 2f       	mov	r25, r24
    3f1c:	91 70       	andi	r25, 0x01	; 1
    3f1e:	80 e0       	ldi	r24, 0x00	; 0
    3f20:	61 e0       	ldi	r22, 0x01	; 1
    3f22:	49 2f       	mov	r20, r25
    3f24:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3f28:	88 2f       	mov	r24, r24
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	88 0f       	add	r24, r24
    3f2e:	99 1f       	adc	r25, r25
    3f30:	88 0f       	add	r24, r24
    3f32:	99 1f       	adc	r25, r25
    3f34:	88 0f       	add	r24, r24
    3f36:	99 1f       	adc	r25, r25
    3f38:	9c 01       	movw	r18, r24
    3f3a:	44 27       	eor	r20, r20
    3f3c:	37 fd       	sbrc	r19, 7
    3f3e:	40 95       	com	r20
    3f40:	54 2f       	mov	r21, r20
    3f42:	8a 81       	ldd	r24, Y+2	; 0x02
    3f44:	9b 81       	ldd	r25, Y+3	; 0x03
    3f46:	ac 81       	ldd	r26, Y+4	; 0x04
    3f48:	bd 81       	ldd	r27, Y+5	; 0x05
    3f4a:	82 2b       	or	r24, r18
    3f4c:	93 2b       	or	r25, r19
    3f4e:	a4 2b       	or	r26, r20
    3f50:	b5 2b       	or	r27, r21
    3f52:	8a 83       	std	Y+2, r24	; 0x02
    3f54:	9b 83       	std	Y+3, r25	; 0x03
    3f56:	ac 83       	std	Y+4, r26	; 0x04
    3f58:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_CPORT, SEG_CPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 2) & 1)) << 6);
    3f5a:	8f 81       	ldd	r24, Y+7	; 0x07
    3f5c:	88 2f       	mov	r24, r24
    3f5e:	90 e0       	ldi	r25, 0x00	; 0
    3f60:	fc 01       	movw	r30, r24
    3f62:	e5 55       	subi	r30, 0x55	; 85
    3f64:	fe 4f       	sbci	r31, 0xFE	; 254
    3f66:	80 81       	ld	r24, Z
    3f68:	86 95       	lsr	r24
    3f6a:	86 95       	lsr	r24
    3f6c:	98 2f       	mov	r25, r24
    3f6e:	91 70       	andi	r25, 0x01	; 1
    3f70:	80 e0       	ldi	r24, 0x00	; 0
    3f72:	62 e0       	ldi	r22, 0x02	; 2
    3f74:	49 2f       	mov	r20, r25
    3f76:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3f7a:	88 2f       	mov	r24, r24
    3f7c:	90 e0       	ldi	r25, 0x00	; 0
    3f7e:	00 24       	eor	r0, r0
    3f80:	96 95       	lsr	r25
    3f82:	87 95       	ror	r24
    3f84:	07 94       	ror	r0
    3f86:	96 95       	lsr	r25
    3f88:	87 95       	ror	r24
    3f8a:	07 94       	ror	r0
    3f8c:	98 2f       	mov	r25, r24
    3f8e:	80 2d       	mov	r24, r0
    3f90:	9c 01       	movw	r18, r24
    3f92:	44 27       	eor	r20, r20
    3f94:	37 fd       	sbrc	r19, 7
    3f96:	40 95       	com	r20
    3f98:	54 2f       	mov	r21, r20
    3f9a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f9c:	9b 81       	ldd	r25, Y+3	; 0x03
    3f9e:	ac 81       	ldd	r26, Y+4	; 0x04
    3fa0:	bd 81       	ldd	r27, Y+5	; 0x05
    3fa2:	82 2b       	or	r24, r18
    3fa4:	93 2b       	or	r25, r19
    3fa6:	a4 2b       	or	r26, r20
    3fa8:	b5 2b       	or	r27, r21
    3faa:	8a 83       	std	Y+2, r24	; 0x02
    3fac:	9b 83       	std	Y+3, r25	; 0x03
    3fae:	ac 83       	std	Y+4, r26	; 0x04
    3fb0:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_DPORT, SEG_DPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 3) & 1)) << 9);
    3fb2:	8f 81       	ldd	r24, Y+7	; 0x07
    3fb4:	88 2f       	mov	r24, r24
    3fb6:	90 e0       	ldi	r25, 0x00	; 0
    3fb8:	fc 01       	movw	r30, r24
    3fba:	e5 55       	subi	r30, 0x55	; 85
    3fbc:	fe 4f       	sbci	r31, 0xFE	; 254
    3fbe:	80 81       	ld	r24, Z
    3fc0:	86 95       	lsr	r24
    3fc2:	86 95       	lsr	r24
    3fc4:	86 95       	lsr	r24
    3fc6:	98 2f       	mov	r25, r24
    3fc8:	91 70       	andi	r25, 0x01	; 1
    3fca:	81 e0       	ldi	r24, 0x01	; 1
    3fcc:	60 e0       	ldi	r22, 0x00	; 0
    3fce:	49 2f       	mov	r20, r25
    3fd0:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    3fd4:	88 2f       	mov	r24, r24
    3fd6:	90 e0       	ldi	r25, 0x00	; 0
    3fd8:	98 2f       	mov	r25, r24
    3fda:	88 27       	eor	r24, r24
    3fdc:	99 0f       	add	r25, r25
    3fde:	9c 01       	movw	r18, r24
    3fe0:	44 27       	eor	r20, r20
    3fe2:	37 fd       	sbrc	r19, 7
    3fe4:	40 95       	com	r20
    3fe6:	54 2f       	mov	r21, r20
    3fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    3fea:	9b 81       	ldd	r25, Y+3	; 0x03
    3fec:	ac 81       	ldd	r26, Y+4	; 0x04
    3fee:	bd 81       	ldd	r27, Y+5	; 0x05
    3ff0:	82 2b       	or	r24, r18
    3ff2:	93 2b       	or	r25, r19
    3ff4:	a4 2b       	or	r26, r20
    3ff6:	b5 2b       	or	r27, r21
    3ff8:	8a 83       	std	Y+2, r24	; 0x02
    3ffa:	9b 83       	std	Y+3, r25	; 0x03
    3ffc:	ac 83       	std	Y+4, r26	; 0x04
    3ffe:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_EPORT, SEG_EPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 4) & 1)) << 12);
    4000:	8f 81       	ldd	r24, Y+7	; 0x07
    4002:	88 2f       	mov	r24, r24
    4004:	90 e0       	ldi	r25, 0x00	; 0
    4006:	fc 01       	movw	r30, r24
    4008:	e5 55       	subi	r30, 0x55	; 85
    400a:	fe 4f       	sbci	r31, 0xFE	; 254
    400c:	80 81       	ld	r24, Z
    400e:	82 95       	swap	r24
    4010:	8f 70       	andi	r24, 0x0F	; 15
    4012:	98 2f       	mov	r25, r24
    4014:	91 70       	andi	r25, 0x01	; 1
    4016:	81 e0       	ldi	r24, 0x01	; 1
    4018:	61 e0       	ldi	r22, 0x01	; 1
    401a:	49 2f       	mov	r20, r25
    401c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4020:	88 2f       	mov	r24, r24
    4022:	90 e0       	ldi	r25, 0x00	; 0
    4024:	98 2f       	mov	r25, r24
    4026:	88 27       	eor	r24, r24
    4028:	92 95       	swap	r25
    402a:	90 7f       	andi	r25, 0xF0	; 240
    402c:	9c 01       	movw	r18, r24
    402e:	44 27       	eor	r20, r20
    4030:	37 fd       	sbrc	r19, 7
    4032:	40 95       	com	r20
    4034:	54 2f       	mov	r21, r20
    4036:	8a 81       	ldd	r24, Y+2	; 0x02
    4038:	9b 81       	ldd	r25, Y+3	; 0x03
    403a:	ac 81       	ldd	r26, Y+4	; 0x04
    403c:	bd 81       	ldd	r27, Y+5	; 0x05
    403e:	82 2b       	or	r24, r18
    4040:	93 2b       	or	r25, r19
    4042:	a4 2b       	or	r26, r20
    4044:	b5 2b       	or	r27, r21
    4046:	8a 83       	std	Y+2, r24	; 0x02
    4048:	9b 83       	std	Y+3, r25	; 0x03
    404a:	ac 83       	std	Y+4, r26	; 0x04
    404c:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_FPORT, SEG_FPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 5) & 1))) << 15);
    404e:	8f 81       	ldd	r24, Y+7	; 0x07
    4050:	88 2f       	mov	r24, r24
    4052:	90 e0       	ldi	r25, 0x00	; 0
    4054:	fc 01       	movw	r30, r24
    4056:	e5 55       	subi	r30, 0x55	; 85
    4058:	fe 4f       	sbci	r31, 0xFE	; 254
    405a:	80 81       	ld	r24, Z
    405c:	82 95       	swap	r24
    405e:	86 95       	lsr	r24
    4060:	87 70       	andi	r24, 0x07	; 7
    4062:	98 2f       	mov	r25, r24
    4064:	91 70       	andi	r25, 0x01	; 1
    4066:	81 e0       	ldi	r24, 0x01	; 1
    4068:	62 e0       	ldi	r22, 0x02	; 2
    406a:	49 2f       	mov	r20, r25
    406c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4070:	88 2f       	mov	r24, r24
    4072:	90 e0       	ldi	r25, 0x00	; 0
    4074:	a0 e0       	ldi	r26, 0x00	; 0
    4076:	b0 e0       	ldi	r27, 0x00	; 0
    4078:	9c 01       	movw	r18, r24
    407a:	ad 01       	movw	r20, r26
    407c:	01 2e       	mov	r0, r17
    407e:	1f e0       	ldi	r17, 0x0F	; 15
    4080:	22 0f       	add	r18, r18
    4082:	33 1f       	adc	r19, r19
    4084:	44 1f       	adc	r20, r20
    4086:	55 1f       	adc	r21, r21
    4088:	1a 95       	dec	r17
    408a:	d1 f7       	brne	.-12     	; 0x4080 <SSD_enuDisplayNum+0x1dc>
    408c:	10 2d       	mov	r17, r0
    408e:	8a 81       	ldd	r24, Y+2	; 0x02
    4090:	9b 81       	ldd	r25, Y+3	; 0x03
    4092:	ac 81       	ldd	r26, Y+4	; 0x04
    4094:	bd 81       	ldd	r27, Y+5	; 0x05
    4096:	82 2b       	or	r24, r18
    4098:	93 2b       	or	r25, r19
    409a:	a4 2b       	or	r26, r20
    409c:	b5 2b       	or	r27, r21
    409e:	8a 83       	std	Y+2, r24	; 0x02
    40a0:	9b 83       	std	Y+3, r25	; 0x03
    40a2:	ac 83       	std	Y+4, r26	; 0x04
    40a4:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 6) & 1))) << 18);
    40a6:	8f 81       	ldd	r24, Y+7	; 0x07
    40a8:	88 2f       	mov	r24, r24
    40aa:	90 e0       	ldi	r25, 0x00	; 0
    40ac:	fc 01       	movw	r30, r24
    40ae:	e5 55       	subi	r30, 0x55	; 85
    40b0:	fe 4f       	sbci	r31, 0xFE	; 254
    40b2:	80 81       	ld	r24, Z
    40b4:	82 95       	swap	r24
    40b6:	86 95       	lsr	r24
    40b8:	86 95       	lsr	r24
    40ba:	83 70       	andi	r24, 0x03	; 3
    40bc:	98 2f       	mov	r25, r24
    40be:	91 70       	andi	r25, 0x01	; 1
    40c0:	81 e0       	ldi	r24, 0x01	; 1
    40c2:	63 e0       	ldi	r22, 0x03	; 3
    40c4:	49 2f       	mov	r20, r25
    40c6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    40ca:	88 2f       	mov	r24, r24
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	a0 e0       	ldi	r26, 0x00	; 0
    40d0:	b0 e0       	ldi	r27, 0x00	; 0
    40d2:	9c 01       	movw	r18, r24
    40d4:	ad 01       	movw	r20, r26
    40d6:	01 2e       	mov	r0, r17
    40d8:	12 e1       	ldi	r17, 0x12	; 18
    40da:	22 0f       	add	r18, r18
    40dc:	33 1f       	adc	r19, r19
    40de:	44 1f       	adc	r20, r20
    40e0:	55 1f       	adc	r21, r21
    40e2:	1a 95       	dec	r17
    40e4:	d1 f7       	brne	.-12     	; 0x40da <SSD_enuDisplayNum+0x236>
    40e6:	10 2d       	mov	r17, r0
    40e8:	8a 81       	ldd	r24, Y+2	; 0x02
    40ea:	9b 81       	ldd	r25, Y+3	; 0x03
    40ec:	ac 81       	ldd	r26, Y+4	; 0x04
    40ee:	bd 81       	ldd	r27, Y+5	; 0x05
    40f0:	82 2b       	or	r24, r18
    40f2:	93 2b       	or	r25, r19
    40f4:	a4 2b       	or	r26, r20
    40f6:	b5 2b       	or	r27, r21
    40f8:	8a 83       	std	Y+2, r24	; 0x02
    40fa:	9b 83       	std	Y+3, r25	; 0x03
    40fc:	ac 83       	std	Y+4, r26	; 0x04
    40fe:	bd 83       	std	Y+5, r27	; 0x05
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    4100:	19 82       	std	Y+1, r1	; 0x01
    4102:	21 c0       	rjmp	.+66     	; 0x4146 <SSD_enuDisplayNum+0x2a2>
			#error "Your type selection is invalid!"
		#endif
	}
	else
	{
		return ES_OUT_OF_RANGE;
    4104:	83 e0       	ldi	r24, 0x03	; 3
    4106:	88 87       	std	Y+8, r24	; 0x08
    4108:	25 c0       	rjmp	.+74     	; 0x4154 <SSD_enuDisplayNum+0x2b0>
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    410a:	89 81       	ldd	r24, Y+1	; 0x01
    410c:	28 2f       	mov	r18, r24
    410e:	30 e0       	ldi	r19, 0x00	; 0
    4110:	8a 81       	ldd	r24, Y+2	; 0x02
    4112:	9b 81       	ldd	r25, Y+3	; 0x03
    4114:	ac 81       	ldd	r26, Y+4	; 0x04
    4116:	bd 81       	ldd	r27, Y+5	; 0x05
    4118:	02 2e       	mov	r0, r18
    411a:	04 c0       	rjmp	.+8      	; 0x4124 <SSD_enuDisplayNum+0x280>
    411c:	b6 95       	lsr	r27
    411e:	a7 95       	ror	r26
    4120:	97 95       	ror	r25
    4122:	87 95       	ror	r24
    4124:	0a 94       	dec	r0
    4126:	d2 f7       	brpl	.-12     	; 0x411c <SSD_enuDisplayNum+0x278>
    4128:	87 70       	andi	r24, 0x07	; 7
    412a:	90 70       	andi	r25, 0x00	; 0
    412c:	a0 70       	andi	r26, 0x00	; 0
    412e:	b0 70       	andi	r27, 0x00	; 0
    4130:	81 30       	cpi	r24, 0x01	; 1
    4132:	91 05       	cpc	r25, r1
    4134:	a1 05       	cpc	r26, r1
    4136:	b1 05       	cpc	r27, r1
    4138:	19 f0       	breq	.+6      	; 0x4140 <SSD_enuDisplayNum+0x29c>
		{
			return Local_enuErrorState;
    413a:	8e 81       	ldd	r24, Y+6	; 0x06
    413c:	88 87       	std	Y+8, r24	; 0x08
    413e:	0a c0       	rjmp	.+20     	; 0x4154 <SSD_enuDisplayNum+0x2b0>
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    4140:	89 81       	ldd	r24, Y+1	; 0x01
    4142:	8d 5f       	subi	r24, 0xFD	; 253
    4144:	89 83       	std	Y+1, r24	; 0x01
    4146:	89 81       	ldd	r24, Y+1	; 0x01
    4148:	85 31       	cpi	r24, 0x15	; 21
    414a:	f8 f2       	brcs	.-66     	; 0x410a <SSD_enuDisplayNum+0x266>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    414c:	81 e0       	ldi	r24, 0x01	; 1
    414e:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    4150:	8e 81       	ldd	r24, Y+6	; 0x06
    4152:	88 87       	std	Y+8, r24	; 0x08
    4154:	88 85       	ldd	r24, Y+8	; 0x08
}
    4156:	28 96       	adiw	r28, 0x08	; 8
    4158:	0f b6       	in	r0, 0x3f	; 63
    415a:	f8 94       	cli
    415c:	de bf       	out	0x3e, r29	; 62
    415e:	0f be       	out	0x3f, r0	; 63
    4160:	cd bf       	out	0x3d, r28	; 61
    4162:	cf 91       	pop	r28
    4164:	df 91       	pop	r29
    4166:	08 95       	ret

00004168 <SSD_enuEnableCommon>:

ES_t SSD_enuEnableCommon(void)
{
    4168:	df 93       	push	r29
    416a:	cf 93       	push	r28
    416c:	0f 92       	push	r0
    416e:	cd b7       	in	r28, 0x3d	; 61
    4170:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    4172:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8LOW);
    4174:	82 e0       	ldi	r24, 0x02	; 2
    4176:	62 e0       	ldi	r22, 0x02	; 2
    4178:	40 e0       	ldi	r20, 0x00	; 0
    417a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    417e:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    4180:	89 81       	ldd	r24, Y+1	; 0x01
}
    4182:	0f 90       	pop	r0
    4184:	cf 91       	pop	r28
    4186:	df 91       	pop	r29
    4188:	08 95       	ret

0000418a <SSD_enuDisableCommon>:

ES_t SSD_enuDisableCommon(void)
{
    418a:	df 93       	push	r29
    418c:	cf 93       	push	r28
    418e:	0f 92       	push	r0
    4190:	cd b7       	in	r28, 0x3d	; 61
    4192:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    4194:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8HIGH);
    4196:	82 e0       	ldi	r24, 0x02	; 2
    4198:	62 e0       	ldi	r22, 0x02	; 2
    419a:	41 e0       	ldi	r20, 0x01	; 1
    419c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    41a0:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    41a2:	89 81       	ldd	r24, Y+1	; 0x01
}
    41a4:	0f 90       	pop	r0
    41a6:	cf 91       	pop	r28
    41a8:	df 91       	pop	r29
    41aa:	08 95       	ret

000041ac <SSD_enuEnableDot>:

ES_t SSD_enuEnableDot(void)
{
    41ac:	df 93       	push	r29
    41ae:	cf 93       	push	r28
    41b0:	0f 92       	push	r0
    41b2:	cd b7       	in	r28, 0x3d	; 61
    41b4:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    41b6:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8HIGH);
    41b8:	82 e0       	ldi	r24, 0x02	; 2
    41ba:	62 e0       	ldi	r22, 0x02	; 2
    41bc:	41 e0       	ldi	r20, 0x01	; 1
    41be:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    41c2:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your DOT pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    41c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    41c6:	0f 90       	pop	r0
    41c8:	cf 91       	pop	r28
    41ca:	df 91       	pop	r29
    41cc:	08 95       	ret

000041ce <SSD_enuDisableDot>:

ES_t SSD_enuDisableDot(void)
{
    41ce:	df 93       	push	r29
    41d0:	cf 93       	push	r28
    41d2:	0f 92       	push	r0
    41d4:	cd b7       	in	r28, 0x3d	; 61
    41d6:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    41d8:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8LOW);
    41da:	82 e0       	ldi	r24, 0x02	; 2
    41dc:	62 e0       	ldi	r22, 0x02	; 2
    41de:	40 e0       	ldi	r20, 0x00	; 0
    41e0:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    41e4:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your DOT pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    41e6:	89 81       	ldd	r24, Y+1	; 0x01
}
    41e8:	0f 90       	pop	r0
    41ea:	cf 91       	pop	r28
    41ec:	df 91       	pop	r29
    41ee:	08 95       	ret

000041f0 <SSD_enuClearDisplay>:

ES_t SSD_enuClearDisplay(void)
{
    41f0:	df 93       	push	r29
    41f2:	cf 93       	push	r28
    41f4:	cd b7       	in	r28, 0x3d	; 61
    41f6:	de b7       	in	r29, 0x3e	; 62
    41f8:	27 97       	sbiw	r28, 0x07	; 7
    41fa:	0f b6       	in	r0, 0x3f	; 63
    41fc:	f8 94       	cli
    41fe:	de bf       	out	0x3e, r29	; 62
    4200:	0f be       	out	0x3f, r0	; 63
    4202:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    4204:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    4206:	1a 82       	std	Y+2, r1	; 0x02
    4208:	1b 82       	std	Y+3, r1	; 0x03
    420a:	1c 82       	std	Y+4, r1	; 0x04
    420c:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    420e:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_TYPE == COMMON_CATHODE
		Local_u32Check |= (DIO_enuSetPinValue(SEG_APORT, SEG_APIN,DIO_u8LOW) << 0);
    4210:	80 e0       	ldi	r24, 0x00	; 0
    4212:	60 e0       	ldi	r22, 0x00	; 0
    4214:	40 e0       	ldi	r20, 0x00	; 0
    4216:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    421a:	28 2f       	mov	r18, r24
    421c:	30 e0       	ldi	r19, 0x00	; 0
    421e:	40 e0       	ldi	r20, 0x00	; 0
    4220:	50 e0       	ldi	r21, 0x00	; 0
    4222:	8a 81       	ldd	r24, Y+2	; 0x02
    4224:	9b 81       	ldd	r25, Y+3	; 0x03
    4226:	ac 81       	ldd	r26, Y+4	; 0x04
    4228:	bd 81       	ldd	r27, Y+5	; 0x05
    422a:	82 2b       	or	r24, r18
    422c:	93 2b       	or	r25, r19
    422e:	a4 2b       	or	r26, r20
    4230:	b5 2b       	or	r27, r21
    4232:	8a 83       	std	Y+2, r24	; 0x02
    4234:	9b 83       	std	Y+3, r25	; 0x03
    4236:	ac 83       	std	Y+4, r26	; 0x04
    4238:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_BPORT, SEG_BPIN,DIO_u8LOW) << 3);
    423a:	80 e0       	ldi	r24, 0x00	; 0
    423c:	61 e0       	ldi	r22, 0x01	; 1
    423e:	40 e0       	ldi	r20, 0x00	; 0
    4240:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4244:	88 2f       	mov	r24, r24
    4246:	90 e0       	ldi	r25, 0x00	; 0
    4248:	88 0f       	add	r24, r24
    424a:	99 1f       	adc	r25, r25
    424c:	88 0f       	add	r24, r24
    424e:	99 1f       	adc	r25, r25
    4250:	88 0f       	add	r24, r24
    4252:	99 1f       	adc	r25, r25
    4254:	9c 01       	movw	r18, r24
    4256:	44 27       	eor	r20, r20
    4258:	37 fd       	sbrc	r19, 7
    425a:	40 95       	com	r20
    425c:	54 2f       	mov	r21, r20
    425e:	8a 81       	ldd	r24, Y+2	; 0x02
    4260:	9b 81       	ldd	r25, Y+3	; 0x03
    4262:	ac 81       	ldd	r26, Y+4	; 0x04
    4264:	bd 81       	ldd	r27, Y+5	; 0x05
    4266:	82 2b       	or	r24, r18
    4268:	93 2b       	or	r25, r19
    426a:	a4 2b       	or	r26, r20
    426c:	b5 2b       	or	r27, r21
    426e:	8a 83       	std	Y+2, r24	; 0x02
    4270:	9b 83       	std	Y+3, r25	; 0x03
    4272:	ac 83       	std	Y+4, r26	; 0x04
    4274:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_CPORT, SEG_CPIN,DIO_u8LOW) << 6);
    4276:	80 e0       	ldi	r24, 0x00	; 0
    4278:	62 e0       	ldi	r22, 0x02	; 2
    427a:	40 e0       	ldi	r20, 0x00	; 0
    427c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4280:	88 2f       	mov	r24, r24
    4282:	90 e0       	ldi	r25, 0x00	; 0
    4284:	00 24       	eor	r0, r0
    4286:	96 95       	lsr	r25
    4288:	87 95       	ror	r24
    428a:	07 94       	ror	r0
    428c:	96 95       	lsr	r25
    428e:	87 95       	ror	r24
    4290:	07 94       	ror	r0
    4292:	98 2f       	mov	r25, r24
    4294:	80 2d       	mov	r24, r0
    4296:	9c 01       	movw	r18, r24
    4298:	44 27       	eor	r20, r20
    429a:	37 fd       	sbrc	r19, 7
    429c:	40 95       	com	r20
    429e:	54 2f       	mov	r21, r20
    42a0:	8a 81       	ldd	r24, Y+2	; 0x02
    42a2:	9b 81       	ldd	r25, Y+3	; 0x03
    42a4:	ac 81       	ldd	r26, Y+4	; 0x04
    42a6:	bd 81       	ldd	r27, Y+5	; 0x05
    42a8:	82 2b       	or	r24, r18
    42aa:	93 2b       	or	r25, r19
    42ac:	a4 2b       	or	r26, r20
    42ae:	b5 2b       	or	r27, r21
    42b0:	8a 83       	std	Y+2, r24	; 0x02
    42b2:	9b 83       	std	Y+3, r25	; 0x03
    42b4:	ac 83       	std	Y+4, r26	; 0x04
    42b6:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_DPORT, SEG_DPIN,DIO_u8LOW) << 9);
    42b8:	81 e0       	ldi	r24, 0x01	; 1
    42ba:	60 e0       	ldi	r22, 0x00	; 0
    42bc:	40 e0       	ldi	r20, 0x00	; 0
    42be:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    42c2:	88 2f       	mov	r24, r24
    42c4:	90 e0       	ldi	r25, 0x00	; 0
    42c6:	98 2f       	mov	r25, r24
    42c8:	88 27       	eor	r24, r24
    42ca:	99 0f       	add	r25, r25
    42cc:	9c 01       	movw	r18, r24
    42ce:	44 27       	eor	r20, r20
    42d0:	37 fd       	sbrc	r19, 7
    42d2:	40 95       	com	r20
    42d4:	54 2f       	mov	r21, r20
    42d6:	8a 81       	ldd	r24, Y+2	; 0x02
    42d8:	9b 81       	ldd	r25, Y+3	; 0x03
    42da:	ac 81       	ldd	r26, Y+4	; 0x04
    42dc:	bd 81       	ldd	r27, Y+5	; 0x05
    42de:	82 2b       	or	r24, r18
    42e0:	93 2b       	or	r25, r19
    42e2:	a4 2b       	or	r26, r20
    42e4:	b5 2b       	or	r27, r21
    42e6:	8a 83       	std	Y+2, r24	; 0x02
    42e8:	9b 83       	std	Y+3, r25	; 0x03
    42ea:	ac 83       	std	Y+4, r26	; 0x04
    42ec:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_EPORT, SEG_EPIN,DIO_u8LOW) << 12);
    42ee:	81 e0       	ldi	r24, 0x01	; 1
    42f0:	61 e0       	ldi	r22, 0x01	; 1
    42f2:	40 e0       	ldi	r20, 0x00	; 0
    42f4:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    42f8:	88 2f       	mov	r24, r24
    42fa:	90 e0       	ldi	r25, 0x00	; 0
    42fc:	98 2f       	mov	r25, r24
    42fe:	88 27       	eor	r24, r24
    4300:	92 95       	swap	r25
    4302:	90 7f       	andi	r25, 0xF0	; 240
    4304:	9c 01       	movw	r18, r24
    4306:	44 27       	eor	r20, r20
    4308:	37 fd       	sbrc	r19, 7
    430a:	40 95       	com	r20
    430c:	54 2f       	mov	r21, r20
    430e:	8a 81       	ldd	r24, Y+2	; 0x02
    4310:	9b 81       	ldd	r25, Y+3	; 0x03
    4312:	ac 81       	ldd	r26, Y+4	; 0x04
    4314:	bd 81       	ldd	r27, Y+5	; 0x05
    4316:	82 2b       	or	r24, r18
    4318:	93 2b       	or	r25, r19
    431a:	a4 2b       	or	r26, r20
    431c:	b5 2b       	or	r27, r21
    431e:	8a 83       	std	Y+2, r24	; 0x02
    4320:	9b 83       	std	Y+3, r25	; 0x03
    4322:	ac 83       	std	Y+4, r26	; 0x04
    4324:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_FPORT, SEG_FPIN,DIO_u8LOW)) << 15);
    4326:	81 e0       	ldi	r24, 0x01	; 1
    4328:	62 e0       	ldi	r22, 0x02	; 2
    432a:	40 e0       	ldi	r20, 0x00	; 0
    432c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4330:	88 2f       	mov	r24, r24
    4332:	90 e0       	ldi	r25, 0x00	; 0
    4334:	a0 e0       	ldi	r26, 0x00	; 0
    4336:	b0 e0       	ldi	r27, 0x00	; 0
    4338:	9c 01       	movw	r18, r24
    433a:	ad 01       	movw	r20, r26
    433c:	01 2e       	mov	r0, r17
    433e:	1f e0       	ldi	r17, 0x0F	; 15
    4340:	22 0f       	add	r18, r18
    4342:	33 1f       	adc	r19, r19
    4344:	44 1f       	adc	r20, r20
    4346:	55 1f       	adc	r21, r21
    4348:	1a 95       	dec	r17
    434a:	d1 f7       	brne	.-12     	; 0x4340 <SSD_enuClearDisplay+0x150>
    434c:	10 2d       	mov	r17, r0
    434e:	8a 81       	ldd	r24, Y+2	; 0x02
    4350:	9b 81       	ldd	r25, Y+3	; 0x03
    4352:	ac 81       	ldd	r26, Y+4	; 0x04
    4354:	bd 81       	ldd	r27, Y+5	; 0x05
    4356:	82 2b       	or	r24, r18
    4358:	93 2b       	or	r25, r19
    435a:	a4 2b       	or	r26, r20
    435c:	b5 2b       	or	r27, r21
    435e:	8a 83       	std	Y+2, r24	; 0x02
    4360:	9b 83       	std	Y+3, r25	; 0x03
    4362:	ac 83       	std	Y+4, r26	; 0x04
    4364:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8LOW)) << 18);
    4366:	81 e0       	ldi	r24, 0x01	; 1
    4368:	63 e0       	ldi	r22, 0x03	; 3
    436a:	40 e0       	ldi	r20, 0x00	; 0
    436c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4370:	88 2f       	mov	r24, r24
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	a0 e0       	ldi	r26, 0x00	; 0
    4376:	b0 e0       	ldi	r27, 0x00	; 0
    4378:	9c 01       	movw	r18, r24
    437a:	ad 01       	movw	r20, r26
    437c:	01 2e       	mov	r0, r17
    437e:	12 e1       	ldi	r17, 0x12	; 18
    4380:	22 0f       	add	r18, r18
    4382:	33 1f       	adc	r19, r19
    4384:	44 1f       	adc	r20, r20
    4386:	55 1f       	adc	r21, r21
    4388:	1a 95       	dec	r17
    438a:	d1 f7       	brne	.-12     	; 0x4380 <SSD_enuClearDisplay+0x190>
    438c:	10 2d       	mov	r17, r0
    438e:	8a 81       	ldd	r24, Y+2	; 0x02
    4390:	9b 81       	ldd	r25, Y+3	; 0x03
    4392:	ac 81       	ldd	r26, Y+4	; 0x04
    4394:	bd 81       	ldd	r27, Y+5	; 0x05
    4396:	82 2b       	or	r24, r18
    4398:	93 2b       	or	r25, r19
    439a:	a4 2b       	or	r26, r20
    439c:	b5 2b       	or	r27, r21
    439e:	8a 83       	std	Y+2, r24	; 0x02
    43a0:	9b 83       	std	Y+3, r25	; 0x03
    43a2:	ac 83       	std	Y+4, r26	; 0x04
    43a4:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8HIGH)) << 18);
	#else
		#error "Your type selection is invalid!"
	#endif

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    43a6:	19 82       	std	Y+1, r1	; 0x01
    43a8:	1e c0       	rjmp	.+60     	; 0x43e6 <SSD_enuClearDisplay+0x1f6>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    43aa:	89 81       	ldd	r24, Y+1	; 0x01
    43ac:	28 2f       	mov	r18, r24
    43ae:	30 e0       	ldi	r19, 0x00	; 0
    43b0:	8a 81       	ldd	r24, Y+2	; 0x02
    43b2:	9b 81       	ldd	r25, Y+3	; 0x03
    43b4:	ac 81       	ldd	r26, Y+4	; 0x04
    43b6:	bd 81       	ldd	r27, Y+5	; 0x05
    43b8:	02 2e       	mov	r0, r18
    43ba:	04 c0       	rjmp	.+8      	; 0x43c4 <SSD_enuClearDisplay+0x1d4>
    43bc:	b6 95       	lsr	r27
    43be:	a7 95       	ror	r26
    43c0:	97 95       	ror	r25
    43c2:	87 95       	ror	r24
    43c4:	0a 94       	dec	r0
    43c6:	d2 f7       	brpl	.-12     	; 0x43bc <SSD_enuClearDisplay+0x1cc>
    43c8:	87 70       	andi	r24, 0x07	; 7
    43ca:	90 70       	andi	r25, 0x00	; 0
    43cc:	a0 70       	andi	r26, 0x00	; 0
    43ce:	b0 70       	andi	r27, 0x00	; 0
    43d0:	81 30       	cpi	r24, 0x01	; 1
    43d2:	91 05       	cpc	r25, r1
    43d4:	a1 05       	cpc	r26, r1
    43d6:	b1 05       	cpc	r27, r1
    43d8:	19 f0       	breq	.+6      	; 0x43e0 <SSD_enuClearDisplay+0x1f0>
		{
			return Local_enuErrorState;
    43da:	8e 81       	ldd	r24, Y+6	; 0x06
    43dc:	8f 83       	std	Y+7, r24	; 0x07
    43de:	0a c0       	rjmp	.+20     	; 0x43f4 <SSD_enuClearDisplay+0x204>
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8HIGH)) << 18);
	#else
		#error "Your type selection is invalid!"
	#endif

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    43e0:	89 81       	ldd	r24, Y+1	; 0x01
    43e2:	8d 5f       	subi	r24, 0xFD	; 253
    43e4:	89 83       	std	Y+1, r24	; 0x01
    43e6:	89 81       	ldd	r24, Y+1	; 0x01
    43e8:	85 31       	cpi	r24, 0x15	; 21
    43ea:	f8 f2       	brcs	.-66     	; 0x43aa <SSD_enuClearDisplay+0x1ba>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    43ec:	81 e0       	ldi	r24, 0x01	; 1
    43ee:	8e 83       	std	Y+6, r24	; 0x06
	return Local_enuErrorState;
    43f0:	8e 81       	ldd	r24, Y+6	; 0x06
    43f2:	8f 83       	std	Y+7, r24	; 0x07
    43f4:	8f 81       	ldd	r24, Y+7	; 0x07
}
    43f6:	27 96       	adiw	r28, 0x07	; 7
    43f8:	0f b6       	in	r0, 0x3f	; 63
    43fa:	f8 94       	cli
    43fc:	de bf       	out	0x3e, r29	; 62
    43fe:	0f be       	out	0x3f, r0	; 63
    4400:	cd bf       	out	0x3d, r28	; 61
    4402:	cf 91       	pop	r28
    4404:	df 91       	pop	r29
    4406:	08 95       	ret

00004408 <LED_enuInit>:
#include "LED_private.h"
#include "LED_config.h"
/***********************	Includes Section End	***********************/

ES_t LED_enuInit(LED_t * Copy_pstrLedConfiguration)
{
    4408:	df 93       	push	r29
    440a:	cf 93       	push	r28
    440c:	00 d0       	rcall	.+0      	; 0x440e <LED_enuInit+0x6>
    440e:	00 d0       	rcall	.+0      	; 0x4410 <LED_enuInit+0x8>
    4410:	0f 92       	push	r0
    4412:	cd b7       	in	r28, 0x3d	; 61
    4414:	de b7       	in	r29, 0x3e	; 62
    4416:	9c 83       	std	Y+4, r25	; 0x04
    4418:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    441a:	1a 82       	std	Y+2, r1	; 0x02

	if(Copy_pstrLedConfiguration != NULL)
    441c:	8b 81       	ldd	r24, Y+3	; 0x03
    441e:	9c 81       	ldd	r25, Y+4	; 0x04
    4420:	00 97       	sbiw	r24, 0x00	; 0
    4422:	09 f4       	brne	.+2      	; 0x4426 <LED_enuInit+0x1e>
    4424:	24 c1       	rjmp	.+584    	; 0x466e <LED_enuInit+0x266>
	{
		u8 Local_u8Iterator = 0;
    4426:	19 82       	std	Y+1, r1	; 0x01

		for(Local_u8Iterator = 0; Local_u8Iterator < LED_NUM; Local_u8Iterator++)
    4428:	19 82       	std	Y+1, r1	; 0x01
    442a:	1c c1       	rjmp	.+568    	; 0x4664 <LED_enuInit+0x25c>
		{
			Local_enuErrorState = DIO_enuSetPinDirection(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    442c:	89 81       	ldd	r24, Y+1	; 0x01
    442e:	88 2f       	mov	r24, r24
    4430:	90 e0       	ldi	r25, 0x00	; 0
    4432:	9c 01       	movw	r18, r24
    4434:	22 0f       	add	r18, r18
    4436:	33 1f       	adc	r19, r19
    4438:	22 0f       	add	r18, r18
    443a:	33 1f       	adc	r19, r19
    443c:	8b 81       	ldd	r24, Y+3	; 0x03
    443e:	9c 81       	ldd	r25, Y+4	; 0x04
    4440:	fc 01       	movw	r30, r24
    4442:	e2 0f       	add	r30, r18
    4444:	f3 1f       	adc	r31, r19
    4446:	40 81       	ld	r20, Z
    4448:	89 81       	ldd	r24, Y+1	; 0x01
    444a:	88 2f       	mov	r24, r24
    444c:	90 e0       	ldi	r25, 0x00	; 0
    444e:	9c 01       	movw	r18, r24
    4450:	22 0f       	add	r18, r18
    4452:	33 1f       	adc	r19, r19
    4454:	22 0f       	add	r18, r18
    4456:	33 1f       	adc	r19, r19
    4458:	8b 81       	ldd	r24, Y+3	; 0x03
    445a:	9c 81       	ldd	r25, Y+4	; 0x04
    445c:	fc 01       	movw	r30, r24
    445e:	e2 0f       	add	r30, r18
    4460:	f3 1f       	adc	r31, r19
    4462:	91 81       	ldd	r25, Z+1	; 0x01
    4464:	84 2f       	mov	r24, r20
    4466:	69 2f       	mov	r22, r25
    4468:	41 e0       	ldi	r20, 0x01	; 1
    446a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    446e:	8a 83       	std	Y+2, r24	; 0x02
														 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
														 DIO_u8OUTPUT
														);

			if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8Connection == LED_u8SINK)
    4470:	89 81       	ldd	r24, Y+1	; 0x01
    4472:	88 2f       	mov	r24, r24
    4474:	90 e0       	ldi	r25, 0x00	; 0
    4476:	9c 01       	movw	r18, r24
    4478:	22 0f       	add	r18, r18
    447a:	33 1f       	adc	r19, r19
    447c:	22 0f       	add	r18, r18
    447e:	33 1f       	adc	r19, r19
    4480:	8b 81       	ldd	r24, Y+3	; 0x03
    4482:	9c 81       	ldd	r25, Y+4	; 0x04
    4484:	fc 01       	movw	r30, r24
    4486:	e2 0f       	add	r30, r18
    4488:	f3 1f       	adc	r31, r19
    448a:	82 81       	ldd	r24, Z+2	; 0x02
    448c:	88 30       	cpi	r24, 0x08	; 8
    448e:	09 f0       	breq	.+2      	; 0x4492 <LED_enuInit+0x8a>
    4490:	69 c0       	rjmp	.+210    	; 0x4564 <LED_enuInit+0x15c>
			{
				if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8ON)
    4492:	89 81       	ldd	r24, Y+1	; 0x01
    4494:	88 2f       	mov	r24, r24
    4496:	90 e0       	ldi	r25, 0x00	; 0
    4498:	9c 01       	movw	r18, r24
    449a:	22 0f       	add	r18, r18
    449c:	33 1f       	adc	r19, r19
    449e:	22 0f       	add	r18, r18
    44a0:	33 1f       	adc	r19, r19
    44a2:	8b 81       	ldd	r24, Y+3	; 0x03
    44a4:	9c 81       	ldd	r25, Y+4	; 0x04
    44a6:	fc 01       	movw	r30, r24
    44a8:	e2 0f       	add	r30, r18
    44aa:	f3 1f       	adc	r31, r19
    44ac:	83 81       	ldd	r24, Z+3	; 0x03
    44ae:	8a 30       	cpi	r24, 0x0A	; 10
    44b0:	19 f5       	brne	.+70     	; 0x44f8 <LED_enuInit+0xf0>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    44b2:	89 81       	ldd	r24, Y+1	; 0x01
    44b4:	88 2f       	mov	r24, r24
    44b6:	90 e0       	ldi	r25, 0x00	; 0
    44b8:	9c 01       	movw	r18, r24
    44ba:	22 0f       	add	r18, r18
    44bc:	33 1f       	adc	r19, r19
    44be:	22 0f       	add	r18, r18
    44c0:	33 1f       	adc	r19, r19
    44c2:	8b 81       	ldd	r24, Y+3	; 0x03
    44c4:	9c 81       	ldd	r25, Y+4	; 0x04
    44c6:	fc 01       	movw	r30, r24
    44c8:	e2 0f       	add	r30, r18
    44ca:	f3 1f       	adc	r31, r19
    44cc:	40 81       	ld	r20, Z
    44ce:	89 81       	ldd	r24, Y+1	; 0x01
    44d0:	88 2f       	mov	r24, r24
    44d2:	90 e0       	ldi	r25, 0x00	; 0
    44d4:	9c 01       	movw	r18, r24
    44d6:	22 0f       	add	r18, r18
    44d8:	33 1f       	adc	r19, r19
    44da:	22 0f       	add	r18, r18
    44dc:	33 1f       	adc	r19, r19
    44de:	8b 81       	ldd	r24, Y+3	; 0x03
    44e0:	9c 81       	ldd	r25, Y+4	; 0x04
    44e2:	fc 01       	movw	r30, r24
    44e4:	e2 0f       	add	r30, r18
    44e6:	f3 1f       	adc	r31, r19
    44e8:	91 81       	ldd	r25, Z+1	; 0x01
    44ea:	84 2f       	mov	r24, r20
    44ec:	69 2f       	mov	r22, r25
    44ee:	40 e0       	ldi	r20, 0x00	; 0
    44f0:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    44f4:	8a 83       	std	Y+2, r24	; 0x02
    44f6:	b3 c0       	rjmp	.+358    	; 0x465e <LED_enuInit+0x256>
							           	   	   	   	   	     Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8LOW);

				}
				else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8OFF)
    44f8:	89 81       	ldd	r24, Y+1	; 0x01
    44fa:	88 2f       	mov	r24, r24
    44fc:	90 e0       	ldi	r25, 0x00	; 0
    44fe:	9c 01       	movw	r18, r24
    4500:	22 0f       	add	r18, r18
    4502:	33 1f       	adc	r19, r19
    4504:	22 0f       	add	r18, r18
    4506:	33 1f       	adc	r19, r19
    4508:	8b 81       	ldd	r24, Y+3	; 0x03
    450a:	9c 81       	ldd	r25, Y+4	; 0x04
    450c:	fc 01       	movw	r30, r24
    450e:	e2 0f       	add	r30, r18
    4510:	f3 1f       	adc	r31, r19
    4512:	83 81       	ldd	r24, Z+3	; 0x03
    4514:	8b 30       	cpi	r24, 0x0B	; 11
    4516:	19 f5       	brne	.+70     	; 0x455e <LED_enuInit+0x156>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    4518:	89 81       	ldd	r24, Y+1	; 0x01
    451a:	88 2f       	mov	r24, r24
    451c:	90 e0       	ldi	r25, 0x00	; 0
    451e:	9c 01       	movw	r18, r24
    4520:	22 0f       	add	r18, r18
    4522:	33 1f       	adc	r19, r19
    4524:	22 0f       	add	r18, r18
    4526:	33 1f       	adc	r19, r19
    4528:	8b 81       	ldd	r24, Y+3	; 0x03
    452a:	9c 81       	ldd	r25, Y+4	; 0x04
    452c:	fc 01       	movw	r30, r24
    452e:	e2 0f       	add	r30, r18
    4530:	f3 1f       	adc	r31, r19
    4532:	40 81       	ld	r20, Z
    4534:	89 81       	ldd	r24, Y+1	; 0x01
    4536:	88 2f       	mov	r24, r24
    4538:	90 e0       	ldi	r25, 0x00	; 0
    453a:	9c 01       	movw	r18, r24
    453c:	22 0f       	add	r18, r18
    453e:	33 1f       	adc	r19, r19
    4540:	22 0f       	add	r18, r18
    4542:	33 1f       	adc	r19, r19
    4544:	8b 81       	ldd	r24, Y+3	; 0x03
    4546:	9c 81       	ldd	r25, Y+4	; 0x04
    4548:	fc 01       	movw	r30, r24
    454a:	e2 0f       	add	r30, r18
    454c:	f3 1f       	adc	r31, r19
    454e:	91 81       	ldd	r25, Z+1	; 0x01
    4550:	84 2f       	mov	r24, r20
    4552:	69 2f       	mov	r22, r25
    4554:	41 e0       	ldi	r20, 0x01	; 1
    4556:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    455a:	8a 83       	std	Y+2, r24	; 0x02
    455c:	80 c0       	rjmp	.+256    	; 0x465e <LED_enuInit+0x256>
							           	   	   	   	   	   	 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8HIGH);
				}
				else
				{
					return ES_OUT_OF_RANGE;
    455e:	83 e0       	ldi	r24, 0x03	; 3
    4560:	8d 83       	std	Y+5, r24	; 0x05
    4562:	89 c0       	rjmp	.+274    	; 0x4676 <LED_enuInit+0x26e>
				}
			}
			else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8Connection == LED_u8SOURCE)
    4564:	89 81       	ldd	r24, Y+1	; 0x01
    4566:	88 2f       	mov	r24, r24
    4568:	90 e0       	ldi	r25, 0x00	; 0
    456a:	9c 01       	movw	r18, r24
    456c:	22 0f       	add	r18, r18
    456e:	33 1f       	adc	r19, r19
    4570:	22 0f       	add	r18, r18
    4572:	33 1f       	adc	r19, r19
    4574:	8b 81       	ldd	r24, Y+3	; 0x03
    4576:	9c 81       	ldd	r25, Y+4	; 0x04
    4578:	fc 01       	movw	r30, r24
    457a:	e2 0f       	add	r30, r18
    457c:	f3 1f       	adc	r31, r19
    457e:	82 81       	ldd	r24, Z+2	; 0x02
    4580:	89 30       	cpi	r24, 0x09	; 9
    4582:	09 f0       	breq	.+2      	; 0x4586 <LED_enuInit+0x17e>
    4584:	69 c0       	rjmp	.+210    	; 0x4658 <LED_enuInit+0x250>
			{
				if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8ON)
    4586:	89 81       	ldd	r24, Y+1	; 0x01
    4588:	88 2f       	mov	r24, r24
    458a:	90 e0       	ldi	r25, 0x00	; 0
    458c:	9c 01       	movw	r18, r24
    458e:	22 0f       	add	r18, r18
    4590:	33 1f       	adc	r19, r19
    4592:	22 0f       	add	r18, r18
    4594:	33 1f       	adc	r19, r19
    4596:	8b 81       	ldd	r24, Y+3	; 0x03
    4598:	9c 81       	ldd	r25, Y+4	; 0x04
    459a:	fc 01       	movw	r30, r24
    459c:	e2 0f       	add	r30, r18
    459e:	f3 1f       	adc	r31, r19
    45a0:	83 81       	ldd	r24, Z+3	; 0x03
    45a2:	8a 30       	cpi	r24, 0x0A	; 10
    45a4:	19 f5       	brne	.+70     	; 0x45ec <LED_enuInit+0x1e4>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    45a6:	89 81       	ldd	r24, Y+1	; 0x01
    45a8:	88 2f       	mov	r24, r24
    45aa:	90 e0       	ldi	r25, 0x00	; 0
    45ac:	9c 01       	movw	r18, r24
    45ae:	22 0f       	add	r18, r18
    45b0:	33 1f       	adc	r19, r19
    45b2:	22 0f       	add	r18, r18
    45b4:	33 1f       	adc	r19, r19
    45b6:	8b 81       	ldd	r24, Y+3	; 0x03
    45b8:	9c 81       	ldd	r25, Y+4	; 0x04
    45ba:	fc 01       	movw	r30, r24
    45bc:	e2 0f       	add	r30, r18
    45be:	f3 1f       	adc	r31, r19
    45c0:	40 81       	ld	r20, Z
    45c2:	89 81       	ldd	r24, Y+1	; 0x01
    45c4:	88 2f       	mov	r24, r24
    45c6:	90 e0       	ldi	r25, 0x00	; 0
    45c8:	9c 01       	movw	r18, r24
    45ca:	22 0f       	add	r18, r18
    45cc:	33 1f       	adc	r19, r19
    45ce:	22 0f       	add	r18, r18
    45d0:	33 1f       	adc	r19, r19
    45d2:	8b 81       	ldd	r24, Y+3	; 0x03
    45d4:	9c 81       	ldd	r25, Y+4	; 0x04
    45d6:	fc 01       	movw	r30, r24
    45d8:	e2 0f       	add	r30, r18
    45da:	f3 1f       	adc	r31, r19
    45dc:	91 81       	ldd	r25, Z+1	; 0x01
    45de:	84 2f       	mov	r24, r20
    45e0:	69 2f       	mov	r22, r25
    45e2:	41 e0       	ldi	r20, 0x01	; 1
    45e4:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    45e8:	8a 83       	std	Y+2, r24	; 0x02
    45ea:	39 c0       	rjmp	.+114    	; 0x465e <LED_enuInit+0x256>
							           	   	   	   	   	     Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8HIGH);

				}
				else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8OFF)
    45ec:	89 81       	ldd	r24, Y+1	; 0x01
    45ee:	88 2f       	mov	r24, r24
    45f0:	90 e0       	ldi	r25, 0x00	; 0
    45f2:	9c 01       	movw	r18, r24
    45f4:	22 0f       	add	r18, r18
    45f6:	33 1f       	adc	r19, r19
    45f8:	22 0f       	add	r18, r18
    45fa:	33 1f       	adc	r19, r19
    45fc:	8b 81       	ldd	r24, Y+3	; 0x03
    45fe:	9c 81       	ldd	r25, Y+4	; 0x04
    4600:	fc 01       	movw	r30, r24
    4602:	e2 0f       	add	r30, r18
    4604:	f3 1f       	adc	r31, r19
    4606:	83 81       	ldd	r24, Z+3	; 0x03
    4608:	8b 30       	cpi	r24, 0x0B	; 11
    460a:	19 f5       	brne	.+70     	; 0x4652 <LED_enuInit+0x24a>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    460c:	89 81       	ldd	r24, Y+1	; 0x01
    460e:	88 2f       	mov	r24, r24
    4610:	90 e0       	ldi	r25, 0x00	; 0
    4612:	9c 01       	movw	r18, r24
    4614:	22 0f       	add	r18, r18
    4616:	33 1f       	adc	r19, r19
    4618:	22 0f       	add	r18, r18
    461a:	33 1f       	adc	r19, r19
    461c:	8b 81       	ldd	r24, Y+3	; 0x03
    461e:	9c 81       	ldd	r25, Y+4	; 0x04
    4620:	fc 01       	movw	r30, r24
    4622:	e2 0f       	add	r30, r18
    4624:	f3 1f       	adc	r31, r19
    4626:	40 81       	ld	r20, Z
    4628:	89 81       	ldd	r24, Y+1	; 0x01
    462a:	88 2f       	mov	r24, r24
    462c:	90 e0       	ldi	r25, 0x00	; 0
    462e:	9c 01       	movw	r18, r24
    4630:	22 0f       	add	r18, r18
    4632:	33 1f       	adc	r19, r19
    4634:	22 0f       	add	r18, r18
    4636:	33 1f       	adc	r19, r19
    4638:	8b 81       	ldd	r24, Y+3	; 0x03
    463a:	9c 81       	ldd	r25, Y+4	; 0x04
    463c:	fc 01       	movw	r30, r24
    463e:	e2 0f       	add	r30, r18
    4640:	f3 1f       	adc	r31, r19
    4642:	91 81       	ldd	r25, Z+1	; 0x01
    4644:	84 2f       	mov	r24, r20
    4646:	69 2f       	mov	r22, r25
    4648:	40 e0       	ldi	r20, 0x00	; 0
    464a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    464e:	8a 83       	std	Y+2, r24	; 0x02
    4650:	06 c0       	rjmp	.+12     	; 0x465e <LED_enuInit+0x256>
							           	   	   	   	   	   	 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8LOW);
				}
				else
				{
					return ES_OUT_OF_RANGE;
    4652:	83 e0       	ldi	r24, 0x03	; 3
    4654:	8d 83       	std	Y+5, r24	; 0x05
    4656:	0f c0       	rjmp	.+30     	; 0x4676 <LED_enuInit+0x26e>
				}
			}
			else
			{
				return ES_OUT_OF_RANGE;
    4658:	83 e0       	ldi	r24, 0x03	; 3
    465a:	8d 83       	std	Y+5, r24	; 0x05
    465c:	0c c0       	rjmp	.+24     	; 0x4676 <LED_enuInit+0x26e>

	if(Copy_pstrLedConfiguration != NULL)
	{
		u8 Local_u8Iterator = 0;

		for(Local_u8Iterator = 0; Local_u8Iterator < LED_NUM; Local_u8Iterator++)
    465e:	89 81       	ldd	r24, Y+1	; 0x01
    4660:	8f 5f       	subi	r24, 0xFF	; 255
    4662:	89 83       	std	Y+1, r24	; 0x01
    4664:	89 81       	ldd	r24, Y+1	; 0x01
    4666:	83 30       	cpi	r24, 0x03	; 3
    4668:	08 f4       	brcc	.+2      	; 0x466c <LED_enuInit+0x264>
    466a:	e0 ce       	rjmp	.-576    	; 0x442c <LED_enuInit+0x24>
    466c:	02 c0       	rjmp	.+4      	; 0x4672 <LED_enuInit+0x26a>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    466e:	82 e0       	ldi	r24, 0x02	; 2
    4670:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enuErrorState;
    4672:	8a 81       	ldd	r24, Y+2	; 0x02
    4674:	8d 83       	std	Y+5, r24	; 0x05
    4676:	8d 81       	ldd	r24, Y+5	; 0x05
}
    4678:	0f 90       	pop	r0
    467a:	0f 90       	pop	r0
    467c:	0f 90       	pop	r0
    467e:	0f 90       	pop	r0
    4680:	0f 90       	pop	r0
    4682:	cf 91       	pop	r28
    4684:	df 91       	pop	r29
    4686:	08 95       	ret

00004688 <LED_enuTurnON>:

ES_t LED_enuTurnON(LED_t * Copy_pstrLedID)
{
    4688:	df 93       	push	r29
    468a:	cf 93       	push	r28
    468c:	00 d0       	rcall	.+0      	; 0x468e <LED_enuTurnON+0x6>
    468e:	00 d0       	rcall	.+0      	; 0x4690 <LED_enuTurnON+0x8>
    4690:	cd b7       	in	r28, 0x3d	; 61
    4692:	de b7       	in	r29, 0x3e	; 62
    4694:	9b 83       	std	Y+3, r25	; 0x03
    4696:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4698:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_pstrLedID != NULL)
    469a:	8a 81       	ldd	r24, Y+2	; 0x02
    469c:	9b 81       	ldd	r25, Y+3	; 0x03
    469e:	00 97       	sbiw	r24, 0x00	; 0
    46a0:	41 f1       	breq	.+80     	; 0x46f2 <LED_enuTurnON+0x6a>
	{
		if(Copy_pstrLedID->LED_u8Connection == LED_u8SINK)
    46a2:	ea 81       	ldd	r30, Y+2	; 0x02
    46a4:	fb 81       	ldd	r31, Y+3	; 0x03
    46a6:	82 81       	ldd	r24, Z+2	; 0x02
    46a8:	88 30       	cpi	r24, 0x08	; 8
    46aa:	61 f4       	brne	.+24     	; 0x46c4 <LED_enuTurnON+0x3c>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8LOW);
    46ac:	ea 81       	ldd	r30, Y+2	; 0x02
    46ae:	fb 81       	ldd	r31, Y+3	; 0x03
    46b0:	80 81       	ld	r24, Z
    46b2:	ea 81       	ldd	r30, Y+2	; 0x02
    46b4:	fb 81       	ldd	r31, Y+3	; 0x03
    46b6:	91 81       	ldd	r25, Z+1	; 0x01
    46b8:	69 2f       	mov	r22, r25
    46ba:	40 e0       	ldi	r20, 0x00	; 0
    46bc:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    46c0:	89 83       	std	Y+1, r24	; 0x01
    46c2:	14 c0       	rjmp	.+40     	; 0x46ec <LED_enuTurnON+0x64>
		}
		else if(Copy_pstrLedID->LED_u8Connection == LED_u8SOURCE)
    46c4:	ea 81       	ldd	r30, Y+2	; 0x02
    46c6:	fb 81       	ldd	r31, Y+3	; 0x03
    46c8:	82 81       	ldd	r24, Z+2	; 0x02
    46ca:	89 30       	cpi	r24, 0x09	; 9
    46cc:	61 f4       	brne	.+24     	; 0x46e6 <LED_enuTurnON+0x5e>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8HIGH);
    46ce:	ea 81       	ldd	r30, Y+2	; 0x02
    46d0:	fb 81       	ldd	r31, Y+3	; 0x03
    46d2:	80 81       	ld	r24, Z
    46d4:	ea 81       	ldd	r30, Y+2	; 0x02
    46d6:	fb 81       	ldd	r31, Y+3	; 0x03
    46d8:	91 81       	ldd	r25, Z+1	; 0x01
    46da:	69 2f       	mov	r22, r25
    46dc:	41 e0       	ldi	r20, 0x01	; 1
    46de:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    46e2:	89 83       	std	Y+1, r24	; 0x01
    46e4:	03 c0       	rjmp	.+6      	; 0x46ec <LED_enuTurnON+0x64>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    46e6:	83 e0       	ldi	r24, 0x03	; 3
    46e8:	8c 83       	std	Y+4, r24	; 0x04
    46ea:	05 c0       	rjmp	.+10     	; 0x46f6 <LED_enuTurnON+0x6e>
	else
	{
		return ES_NULL_POINTER;
	}

	return Local_enuErrorState;
    46ec:	89 81       	ldd	r24, Y+1	; 0x01
    46ee:	8c 83       	std	Y+4, r24	; 0x04
    46f0:	02 c0       	rjmp	.+4      	; 0x46f6 <LED_enuTurnON+0x6e>
			return ES_OUT_OF_RANGE;
		}
	}
	else
	{
		return ES_NULL_POINTER;
    46f2:	82 e0       	ldi	r24, 0x02	; 2
    46f4:	8c 83       	std	Y+4, r24	; 0x04
    46f6:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return Local_enuErrorState;
}
    46f8:	0f 90       	pop	r0
    46fa:	0f 90       	pop	r0
    46fc:	0f 90       	pop	r0
    46fe:	0f 90       	pop	r0
    4700:	cf 91       	pop	r28
    4702:	df 91       	pop	r29
    4704:	08 95       	ret

00004706 <LED_enuTurnOFF>:

ES_t LED_enuTurnOFF(LED_t * Copy_pstrLedID)
{
    4706:	df 93       	push	r29
    4708:	cf 93       	push	r28
    470a:	00 d0       	rcall	.+0      	; 0x470c <LED_enuTurnOFF+0x6>
    470c:	00 d0       	rcall	.+0      	; 0x470e <LED_enuTurnOFF+0x8>
    470e:	cd b7       	in	r28, 0x3d	; 61
    4710:	de b7       	in	r29, 0x3e	; 62
    4712:	9b 83       	std	Y+3, r25	; 0x03
    4714:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4716:	19 82       	std	Y+1, r1	; 0x01


	if(Copy_pstrLedID != NULL)
    4718:	8a 81       	ldd	r24, Y+2	; 0x02
    471a:	9b 81       	ldd	r25, Y+3	; 0x03
    471c:	00 97       	sbiw	r24, 0x00	; 0
    471e:	41 f1       	breq	.+80     	; 0x4770 <LED_enuTurnOFF+0x6a>
	{
		if(Copy_pstrLedID->LED_u8Connection == LED_u8SINK)
    4720:	ea 81       	ldd	r30, Y+2	; 0x02
    4722:	fb 81       	ldd	r31, Y+3	; 0x03
    4724:	82 81       	ldd	r24, Z+2	; 0x02
    4726:	88 30       	cpi	r24, 0x08	; 8
    4728:	61 f4       	brne	.+24     	; 0x4742 <LED_enuTurnOFF+0x3c>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8HIGH);
    472a:	ea 81       	ldd	r30, Y+2	; 0x02
    472c:	fb 81       	ldd	r31, Y+3	; 0x03
    472e:	80 81       	ld	r24, Z
    4730:	ea 81       	ldd	r30, Y+2	; 0x02
    4732:	fb 81       	ldd	r31, Y+3	; 0x03
    4734:	91 81       	ldd	r25, Z+1	; 0x01
    4736:	69 2f       	mov	r22, r25
    4738:	41 e0       	ldi	r20, 0x01	; 1
    473a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    473e:	89 83       	std	Y+1, r24	; 0x01
    4740:	14 c0       	rjmp	.+40     	; 0x476a <LED_enuTurnOFF+0x64>
		}
		else if(Copy_pstrLedID->LED_u8Connection == LED_u8SOURCE)
    4742:	ea 81       	ldd	r30, Y+2	; 0x02
    4744:	fb 81       	ldd	r31, Y+3	; 0x03
    4746:	82 81       	ldd	r24, Z+2	; 0x02
    4748:	89 30       	cpi	r24, 0x09	; 9
    474a:	61 f4       	brne	.+24     	; 0x4764 <LED_enuTurnOFF+0x5e>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8LOW);
    474c:	ea 81       	ldd	r30, Y+2	; 0x02
    474e:	fb 81       	ldd	r31, Y+3	; 0x03
    4750:	80 81       	ld	r24, Z
    4752:	ea 81       	ldd	r30, Y+2	; 0x02
    4754:	fb 81       	ldd	r31, Y+3	; 0x03
    4756:	91 81       	ldd	r25, Z+1	; 0x01
    4758:	69 2f       	mov	r22, r25
    475a:	40 e0       	ldi	r20, 0x00	; 0
    475c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    4760:	89 83       	std	Y+1, r24	; 0x01
    4762:	03 c0       	rjmp	.+6      	; 0x476a <LED_enuTurnOFF+0x64>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    4764:	83 e0       	ldi	r24, 0x03	; 3
    4766:	8c 83       	std	Y+4, r24	; 0x04
    4768:	05 c0       	rjmp	.+10     	; 0x4774 <LED_enuTurnOFF+0x6e>
	else
	{
		return ES_NULL_POINTER;
	}

	return Local_enuErrorState;
    476a:	89 81       	ldd	r24, Y+1	; 0x01
    476c:	8c 83       	std	Y+4, r24	; 0x04
    476e:	02 c0       	rjmp	.+4      	; 0x4774 <LED_enuTurnOFF+0x6e>
			return ES_OUT_OF_RANGE;
		}
	}
	else
	{
		return ES_NULL_POINTER;
    4770:	82 e0       	ldi	r24, 0x02	; 2
    4772:	8c 83       	std	Y+4, r24	; 0x04
    4774:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return Local_enuErrorState;
}
    4776:	0f 90       	pop	r0
    4778:	0f 90       	pop	r0
    477a:	0f 90       	pop	r0
    477c:	0f 90       	pop	r0
    477e:	cf 91       	pop	r28
    4780:	df 91       	pop	r29
    4782:	08 95       	ret

00004784 <LCD_enuInit>:
#include "LCD_private.h"
#include <util/delay.h>
/***********************	Includes Section End	***********************/

ES_t LCD_enuInit(void)
{
    4784:	df 93       	push	r29
    4786:	cf 93       	push	r28
    4788:	cd b7       	in	r28, 0x3d	; 61
    478a:	de b7       	in	r29, 0x3e	; 62
    478c:	e9 97       	sbiw	r28, 0x39	; 57
    478e:	0f b6       	in	r0, 0x3f	; 63
    4790:	f8 94       	cli
    4792:	de bf       	out	0x3e, r29	; 62
    4794:	0f be       	out	0x3f, r0	; 63
    4796:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    4798:	19 ae       	std	Y+57, r1	; 0x39

	/* Shared configuration in two LCD modes */
	DIO_enuSetPinDirection(RS_PORT, RS_PIN, DIO_u8OUTPUT);
    479a:	80 e0       	ldi	r24, 0x00	; 0
    479c:	60 e0       	ldi	r22, 0x00	; 0
    479e:	41 e0       	ldi	r20, 0x01	; 1
    47a0:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(RW_PORT, RW_PIN, DIO_u8OUTPUT);
    47a4:	80 e0       	ldi	r24, 0x00	; 0
    47a6:	61 e0       	ldi	r22, 0x01	; 1
    47a8:	41 e0       	ldi	r20, 0x01	; 1
    47aa:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(EN_PORT, EN_PIN, DIO_u8OUTPUT);
    47ae:	80 e0       	ldi	r24, 0x00	; 0
    47b0:	62 e0       	ldi	r22, 0x02	; 2
    47b2:	41 e0       	ldi	r20, 0x01	; 1
    47b4:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>

	DIO_enuSetPinDirection(D7_PORT, D7_PIN, DIO_u8OUTPUT);
    47b8:	81 e0       	ldi	r24, 0x01	; 1
    47ba:	67 e0       	ldi	r22, 0x07	; 7
    47bc:	41 e0       	ldi	r20, 0x01	; 1
    47be:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(D6_PORT, D6_PIN, DIO_u8OUTPUT);
    47c2:	81 e0       	ldi	r24, 0x01	; 1
    47c4:	66 e0       	ldi	r22, 0x06	; 6
    47c6:	41 e0       	ldi	r20, 0x01	; 1
    47c8:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(D5_PORT, D5_PIN, DIO_u8OUTPUT);
    47cc:	81 e0       	ldi	r24, 0x01	; 1
    47ce:	65 e0       	ldi	r22, 0x05	; 5
    47d0:	41 e0       	ldi	r20, 0x01	; 1
    47d2:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(D4_PORT, D4_PIN, DIO_u8OUTPUT);
    47d6:	81 e0       	ldi	r24, 0x01	; 1
    47d8:	64 e0       	ldi	r22, 0x04	; 4
    47da:	41 e0       	ldi	r20, 0x01	; 1
    47dc:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    47e0:	80 e0       	ldi	r24, 0x00	; 0
    47e2:	90 e0       	ldi	r25, 0x00	; 0
    47e4:	ac e0       	ldi	r26, 0x0C	; 12
    47e6:	b2 e4       	ldi	r27, 0x42	; 66
    47e8:	8d ab       	std	Y+53, r24	; 0x35
    47ea:	9e ab       	std	Y+54, r25	; 0x36
    47ec:	af ab       	std	Y+55, r26	; 0x37
    47ee:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47f0:	6d a9       	ldd	r22, Y+53	; 0x35
    47f2:	7e a9       	ldd	r23, Y+54	; 0x36
    47f4:	8f a9       	ldd	r24, Y+55	; 0x37
    47f6:	98 ad       	ldd	r25, Y+56	; 0x38
    47f8:	20 e0       	ldi	r18, 0x00	; 0
    47fa:	30 e0       	ldi	r19, 0x00	; 0
    47fc:	4a e7       	ldi	r20, 0x7A	; 122
    47fe:	53 e4       	ldi	r21, 0x43	; 67
    4800:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4804:	dc 01       	movw	r26, r24
    4806:	cb 01       	movw	r24, r22
    4808:	89 ab       	std	Y+49, r24	; 0x31
    480a:	9a ab       	std	Y+50, r25	; 0x32
    480c:	ab ab       	std	Y+51, r26	; 0x33
    480e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4810:	69 a9       	ldd	r22, Y+49	; 0x31
    4812:	7a a9       	ldd	r23, Y+50	; 0x32
    4814:	8b a9       	ldd	r24, Y+51	; 0x33
    4816:	9c a9       	ldd	r25, Y+52	; 0x34
    4818:	20 e0       	ldi	r18, 0x00	; 0
    481a:	30 e0       	ldi	r19, 0x00	; 0
    481c:	40 e8       	ldi	r20, 0x80	; 128
    481e:	5f e3       	ldi	r21, 0x3F	; 63
    4820:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4824:	88 23       	and	r24, r24
    4826:	2c f4       	brge	.+10     	; 0x4832 <LCD_enuInit+0xae>
		__ticks = 1;
    4828:	81 e0       	ldi	r24, 0x01	; 1
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	98 ab       	std	Y+48, r25	; 0x30
    482e:	8f a7       	std	Y+47, r24	; 0x2f
    4830:	3f c0       	rjmp	.+126    	; 0x48b0 <LCD_enuInit+0x12c>
	else if (__tmp > 65535)
    4832:	69 a9       	ldd	r22, Y+49	; 0x31
    4834:	7a a9       	ldd	r23, Y+50	; 0x32
    4836:	8b a9       	ldd	r24, Y+51	; 0x33
    4838:	9c a9       	ldd	r25, Y+52	; 0x34
    483a:	20 e0       	ldi	r18, 0x00	; 0
    483c:	3f ef       	ldi	r19, 0xFF	; 255
    483e:	4f e7       	ldi	r20, 0x7F	; 127
    4840:	57 e4       	ldi	r21, 0x47	; 71
    4842:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4846:	18 16       	cp	r1, r24
    4848:	4c f5       	brge	.+82     	; 0x489c <LCD_enuInit+0x118>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    484a:	6d a9       	ldd	r22, Y+53	; 0x35
    484c:	7e a9       	ldd	r23, Y+54	; 0x36
    484e:	8f a9       	ldd	r24, Y+55	; 0x37
    4850:	98 ad       	ldd	r25, Y+56	; 0x38
    4852:	20 e0       	ldi	r18, 0x00	; 0
    4854:	30 e0       	ldi	r19, 0x00	; 0
    4856:	40 e2       	ldi	r20, 0x20	; 32
    4858:	51 e4       	ldi	r21, 0x41	; 65
    485a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    485e:	dc 01       	movw	r26, r24
    4860:	cb 01       	movw	r24, r22
    4862:	bc 01       	movw	r22, r24
    4864:	cd 01       	movw	r24, r26
    4866:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    486a:	dc 01       	movw	r26, r24
    486c:	cb 01       	movw	r24, r22
    486e:	98 ab       	std	Y+48, r25	; 0x30
    4870:	8f a7       	std	Y+47, r24	; 0x2f
    4872:	0f c0       	rjmp	.+30     	; 0x4892 <LCD_enuInit+0x10e>
    4874:	89 e1       	ldi	r24, 0x19	; 25
    4876:	90 e0       	ldi	r25, 0x00	; 0
    4878:	9e a7       	std	Y+46, r25	; 0x2e
    487a:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    487c:	8d a5       	ldd	r24, Y+45	; 0x2d
    487e:	9e a5       	ldd	r25, Y+46	; 0x2e
    4880:	01 97       	sbiw	r24, 0x01	; 1
    4882:	f1 f7       	brne	.-4      	; 0x4880 <LCD_enuInit+0xfc>
    4884:	9e a7       	std	Y+46, r25	; 0x2e
    4886:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4888:	8f a5       	ldd	r24, Y+47	; 0x2f
    488a:	98 a9       	ldd	r25, Y+48	; 0x30
    488c:	01 97       	sbiw	r24, 0x01	; 1
    488e:	98 ab       	std	Y+48, r25	; 0x30
    4890:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4892:	8f a5       	ldd	r24, Y+47	; 0x2f
    4894:	98 a9       	ldd	r25, Y+48	; 0x30
    4896:	00 97       	sbiw	r24, 0x00	; 0
    4898:	69 f7       	brne	.-38     	; 0x4874 <LCD_enuInit+0xf0>
    489a:	14 c0       	rjmp	.+40     	; 0x48c4 <LCD_enuInit+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    489c:	69 a9       	ldd	r22, Y+49	; 0x31
    489e:	7a a9       	ldd	r23, Y+50	; 0x32
    48a0:	8b a9       	ldd	r24, Y+51	; 0x33
    48a2:	9c a9       	ldd	r25, Y+52	; 0x34
    48a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48a8:	dc 01       	movw	r26, r24
    48aa:	cb 01       	movw	r24, r22
    48ac:	98 ab       	std	Y+48, r25	; 0x30
    48ae:	8f a7       	std	Y+47, r24	; 0x2f
    48b0:	8f a5       	ldd	r24, Y+47	; 0x2f
    48b2:	98 a9       	ldd	r25, Y+48	; 0x30
    48b4:	9c a7       	std	Y+44, r25	; 0x2c
    48b6:	8b a7       	std	Y+43, r24	; 0x2b
    48b8:	8b a5       	ldd	r24, Y+43	; 0x2b
    48ba:	9c a5       	ldd	r25, Y+44	; 0x2c
    48bc:	01 97       	sbiw	r24, 0x01	; 1
    48be:	f1 f7       	brne	.-4      	; 0x48bc <LCD_enuInit+0x138>
    48c0:	9c a7       	std	Y+44, r25	; 0x2c
    48c2:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(35);


	#if LCD_MODE == EIGHT_BIT
		DIO_enuSetPinDirection(D3_PORT, D3_PIN, DIO_u8OUTPUT);
    48c4:	82 e0       	ldi	r24, 0x02	; 2
    48c6:	63 e0       	ldi	r22, 0x03	; 3
    48c8:	41 e0       	ldi	r20, 0x01	; 1
    48ca:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(D2_PORT, D2_PIN, DIO_u8OUTPUT);
    48ce:	82 e0       	ldi	r24, 0x02	; 2
    48d0:	62 e0       	ldi	r22, 0x02	; 2
    48d2:	41 e0       	ldi	r20, 0x01	; 1
    48d4:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(D1_PORT, D1_PIN, DIO_u8OUTPUT);
    48d8:	82 e0       	ldi	r24, 0x02	; 2
    48da:	61 e0       	ldi	r22, 0x01	; 1
    48dc:	41 e0       	ldi	r20, 0x01	; 1
    48de:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(D0_PORT, D0_PIN, DIO_u8OUTPUT);
    48e2:	82 e0       	ldi	r24, 0x02	; 2
    48e4:	60 e0       	ldi	r22, 0x00	; 0
    48e6:	41 e0       	ldi	r20, 0x01	; 1
    48e8:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>

		/* Function Set */
		LCD_invoidSendCommand(0x38);
    48ec:	88 e3       	ldi	r24, 0x38	; 56
    48ee:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>
    48f2:	80 e0       	ldi	r24, 0x00	; 0
    48f4:	90 e0       	ldi	r25, 0x00	; 0
    48f6:	a0 e8       	ldi	r26, 0x80	; 128
    48f8:	bf e3       	ldi	r27, 0x3F	; 63
    48fa:	8f a3       	std	Y+39, r24	; 0x27
    48fc:	98 a7       	std	Y+40, r25	; 0x28
    48fe:	a9 a7       	std	Y+41, r26	; 0x29
    4900:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4902:	6f a1       	ldd	r22, Y+39	; 0x27
    4904:	78 a5       	ldd	r23, Y+40	; 0x28
    4906:	89 a5       	ldd	r24, Y+41	; 0x29
    4908:	9a a5       	ldd	r25, Y+42	; 0x2a
    490a:	20 e0       	ldi	r18, 0x00	; 0
    490c:	30 e0       	ldi	r19, 0x00	; 0
    490e:	4a e7       	ldi	r20, 0x7A	; 122
    4910:	53 e4       	ldi	r21, 0x43	; 67
    4912:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4916:	dc 01       	movw	r26, r24
    4918:	cb 01       	movw	r24, r22
    491a:	8b a3       	std	Y+35, r24	; 0x23
    491c:	9c a3       	std	Y+36, r25	; 0x24
    491e:	ad a3       	std	Y+37, r26	; 0x25
    4920:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4922:	6b a1       	ldd	r22, Y+35	; 0x23
    4924:	7c a1       	ldd	r23, Y+36	; 0x24
    4926:	8d a1       	ldd	r24, Y+37	; 0x25
    4928:	9e a1       	ldd	r25, Y+38	; 0x26
    492a:	20 e0       	ldi	r18, 0x00	; 0
    492c:	30 e0       	ldi	r19, 0x00	; 0
    492e:	40 e8       	ldi	r20, 0x80	; 128
    4930:	5f e3       	ldi	r21, 0x3F	; 63
    4932:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4936:	88 23       	and	r24, r24
    4938:	2c f4       	brge	.+10     	; 0x4944 <LCD_enuInit+0x1c0>
		__ticks = 1;
    493a:	81 e0       	ldi	r24, 0x01	; 1
    493c:	90 e0       	ldi	r25, 0x00	; 0
    493e:	9a a3       	std	Y+34, r25	; 0x22
    4940:	89 a3       	std	Y+33, r24	; 0x21
    4942:	3f c0       	rjmp	.+126    	; 0x49c2 <LCD_enuInit+0x23e>
	else if (__tmp > 65535)
    4944:	6b a1       	ldd	r22, Y+35	; 0x23
    4946:	7c a1       	ldd	r23, Y+36	; 0x24
    4948:	8d a1       	ldd	r24, Y+37	; 0x25
    494a:	9e a1       	ldd	r25, Y+38	; 0x26
    494c:	20 e0       	ldi	r18, 0x00	; 0
    494e:	3f ef       	ldi	r19, 0xFF	; 255
    4950:	4f e7       	ldi	r20, 0x7F	; 127
    4952:	57 e4       	ldi	r21, 0x47	; 71
    4954:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4958:	18 16       	cp	r1, r24
    495a:	4c f5       	brge	.+82     	; 0x49ae <LCD_enuInit+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    495c:	6f a1       	ldd	r22, Y+39	; 0x27
    495e:	78 a5       	ldd	r23, Y+40	; 0x28
    4960:	89 a5       	ldd	r24, Y+41	; 0x29
    4962:	9a a5       	ldd	r25, Y+42	; 0x2a
    4964:	20 e0       	ldi	r18, 0x00	; 0
    4966:	30 e0       	ldi	r19, 0x00	; 0
    4968:	40 e2       	ldi	r20, 0x20	; 32
    496a:	51 e4       	ldi	r21, 0x41	; 65
    496c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4970:	dc 01       	movw	r26, r24
    4972:	cb 01       	movw	r24, r22
    4974:	bc 01       	movw	r22, r24
    4976:	cd 01       	movw	r24, r26
    4978:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    497c:	dc 01       	movw	r26, r24
    497e:	cb 01       	movw	r24, r22
    4980:	9a a3       	std	Y+34, r25	; 0x22
    4982:	89 a3       	std	Y+33, r24	; 0x21
    4984:	0f c0       	rjmp	.+30     	; 0x49a4 <LCD_enuInit+0x220>
    4986:	89 e1       	ldi	r24, 0x19	; 25
    4988:	90 e0       	ldi	r25, 0x00	; 0
    498a:	98 a3       	std	Y+32, r25	; 0x20
    498c:	8f 8f       	std	Y+31, r24	; 0x1f
    498e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4990:	98 a1       	ldd	r25, Y+32	; 0x20
    4992:	01 97       	sbiw	r24, 0x01	; 1
    4994:	f1 f7       	brne	.-4      	; 0x4992 <LCD_enuInit+0x20e>
    4996:	98 a3       	std	Y+32, r25	; 0x20
    4998:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    499a:	89 a1       	ldd	r24, Y+33	; 0x21
    499c:	9a a1       	ldd	r25, Y+34	; 0x22
    499e:	01 97       	sbiw	r24, 0x01	; 1
    49a0:	9a a3       	std	Y+34, r25	; 0x22
    49a2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49a4:	89 a1       	ldd	r24, Y+33	; 0x21
    49a6:	9a a1       	ldd	r25, Y+34	; 0x22
    49a8:	00 97       	sbiw	r24, 0x00	; 0
    49aa:	69 f7       	brne	.-38     	; 0x4986 <LCD_enuInit+0x202>
    49ac:	14 c0       	rjmp	.+40     	; 0x49d6 <LCD_enuInit+0x252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49ae:	6b a1       	ldd	r22, Y+35	; 0x23
    49b0:	7c a1       	ldd	r23, Y+36	; 0x24
    49b2:	8d a1       	ldd	r24, Y+37	; 0x25
    49b4:	9e a1       	ldd	r25, Y+38	; 0x26
    49b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    49ba:	dc 01       	movw	r26, r24
    49bc:	cb 01       	movw	r24, r22
    49be:	9a a3       	std	Y+34, r25	; 0x22
    49c0:	89 a3       	std	Y+33, r24	; 0x21
    49c2:	89 a1       	ldd	r24, Y+33	; 0x21
    49c4:	9a a1       	ldd	r25, Y+34	; 0x22
    49c6:	9e 8f       	std	Y+30, r25	; 0x1e
    49c8:	8d 8f       	std	Y+29, r24	; 0x1d
    49ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    49cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    49ce:	01 97       	sbiw	r24, 0x01	; 1
    49d0:	f1 f7       	brne	.-4      	; 0x49ce <LCD_enuInit+0x24a>
    49d2:	9e 8f       	std	Y+30, r25	; 0x1e
    49d4:	8d 8f       	std	Y+29, r24	; 0x1d
		#error "Invalid LCD Mode"
	#endif

		_delay_ms(1);
		/* Display ON Cursor Blink*/
		LCD_invoidSendCommand(0x0F);
    49d6:	8f e0       	ldi	r24, 0x0F	; 15
    49d8:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>
    49dc:	80 e0       	ldi	r24, 0x00	; 0
    49de:	90 e0       	ldi	r25, 0x00	; 0
    49e0:	a0 e8       	ldi	r26, 0x80	; 128
    49e2:	bf e3       	ldi	r27, 0x3F	; 63
    49e4:	89 8f       	std	Y+25, r24	; 0x19
    49e6:	9a 8f       	std	Y+26, r25	; 0x1a
    49e8:	ab 8f       	std	Y+27, r26	; 0x1b
    49ea:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49ec:	69 8d       	ldd	r22, Y+25	; 0x19
    49ee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    49f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    49f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    49f4:	20 e0       	ldi	r18, 0x00	; 0
    49f6:	30 e0       	ldi	r19, 0x00	; 0
    49f8:	4a e7       	ldi	r20, 0x7A	; 122
    49fa:	53 e4       	ldi	r21, 0x43	; 67
    49fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a00:	dc 01       	movw	r26, r24
    4a02:	cb 01       	movw	r24, r22
    4a04:	8d 8b       	std	Y+21, r24	; 0x15
    4a06:	9e 8b       	std	Y+22, r25	; 0x16
    4a08:	af 8b       	std	Y+23, r26	; 0x17
    4a0a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4a0c:	6d 89       	ldd	r22, Y+21	; 0x15
    4a0e:	7e 89       	ldd	r23, Y+22	; 0x16
    4a10:	8f 89       	ldd	r24, Y+23	; 0x17
    4a12:	98 8d       	ldd	r25, Y+24	; 0x18
    4a14:	20 e0       	ldi	r18, 0x00	; 0
    4a16:	30 e0       	ldi	r19, 0x00	; 0
    4a18:	40 e8       	ldi	r20, 0x80	; 128
    4a1a:	5f e3       	ldi	r21, 0x3F	; 63
    4a1c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4a20:	88 23       	and	r24, r24
    4a22:	2c f4       	brge	.+10     	; 0x4a2e <LCD_enuInit+0x2aa>
		__ticks = 1;
    4a24:	81 e0       	ldi	r24, 0x01	; 1
    4a26:	90 e0       	ldi	r25, 0x00	; 0
    4a28:	9c 8b       	std	Y+20, r25	; 0x14
    4a2a:	8b 8b       	std	Y+19, r24	; 0x13
    4a2c:	3f c0       	rjmp	.+126    	; 0x4aac <LCD_enuInit+0x328>
	else if (__tmp > 65535)
    4a2e:	6d 89       	ldd	r22, Y+21	; 0x15
    4a30:	7e 89       	ldd	r23, Y+22	; 0x16
    4a32:	8f 89       	ldd	r24, Y+23	; 0x17
    4a34:	98 8d       	ldd	r25, Y+24	; 0x18
    4a36:	20 e0       	ldi	r18, 0x00	; 0
    4a38:	3f ef       	ldi	r19, 0xFF	; 255
    4a3a:	4f e7       	ldi	r20, 0x7F	; 127
    4a3c:	57 e4       	ldi	r21, 0x47	; 71
    4a3e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4a42:	18 16       	cp	r1, r24
    4a44:	4c f5       	brge	.+82     	; 0x4a98 <LCD_enuInit+0x314>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a46:	69 8d       	ldd	r22, Y+25	; 0x19
    4a48:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a4e:	20 e0       	ldi	r18, 0x00	; 0
    4a50:	30 e0       	ldi	r19, 0x00	; 0
    4a52:	40 e2       	ldi	r20, 0x20	; 32
    4a54:	51 e4       	ldi	r21, 0x41	; 65
    4a56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a5a:	dc 01       	movw	r26, r24
    4a5c:	cb 01       	movw	r24, r22
    4a5e:	bc 01       	movw	r22, r24
    4a60:	cd 01       	movw	r24, r26
    4a62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a66:	dc 01       	movw	r26, r24
    4a68:	cb 01       	movw	r24, r22
    4a6a:	9c 8b       	std	Y+20, r25	; 0x14
    4a6c:	8b 8b       	std	Y+19, r24	; 0x13
    4a6e:	0f c0       	rjmp	.+30     	; 0x4a8e <LCD_enuInit+0x30a>
    4a70:	89 e1       	ldi	r24, 0x19	; 25
    4a72:	90 e0       	ldi	r25, 0x00	; 0
    4a74:	9a 8b       	std	Y+18, r25	; 0x12
    4a76:	89 8b       	std	Y+17, r24	; 0x11
    4a78:	89 89       	ldd	r24, Y+17	; 0x11
    4a7a:	9a 89       	ldd	r25, Y+18	; 0x12
    4a7c:	01 97       	sbiw	r24, 0x01	; 1
    4a7e:	f1 f7       	brne	.-4      	; 0x4a7c <LCD_enuInit+0x2f8>
    4a80:	9a 8b       	std	Y+18, r25	; 0x12
    4a82:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a84:	8b 89       	ldd	r24, Y+19	; 0x13
    4a86:	9c 89       	ldd	r25, Y+20	; 0x14
    4a88:	01 97       	sbiw	r24, 0x01	; 1
    4a8a:	9c 8b       	std	Y+20, r25	; 0x14
    4a8c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a8e:	8b 89       	ldd	r24, Y+19	; 0x13
    4a90:	9c 89       	ldd	r25, Y+20	; 0x14
    4a92:	00 97       	sbiw	r24, 0x00	; 0
    4a94:	69 f7       	brne	.-38     	; 0x4a70 <LCD_enuInit+0x2ec>
    4a96:	14 c0       	rjmp	.+40     	; 0x4ac0 <LCD_enuInit+0x33c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a98:	6d 89       	ldd	r22, Y+21	; 0x15
    4a9a:	7e 89       	ldd	r23, Y+22	; 0x16
    4a9c:	8f 89       	ldd	r24, Y+23	; 0x17
    4a9e:	98 8d       	ldd	r25, Y+24	; 0x18
    4aa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4aa4:	dc 01       	movw	r26, r24
    4aa6:	cb 01       	movw	r24, r22
    4aa8:	9c 8b       	std	Y+20, r25	; 0x14
    4aaa:	8b 8b       	std	Y+19, r24	; 0x13
    4aac:	8b 89       	ldd	r24, Y+19	; 0x13
    4aae:	9c 89       	ldd	r25, Y+20	; 0x14
    4ab0:	98 8b       	std	Y+16, r25	; 0x10
    4ab2:	8f 87       	std	Y+15, r24	; 0x0f
    4ab4:	8f 85       	ldd	r24, Y+15	; 0x0f
    4ab6:	98 89       	ldd	r25, Y+16	; 0x10
    4ab8:	01 97       	sbiw	r24, 0x01	; 1
    4aba:	f1 f7       	brne	.-4      	; 0x4ab8 <LCD_enuInit+0x334>
    4abc:	98 8b       	std	Y+16, r25	; 0x10
    4abe:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		/* Clear Display */
		LCD_invoidSendCommand(0x01);
    4ac0:	81 e0       	ldi	r24, 0x01	; 1
    4ac2:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>
    4ac6:	80 e0       	ldi	r24, 0x00	; 0
    4ac8:	90 e0       	ldi	r25, 0x00	; 0
    4aca:	a0 e0       	ldi	r26, 0x00	; 0
    4acc:	b0 e4       	ldi	r27, 0x40	; 64
    4ace:	8b 87       	std	Y+11, r24	; 0x0b
    4ad0:	9c 87       	std	Y+12, r25	; 0x0c
    4ad2:	ad 87       	std	Y+13, r26	; 0x0d
    4ad4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ad6:	6b 85       	ldd	r22, Y+11	; 0x0b
    4ad8:	7c 85       	ldd	r23, Y+12	; 0x0c
    4ada:	8d 85       	ldd	r24, Y+13	; 0x0d
    4adc:	9e 85       	ldd	r25, Y+14	; 0x0e
    4ade:	20 e0       	ldi	r18, 0x00	; 0
    4ae0:	30 e0       	ldi	r19, 0x00	; 0
    4ae2:	4a e7       	ldi	r20, 0x7A	; 122
    4ae4:	53 e4       	ldi	r21, 0x43	; 67
    4ae6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4aea:	dc 01       	movw	r26, r24
    4aec:	cb 01       	movw	r24, r22
    4aee:	8f 83       	std	Y+7, r24	; 0x07
    4af0:	98 87       	std	Y+8, r25	; 0x08
    4af2:	a9 87       	std	Y+9, r26	; 0x09
    4af4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4af6:	6f 81       	ldd	r22, Y+7	; 0x07
    4af8:	78 85       	ldd	r23, Y+8	; 0x08
    4afa:	89 85       	ldd	r24, Y+9	; 0x09
    4afc:	9a 85       	ldd	r25, Y+10	; 0x0a
    4afe:	20 e0       	ldi	r18, 0x00	; 0
    4b00:	30 e0       	ldi	r19, 0x00	; 0
    4b02:	40 e8       	ldi	r20, 0x80	; 128
    4b04:	5f e3       	ldi	r21, 0x3F	; 63
    4b06:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4b0a:	88 23       	and	r24, r24
    4b0c:	2c f4       	brge	.+10     	; 0x4b18 <LCD_enuInit+0x394>
		__ticks = 1;
    4b0e:	81 e0       	ldi	r24, 0x01	; 1
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	9e 83       	std	Y+6, r25	; 0x06
    4b14:	8d 83       	std	Y+5, r24	; 0x05
    4b16:	3f c0       	rjmp	.+126    	; 0x4b96 <LCD_enuInit+0x412>
	else if (__tmp > 65535)
    4b18:	6f 81       	ldd	r22, Y+7	; 0x07
    4b1a:	78 85       	ldd	r23, Y+8	; 0x08
    4b1c:	89 85       	ldd	r24, Y+9	; 0x09
    4b1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b20:	20 e0       	ldi	r18, 0x00	; 0
    4b22:	3f ef       	ldi	r19, 0xFF	; 255
    4b24:	4f e7       	ldi	r20, 0x7F	; 127
    4b26:	57 e4       	ldi	r21, 0x47	; 71
    4b28:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4b2c:	18 16       	cp	r1, r24
    4b2e:	4c f5       	brge	.+82     	; 0x4b82 <LCD_enuInit+0x3fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b30:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b32:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b34:	8d 85       	ldd	r24, Y+13	; 0x0d
    4b36:	9e 85       	ldd	r25, Y+14	; 0x0e
    4b38:	20 e0       	ldi	r18, 0x00	; 0
    4b3a:	30 e0       	ldi	r19, 0x00	; 0
    4b3c:	40 e2       	ldi	r20, 0x20	; 32
    4b3e:	51 e4       	ldi	r21, 0x41	; 65
    4b40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b44:	dc 01       	movw	r26, r24
    4b46:	cb 01       	movw	r24, r22
    4b48:	bc 01       	movw	r22, r24
    4b4a:	cd 01       	movw	r24, r26
    4b4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b50:	dc 01       	movw	r26, r24
    4b52:	cb 01       	movw	r24, r22
    4b54:	9e 83       	std	Y+6, r25	; 0x06
    4b56:	8d 83       	std	Y+5, r24	; 0x05
    4b58:	0f c0       	rjmp	.+30     	; 0x4b78 <LCD_enuInit+0x3f4>
    4b5a:	89 e1       	ldi	r24, 0x19	; 25
    4b5c:	90 e0       	ldi	r25, 0x00	; 0
    4b5e:	9c 83       	std	Y+4, r25	; 0x04
    4b60:	8b 83       	std	Y+3, r24	; 0x03
    4b62:	8b 81       	ldd	r24, Y+3	; 0x03
    4b64:	9c 81       	ldd	r25, Y+4	; 0x04
    4b66:	01 97       	sbiw	r24, 0x01	; 1
    4b68:	f1 f7       	brne	.-4      	; 0x4b66 <LCD_enuInit+0x3e2>
    4b6a:	9c 83       	std	Y+4, r25	; 0x04
    4b6c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b6e:	8d 81       	ldd	r24, Y+5	; 0x05
    4b70:	9e 81       	ldd	r25, Y+6	; 0x06
    4b72:	01 97       	sbiw	r24, 0x01	; 1
    4b74:	9e 83       	std	Y+6, r25	; 0x06
    4b76:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b78:	8d 81       	ldd	r24, Y+5	; 0x05
    4b7a:	9e 81       	ldd	r25, Y+6	; 0x06
    4b7c:	00 97       	sbiw	r24, 0x00	; 0
    4b7e:	69 f7       	brne	.-38     	; 0x4b5a <LCD_enuInit+0x3d6>
    4b80:	14 c0       	rjmp	.+40     	; 0x4baa <LCD_enuInit+0x426>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b82:	6f 81       	ldd	r22, Y+7	; 0x07
    4b84:	78 85       	ldd	r23, Y+8	; 0x08
    4b86:	89 85       	ldd	r24, Y+9	; 0x09
    4b88:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b8e:	dc 01       	movw	r26, r24
    4b90:	cb 01       	movw	r24, r22
    4b92:	9e 83       	std	Y+6, r25	; 0x06
    4b94:	8d 83       	std	Y+5, r24	; 0x05
    4b96:	8d 81       	ldd	r24, Y+5	; 0x05
    4b98:	9e 81       	ldd	r25, Y+6	; 0x06
    4b9a:	9a 83       	std	Y+2, r25	; 0x02
    4b9c:	89 83       	std	Y+1, r24	; 0x01
    4b9e:	89 81       	ldd	r24, Y+1	; 0x01
    4ba0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ba2:	01 97       	sbiw	r24, 0x01	; 1
    4ba4:	f1 f7       	brne	.-4      	; 0x4ba2 <LCD_enuInit+0x41e>
    4ba6:	9a 83       	std	Y+2, r25	; 0x02
    4ba8:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
		/* Entry Mode */
		LCD_invoidSendCommand(0x06);
    4baa:	86 e0       	ldi	r24, 0x06	; 6
    4bac:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>

	return Local_enuErrorState;
    4bb0:	89 ad       	ldd	r24, Y+57	; 0x39
}
    4bb2:	e9 96       	adiw	r28, 0x39	; 57
    4bb4:	0f b6       	in	r0, 0x3f	; 63
    4bb6:	f8 94       	cli
    4bb8:	de bf       	out	0x3e, r29	; 62
    4bba:	0f be       	out	0x3f, r0	; 63
    4bbc:	cd bf       	out	0x3d, r28	; 61
    4bbe:	cf 91       	pop	r28
    4bc0:	df 91       	pop	r29
    4bc2:	08 95       	ret

00004bc4 <LCD_enuSendCommand>:

ES_t LCD_enuSendCommand(u8 Copy_u8Command)
{
    4bc4:	df 93       	push	r29
    4bc6:	cf 93       	push	r28
    4bc8:	00 d0       	rcall	.+0      	; 0x4bca <LCD_enuSendCommand+0x6>
    4bca:	cd b7       	in	r28, 0x3d	; 61
    4bcc:	de b7       	in	r29, 0x3e	; 62
    4bce:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4bd0:	19 82       	std	Y+1, r1	; 0x01

	/* Set RS as Command */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8LOW);
    4bd2:	80 e0       	ldi	r24, 0x00	; 0
    4bd4:	60 e0       	ldi	r22, 0x00	; 0
    4bd6:	40 e0       	ldi	r20, 0x00	; 0
    4bd8:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

	LCD_voidLatch(Copy_u8Command);
    4bdc:	8a 81       	ldd	r24, Y+2	; 0x02
    4bde:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>

	return Local_enuErrorState;
    4be2:	89 81       	ldd	r24, Y+1	; 0x01
}
    4be4:	0f 90       	pop	r0
    4be6:	0f 90       	pop	r0
    4be8:	cf 91       	pop	r28
    4bea:	df 91       	pop	r29
    4bec:	08 95       	ret

00004bee <LCD_enuDisplayChar>:

ES_t LCD_enuDisplayChar(u8 Copy_u8Char)
{
    4bee:	df 93       	push	r29
    4bf0:	cf 93       	push	r28
    4bf2:	00 d0       	rcall	.+0      	; 0x4bf4 <LCD_enuDisplayChar+0x6>
    4bf4:	cd b7       	in	r28, 0x3d	; 61
    4bf6:	de b7       	in	r29, 0x3e	; 62
    4bf8:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4bfa:	19 82       	std	Y+1, r1	; 0x01

	/* Set RS as DATA */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4bfc:	80 e0       	ldi	r24, 0x00	; 0
    4bfe:	60 e0       	ldi	r22, 0x00	; 0
    4c00:	41 e0       	ldi	r20, 0x01	; 1
    4c02:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

	LCD_voidLatch(Copy_u8Char);
    4c06:	8a 81       	ldd	r24, Y+2	; 0x02
    4c08:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>

	return Local_enuErrorState;
    4c0c:	89 81       	ldd	r24, Y+1	; 0x01
}
    4c0e:	0f 90       	pop	r0
    4c10:	0f 90       	pop	r0
    4c12:	cf 91       	pop	r28
    4c14:	df 91       	pop	r29
    4c16:	08 95       	ret

00004c18 <LCD_enuDisplayNumber>:

ES_t LCD_enuDisplayNumber(u32 Copy_u8Number)
{
    4c18:	df 93       	push	r29
    4c1a:	cf 93       	push	r28
    4c1c:	cd b7       	in	r28, 0x3d	; 61
    4c1e:	de b7       	in	r29, 0x3e	; 62
    4c20:	2a 97       	sbiw	r28, 0x0a	; 10
    4c22:	0f b6       	in	r0, 0x3f	; 63
    4c24:	f8 94       	cli
    4c26:	de bf       	out	0x3e, r29	; 62
    4c28:	0f be       	out	0x3f, r0	; 63
    4c2a:	cd bf       	out	0x3d, r28	; 61
    4c2c:	6f 83       	std	Y+7, r22	; 0x07
    4c2e:	78 87       	std	Y+8, r23	; 0x08
    4c30:	89 87       	std	Y+9, r24	; 0x09
    4c32:	9a 87       	std	Y+10, r25	; 0x0a
	ES_t Local_enuErrorState = ES_NOK;
    4c34:	1e 82       	std	Y+6, r1	; 0x06

	u8 Local_u8Digit = 0;
    4c36:	1d 82       	std	Y+5, r1	; 0x05
	f64 Local_f64NumberOfDigits = 1;
    4c38:	80 e0       	ldi	r24, 0x00	; 0
    4c3a:	90 e0       	ldi	r25, 0x00	; 0
    4c3c:	a0 e8       	ldi	r26, 0x80	; 128
    4c3e:	bf e3       	ldi	r27, 0x3F	; 63
    4c40:	89 83       	std	Y+1, r24	; 0x01
    4c42:	9a 83       	std	Y+2, r25	; 0x02
    4c44:	ab 83       	std	Y+3, r26	; 0x03
    4c46:	bc 83       	std	Y+4, r27	; 0x04

	/* Set RS as DATA */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4c48:	80 e0       	ldi	r24, 0x00	; 0
    4c4a:	60 e0       	ldi	r22, 0x00	; 0
    4c4c:	41 e0       	ldi	r20, 0x01	; 1
    4c4e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

	if(Copy_u8Number < 10)
    4c52:	8f 81       	ldd	r24, Y+7	; 0x07
    4c54:	98 85       	ldd	r25, Y+8	; 0x08
    4c56:	a9 85       	ldd	r26, Y+9	; 0x09
    4c58:	ba 85       	ldd	r27, Y+10	; 0x0a
    4c5a:	8a 30       	cpi	r24, 0x0A	; 10
    4c5c:	91 05       	cpc	r25, r1
    4c5e:	a1 05       	cpc	r26, r1
    4c60:	b1 05       	cpc	r27, r1
    4c62:	08 f5       	brcc	.+66     	; 0x4ca6 <LCD_enuDisplayNumber+0x8e>
	{
		Copy_u8Number += 48;
    4c64:	8f 81       	ldd	r24, Y+7	; 0x07
    4c66:	98 85       	ldd	r25, Y+8	; 0x08
    4c68:	a9 85       	ldd	r26, Y+9	; 0x09
    4c6a:	ba 85       	ldd	r27, Y+10	; 0x0a
    4c6c:	c0 96       	adiw	r24, 0x30	; 48
    4c6e:	a1 1d       	adc	r26, r1
    4c70:	b1 1d       	adc	r27, r1
    4c72:	8f 83       	std	Y+7, r24	; 0x07
    4c74:	98 87       	std	Y+8, r25	; 0x08
    4c76:	a9 87       	std	Y+9, r26	; 0x09
    4c78:	ba 87       	std	Y+10, r27	; 0x0a
		LCD_voidLatch(Copy_u8Number);
    4c7a:	8f 81       	ldd	r24, Y+7	; 0x07
    4c7c:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>
		Local_enuErrorState = ES_OK;
    4c80:	81 e0       	ldi	r24, 0x01	; 1
    4c82:	8e 83       	std	Y+6, r24	; 0x06
    4c84:	9a c0       	rjmp	.+308    	; 0x4dba <LCD_enuDisplayNumber+0x1a2>
	else
	{
		/* Count digits of number log10 */
		while(Local_f64NumberOfDigits < Copy_u8Number)
		{
			Local_f64NumberOfDigits *= 10;
    4c86:	69 81       	ldd	r22, Y+1	; 0x01
    4c88:	7a 81       	ldd	r23, Y+2	; 0x02
    4c8a:	8b 81       	ldd	r24, Y+3	; 0x03
    4c8c:	9c 81       	ldd	r25, Y+4	; 0x04
    4c8e:	20 e0       	ldi	r18, 0x00	; 0
    4c90:	30 e0       	ldi	r19, 0x00	; 0
    4c92:	40 e2       	ldi	r20, 0x20	; 32
    4c94:	51 e4       	ldi	r21, 0x41	; 65
    4c96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c9a:	dc 01       	movw	r26, r24
    4c9c:	cb 01       	movw	r24, r22
    4c9e:	89 83       	std	Y+1, r24	; 0x01
    4ca0:	9a 83       	std	Y+2, r25	; 0x02
    4ca2:	ab 83       	std	Y+3, r26	; 0x03
    4ca4:	bc 83       	std	Y+4, r27	; 0x04
		Local_enuErrorState = ES_OK;
	}
	else
	{
		/* Count digits of number log10 */
		while(Local_f64NumberOfDigits < Copy_u8Number)
    4ca6:	6f 81       	ldd	r22, Y+7	; 0x07
    4ca8:	78 85       	ldd	r23, Y+8	; 0x08
    4caa:	89 85       	ldd	r24, Y+9	; 0x09
    4cac:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cae:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    4cb2:	dc 01       	movw	r26, r24
    4cb4:	cb 01       	movw	r24, r22
    4cb6:	bc 01       	movw	r22, r24
    4cb8:	cd 01       	movw	r24, r26
    4cba:	29 81       	ldd	r18, Y+1	; 0x01
    4cbc:	3a 81       	ldd	r19, Y+2	; 0x02
    4cbe:	4b 81       	ldd	r20, Y+3	; 0x03
    4cc0:	5c 81       	ldd	r21, Y+4	; 0x04
    4cc2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4cc6:	18 16       	cp	r1, r24
    4cc8:	f4 f2       	brlt	.-68     	; 0x4c86 <LCD_enuDisplayNumber+0x6e>
		{
			Local_f64NumberOfDigits *= 10;
		}
		Local_f64NumberOfDigits /= 10;
    4cca:	69 81       	ldd	r22, Y+1	; 0x01
    4ccc:	7a 81       	ldd	r23, Y+2	; 0x02
    4cce:	8b 81       	ldd	r24, Y+3	; 0x03
    4cd0:	9c 81       	ldd	r25, Y+4	; 0x04
    4cd2:	20 e0       	ldi	r18, 0x00	; 0
    4cd4:	30 e0       	ldi	r19, 0x00	; 0
    4cd6:	40 e2       	ldi	r20, 0x20	; 32
    4cd8:	51 e4       	ldi	r21, 0x41	; 65
    4cda:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    4cde:	dc 01       	movw	r26, r24
    4ce0:	cb 01       	movw	r24, r22
    4ce2:	89 83       	std	Y+1, r24	; 0x01
    4ce4:	9a 83       	std	Y+2, r25	; 0x02
    4ce6:	ab 83       	std	Y+3, r26	; 0x03
    4ce8:	bc 83       	std	Y+4, r27	; 0x04
    4cea:	58 c0       	rjmp	.+176    	; 0x4d9c <LCD_enuDisplayNumber+0x184>

		while(Local_f64NumberOfDigits >= 1)
		{
			Local_u8Digit = (u8)(Copy_u8Number / Local_f64NumberOfDigits);
    4cec:	6f 81       	ldd	r22, Y+7	; 0x07
    4cee:	78 85       	ldd	r23, Y+8	; 0x08
    4cf0:	89 85       	ldd	r24, Y+9	; 0x09
    4cf2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cf4:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    4cf8:	dc 01       	movw	r26, r24
    4cfa:	cb 01       	movw	r24, r22
    4cfc:	bc 01       	movw	r22, r24
    4cfe:	cd 01       	movw	r24, r26
    4d00:	29 81       	ldd	r18, Y+1	; 0x01
    4d02:	3a 81       	ldd	r19, Y+2	; 0x02
    4d04:	4b 81       	ldd	r20, Y+3	; 0x03
    4d06:	5c 81       	ldd	r21, Y+4	; 0x04
    4d08:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    4d0c:	dc 01       	movw	r26, r24
    4d0e:	cb 01       	movw	r24, r22
    4d10:	bc 01       	movw	r22, r24
    4d12:	cd 01       	movw	r24, r26
    4d14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d18:	dc 01       	movw	r26, r24
    4d1a:	cb 01       	movw	r24, r22
    4d1c:	8d 83       	std	Y+5, r24	; 0x05
			Copy_u8Number -= ((u32)(Local_u8Digit * Local_f64NumberOfDigits));
    4d1e:	8d 81       	ldd	r24, Y+5	; 0x05
    4d20:	88 2f       	mov	r24, r24
    4d22:	90 e0       	ldi	r25, 0x00	; 0
    4d24:	aa 27       	eor	r26, r26
    4d26:	97 fd       	sbrc	r25, 7
    4d28:	a0 95       	com	r26
    4d2a:	ba 2f       	mov	r27, r26
    4d2c:	bc 01       	movw	r22, r24
    4d2e:	cd 01       	movw	r24, r26
    4d30:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatsisf>
    4d34:	dc 01       	movw	r26, r24
    4d36:	cb 01       	movw	r24, r22
    4d38:	bc 01       	movw	r22, r24
    4d3a:	cd 01       	movw	r24, r26
    4d3c:	29 81       	ldd	r18, Y+1	; 0x01
    4d3e:	3a 81       	ldd	r19, Y+2	; 0x02
    4d40:	4b 81       	ldd	r20, Y+3	; 0x03
    4d42:	5c 81       	ldd	r21, Y+4	; 0x04
    4d44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d48:	dc 01       	movw	r26, r24
    4d4a:	cb 01       	movw	r24, r22
    4d4c:	bc 01       	movw	r22, r24
    4d4e:	cd 01       	movw	r24, r26
    4d50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d54:	9b 01       	movw	r18, r22
    4d56:	ac 01       	movw	r20, r24
    4d58:	8f 81       	ldd	r24, Y+7	; 0x07
    4d5a:	98 85       	ldd	r25, Y+8	; 0x08
    4d5c:	a9 85       	ldd	r26, Y+9	; 0x09
    4d5e:	ba 85       	ldd	r27, Y+10	; 0x0a
    4d60:	82 1b       	sub	r24, r18
    4d62:	93 0b       	sbc	r25, r19
    4d64:	a4 0b       	sbc	r26, r20
    4d66:	b5 0b       	sbc	r27, r21
    4d68:	8f 83       	std	Y+7, r24	; 0x07
    4d6a:	98 87       	std	Y+8, r25	; 0x08
    4d6c:	a9 87       	std	Y+9, r26	; 0x09
    4d6e:	ba 87       	std	Y+10, r27	; 0x0a
			Local_u8Digit += 48;
    4d70:	8d 81       	ldd	r24, Y+5	; 0x05
    4d72:	80 5d       	subi	r24, 0xD0	; 208
    4d74:	8d 83       	std	Y+5, r24	; 0x05
			Local_f64NumberOfDigits /= 10;
    4d76:	69 81       	ldd	r22, Y+1	; 0x01
    4d78:	7a 81       	ldd	r23, Y+2	; 0x02
    4d7a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d7c:	9c 81       	ldd	r25, Y+4	; 0x04
    4d7e:	20 e0       	ldi	r18, 0x00	; 0
    4d80:	30 e0       	ldi	r19, 0x00	; 0
    4d82:	40 e2       	ldi	r20, 0x20	; 32
    4d84:	51 e4       	ldi	r21, 0x41	; 65
    4d86:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    4d8a:	dc 01       	movw	r26, r24
    4d8c:	cb 01       	movw	r24, r22
    4d8e:	89 83       	std	Y+1, r24	; 0x01
    4d90:	9a 83       	std	Y+2, r25	; 0x02
    4d92:	ab 83       	std	Y+3, r26	; 0x03
    4d94:	bc 83       	std	Y+4, r27	; 0x04

			LCD_voidLatch(Local_u8Digit);
    4d96:	8d 81       	ldd	r24, Y+5	; 0x05
    4d98:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>
		{
			Local_f64NumberOfDigits *= 10;
		}
		Local_f64NumberOfDigits /= 10;

		while(Local_f64NumberOfDigits >= 1)
    4d9c:	69 81       	ldd	r22, Y+1	; 0x01
    4d9e:	7a 81       	ldd	r23, Y+2	; 0x02
    4da0:	8b 81       	ldd	r24, Y+3	; 0x03
    4da2:	9c 81       	ldd	r25, Y+4	; 0x04
    4da4:	20 e0       	ldi	r18, 0x00	; 0
    4da6:	30 e0       	ldi	r19, 0x00	; 0
    4da8:	40 e8       	ldi	r20, 0x80	; 128
    4daa:	5f e3       	ldi	r21, 0x3F	; 63
    4dac:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
    4db0:	88 23       	and	r24, r24
    4db2:	0c f0       	brlt	.+2      	; 0x4db6 <LCD_enuDisplayNumber+0x19e>
    4db4:	9b cf       	rjmp	.-202    	; 0x4cec <LCD_enuDisplayNumber+0xd4>
			Local_u8Digit += 48;
			Local_f64NumberOfDigits /= 10;

			LCD_voidLatch(Local_u8Digit);
		}
		Local_enuErrorState = ES_OK;
    4db6:	81 e0       	ldi	r24, 0x01	; 1
    4db8:	8e 83       	std	Y+6, r24	; 0x06
	}


	return Local_enuErrorState;
    4dba:	8e 81       	ldd	r24, Y+6	; 0x06
}
    4dbc:	2a 96       	adiw	r28, 0x0a	; 10
    4dbe:	0f b6       	in	r0, 0x3f	; 63
    4dc0:	f8 94       	cli
    4dc2:	de bf       	out	0x3e, r29	; 62
    4dc4:	0f be       	out	0x3f, r0	; 63
    4dc6:	cd bf       	out	0x3d, r28	; 61
    4dc8:	cf 91       	pop	r28
    4dca:	df 91       	pop	r29
    4dcc:	08 95       	ret

00004dce <LCD_enuDisplaySpecialChar>:

ES_t LCD_enuDisplaySpecialChar(u8 Copy_u8RowPosition , u8 Copy_u8ColPosition, u8 *Copy_pu8ExtraChar)
{
    4dce:	df 93       	push	r29
    4dd0:	cf 93       	push	r28
    4dd2:	00 d0       	rcall	.+0      	; 0x4dd4 <LCD_enuDisplaySpecialChar+0x6>
    4dd4:	00 d0       	rcall	.+0      	; 0x4dd6 <LCD_enuDisplaySpecialChar+0x8>
    4dd6:	00 d0       	rcall	.+0      	; 0x4dd8 <LCD_enuDisplaySpecialChar+0xa>
    4dd8:	cd b7       	in	r28, 0x3d	; 61
    4dda:	de b7       	in	r29, 0x3e	; 62
    4ddc:	8b 83       	std	Y+3, r24	; 0x03
    4dde:	6c 83       	std	Y+4, r22	; 0x04
    4de0:	5e 83       	std	Y+6, r21	; 0x06
    4de2:	4d 83       	std	Y+5, r20	; 0x05
	ES_t Local_enuErrorState = ES_NOK;
    4de4:	1a 82       	std	Y+2, r1	; 0x02

	u8 Local_u8Iterator = 0;
    4de6:	19 82       	std	Y+1, r1	; 0x01

		LCD_invoidSendCommand(0x40);
    4de8:	80 e4       	ldi	r24, 0x40	; 64
    4dea:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>

		/* Set RS as DATA */
		DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4dee:	80 e0       	ldi	r24, 0x00	; 0
    4df0:	60 e0       	ldi	r22, 0x00	; 0
    4df2:	41 e0       	ldi	r20, 0x01	; 1
    4df4:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

		for(Local_u8Iterator = 0; Local_u8Iterator < 8; Local_u8Iterator++)
    4df8:	19 82       	std	Y+1, r1	; 0x01
    4dfa:	0e c0       	rjmp	.+28     	; 0x4e18 <LCD_enuDisplaySpecialChar+0x4a>
		{
			LCD_voidLatch(Copy_pu8ExtraChar[Local_u8Iterator]);
    4dfc:	89 81       	ldd	r24, Y+1	; 0x01
    4dfe:	28 2f       	mov	r18, r24
    4e00:	30 e0       	ldi	r19, 0x00	; 0
    4e02:	8d 81       	ldd	r24, Y+5	; 0x05
    4e04:	9e 81       	ldd	r25, Y+6	; 0x06
    4e06:	fc 01       	movw	r30, r24
    4e08:	e2 0f       	add	r30, r18
    4e0a:	f3 1f       	adc	r31, r19
    4e0c:	80 81       	ld	r24, Z
    4e0e:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>
		LCD_invoidSendCommand(0x40);

		/* Set RS as DATA */
		DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);

		for(Local_u8Iterator = 0; Local_u8Iterator < 8; Local_u8Iterator++)
    4e12:	89 81       	ldd	r24, Y+1	; 0x01
    4e14:	8f 5f       	subi	r24, 0xFF	; 255
    4e16:	89 83       	std	Y+1, r24	; 0x01
    4e18:	89 81       	ldd	r24, Y+1	; 0x01
    4e1a:	88 30       	cpi	r24, 0x08	; 8
    4e1c:	78 f3       	brcs	.-34     	; 0x4dfc <LCD_enuDisplaySpecialChar+0x2e>
		{
			LCD_voidLatch(Copy_pu8ExtraChar[Local_u8Iterator]);
		}

		LCD_enuLocalGoToXY(Copy_u8RowPosition, Copy_u8ColPosition);
    4e1e:	8b 81       	ldd	r24, Y+3	; 0x03
    4e20:	6c 81       	ldd	r22, Y+4	; 0x04
    4e22:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <LCD_enuLocalGoToXY>

		DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4e26:	80 e0       	ldi	r24, 0x00	; 0
    4e28:	60 e0       	ldi	r22, 0x00	; 0
    4e2a:	41 e0       	ldi	r20, 0x01	; 1
    4e2c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		LCD_voidLatch(0);
    4e30:	80 e0       	ldi	r24, 0x00	; 0
    4e32:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>

	return Local_enuErrorState;
    4e36:	8a 81       	ldd	r24, Y+2	; 0x02
}
    4e38:	26 96       	adiw	r28, 0x06	; 6
    4e3a:	0f b6       	in	r0, 0x3f	; 63
    4e3c:	f8 94       	cli
    4e3e:	de bf       	out	0x3e, r29	; 62
    4e40:	0f be       	out	0x3f, r0	; 63
    4e42:	cd bf       	out	0x3d, r28	; 61
    4e44:	cf 91       	pop	r28
    4e46:	df 91       	pop	r29
    4e48:	08 95       	ret

00004e4a <LCD_enuSendString>:



ES_t LCD_enuSendString(u8 *Copy_pu8string)
{
    4e4a:	df 93       	push	r29
    4e4c:	cf 93       	push	r28
    4e4e:	00 d0       	rcall	.+0      	; 0x4e50 <LCD_enuSendString+0x6>
    4e50:	00 d0       	rcall	.+0      	; 0x4e52 <LCD_enuSendString+0x8>
    4e52:	cd b7       	in	r28, 0x3d	; 61
    4e54:	de b7       	in	r29, 0x3e	; 62
    4e56:	9c 83       	std	Y+4, r25	; 0x04
    4e58:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    4e5a:	1a 82       	std	Y+2, r1	; 0x02

	u8 Local_u8Counter = 0;
    4e5c:	19 82       	std	Y+1, r1	; 0x01
	/* Set RS as DATA */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4e5e:	80 e0       	ldi	r24, 0x00	; 0
    4e60:	60 e0       	ldi	r22, 0x00	; 0
    4e62:	41 e0       	ldi	r20, 0x01	; 1
    4e64:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

	if(Copy_pu8string != NULL)
    4e68:	8b 81       	ldd	r24, Y+3	; 0x03
    4e6a:	9c 81       	ldd	r25, Y+4	; 0x04
    4e6c:	00 97       	sbiw	r24, 0x00	; 0
    4e6e:	09 f1       	breq	.+66     	; 0x4eb2 <LCD_enuSendString+0x68>
    4e70:	18 c0       	rjmp	.+48     	; 0x4ea2 <LCD_enuSendString+0x58>
	{
		while(*Copy_pu8string)
		{
			LCD_voidLatch(*Copy_pu8string);
    4e72:	eb 81       	ldd	r30, Y+3	; 0x03
    4e74:	fc 81       	ldd	r31, Y+4	; 0x04
    4e76:	80 81       	ld	r24, Z
    4e78:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>
			Copy_pu8string++;
    4e7c:	8b 81       	ldd	r24, Y+3	; 0x03
    4e7e:	9c 81       	ldd	r25, Y+4	; 0x04
    4e80:	01 96       	adiw	r24, 0x01	; 1
    4e82:	9c 83       	std	Y+4, r25	; 0x04
    4e84:	8b 83       	std	Y+3, r24	; 0x03
			Local_u8Counter++;
    4e86:	89 81       	ldd	r24, Y+1	; 0x01
    4e88:	8f 5f       	subi	r24, 0xFF	; 255
    4e8a:	89 83       	std	Y+1, r24	; 0x01

			/* Go to Second Line */
			if(Local_u8Counter == 16)
    4e8c:	89 81       	ldd	r24, Y+1	; 0x01
    4e8e:	80 31       	cpi	r24, 0x10	; 16
    4e90:	41 f4       	brne	.+16     	; 0x4ea2 <LCD_enuSendString+0x58>
			{
				LCD_invoidSendCommand(0xC0);
    4e92:	80 ec       	ldi	r24, 0xC0	; 192
    4e94:	0e 94 fd 28 	call	0x51fa	; 0x51fa <LCD_invoidSendCommand>
				DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
    4e98:	80 e0       	ldi	r24, 0x00	; 0
    4e9a:	60 e0       	ldi	r22, 0x00	; 0
    4e9c:	41 e0       	ldi	r20, 0x01	; 1
    4e9e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	/* Set RS as DATA */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);

	if(Copy_pu8string != NULL)
	{
		while(*Copy_pu8string)
    4ea2:	eb 81       	ldd	r30, Y+3	; 0x03
    4ea4:	fc 81       	ldd	r31, Y+4	; 0x04
    4ea6:	80 81       	ld	r24, Z
    4ea8:	88 23       	and	r24, r24
    4eaa:	19 f7       	brne	.-58     	; 0x4e72 <LCD_enuSendString+0x28>
			{
				LCD_invoidSendCommand(0xC0);
				DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8HIGH);
			}
		}
		Local_enuErrorState = ES_OK;
    4eac:	81 e0       	ldi	r24, 0x01	; 1
    4eae:	8a 83       	std	Y+2, r24	; 0x02
    4eb0:	02 c0       	rjmp	.+4      	; 0x4eb6 <LCD_enuSendString+0x6c>
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    4eb2:	82 e0       	ldi	r24, 0x02	; 2
    4eb4:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enuErrorState;
    4eb6:	8a 81       	ldd	r24, Y+2	; 0x02
}
    4eb8:	0f 90       	pop	r0
    4eba:	0f 90       	pop	r0
    4ebc:	0f 90       	pop	r0
    4ebe:	0f 90       	pop	r0
    4ec0:	cf 91       	pop	r28
    4ec2:	df 91       	pop	r29
    4ec4:	08 95       	ret

00004ec6 <LCD_enuSetPosition>:

ES_t LCD_enuSetPosition(u8 Copy_u8Row, u8 Copy_u8Column)
{
    4ec6:	df 93       	push	r29
    4ec8:	cf 93       	push	r28
    4eca:	00 d0       	rcall	.+0      	; 0x4ecc <LCD_enuSetPosition+0x6>
    4ecc:	0f 92       	push	r0
    4ece:	cd b7       	in	r28, 0x3d	; 61
    4ed0:	de b7       	in	r29, 0x3e	; 62
    4ed2:	8a 83       	std	Y+2, r24	; 0x02
    4ed4:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    4ed6:	19 82       	std	Y+1, r1	; 0x01

	Local_enuErrorState = LCD_enuLocalGoToXY(Copy_u8Row, Copy_u8Column);
    4ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    4eda:	6b 81       	ldd	r22, Y+3	; 0x03
    4edc:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <LCD_enuLocalGoToXY>
    4ee0:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    4ee2:	89 81       	ldd	r24, Y+1	; 0x01
}
    4ee4:	0f 90       	pop	r0
    4ee6:	0f 90       	pop	r0
    4ee8:	0f 90       	pop	r0
    4eea:	cf 91       	pop	r28
    4eec:	df 91       	pop	r29
    4eee:	08 95       	ret

00004ef0 <LCD_enuLocalGoToXY>:

static ES_t LCD_enuLocalGoToXY(u8 Copy_u8Row, u8 Copy_u8Column)
{
    4ef0:	df 93       	push	r29
    4ef2:	cf 93       	push	r28
    4ef4:	00 d0       	rcall	.+0      	; 0x4ef6 <LCD_enuLocalGoToXY+0x6>
    4ef6:	00 d0       	rcall	.+0      	; 0x4ef8 <LCD_enuLocalGoToXY+0x8>
    4ef8:	0f 92       	push	r0
    4efa:	cd b7       	in	r28, 0x3d	; 61
    4efc:	de b7       	in	r29, 0x3e	; 62
    4efe:	8c 83       	std	Y+4, r24	; 0x04
    4f00:	6d 83       	std	Y+5, r22	; 0x05
	ES_t Local_enuErrorState = ES_NOK;
    4f02:	19 82       	std	Y+1, r1	; 0x01

	u8 Local_u8RowLocation [] = {0x80 , 0xC0};
    4f04:	80 e8       	ldi	r24, 0x80	; 128
    4f06:	8a 83       	std	Y+2, r24	; 0x02
    4f08:	80 ec       	ldi	r24, 0xC0	; 192
    4f0a:	8b 83       	std	Y+3, r24	; 0x03
	LCD_enuSendCommand(Local_u8RowLocation [Copy_u8Row-1]+(Copy_u8Column-1));
    4f0c:	8c 81       	ldd	r24, Y+4	; 0x04
    4f0e:	88 2f       	mov	r24, r24
    4f10:	90 e0       	ldi	r25, 0x00	; 0
    4f12:	9c 01       	movw	r18, r24
    4f14:	21 50       	subi	r18, 0x01	; 1
    4f16:	30 40       	sbci	r19, 0x00	; 0
    4f18:	ce 01       	movw	r24, r28
    4f1a:	02 96       	adiw	r24, 0x02	; 2
    4f1c:	fc 01       	movw	r30, r24
    4f1e:	e2 0f       	add	r30, r18
    4f20:	f3 1f       	adc	r31, r19
    4f22:	90 81       	ld	r25, Z
    4f24:	8d 81       	ldd	r24, Y+5	; 0x05
    4f26:	89 0f       	add	r24, r25
    4f28:	81 50       	subi	r24, 0x01	; 1
    4f2a:	0e 94 e2 25 	call	0x4bc4	; 0x4bc4 <LCD_enuSendCommand>

	return Local_enuErrorState;
    4f2e:	89 81       	ldd	r24, Y+1	; 0x01
}
    4f30:	0f 90       	pop	r0
    4f32:	0f 90       	pop	r0
    4f34:	0f 90       	pop	r0
    4f36:	0f 90       	pop	r0
    4f38:	0f 90       	pop	r0
    4f3a:	cf 91       	pop	r28
    4f3c:	df 91       	pop	r29
    4f3e:	08 95       	ret

00004f40 <LCD_voidLatch>:
static void LCD_voidLatch(u8 Copy_u8Data)
{
    4f40:	df 93       	push	r29
    4f42:	cf 93       	push	r28
    4f44:	cd b7       	in	r28, 0x3d	; 61
    4f46:	de b7       	in	r29, 0x3e	; 62
    4f48:	6d 97       	sbiw	r28, 0x1d	; 29
    4f4a:	0f b6       	in	r0, 0x3f	; 63
    4f4c:	f8 94       	cli
    4f4e:	de bf       	out	0x3e, r29	; 62
    4f50:	0f be       	out	0x3f, r0	; 63
    4f52:	cd bf       	out	0x3d, r28	; 61
    4f54:	8d 8f       	std	Y+29, r24	; 0x1d
	/* Set RW as write operation, EN is Low */
	DIO_enuSetPinValue(RW_PORT, RW_PIN, DIO_u8LOW);
    4f56:	80 e0       	ldi	r24, 0x00	; 0
    4f58:	61 e0       	ldi	r22, 0x01	; 1
    4f5a:	40 e0       	ldi	r20, 0x00	; 0
    4f5c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8LOW);
    4f60:	80 e0       	ldi	r24, 0x00	; 0
    4f62:	62 e0       	ldi	r22, 0x02	; 2
    4f64:	40 e0       	ldi	r20, 0x00	; 0
    4f66:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	/* Write Command or Data */
	DIO_enuSetPinValue(D7_PORT, D7_PIN, ((Copy_u8Data >> 7) & 1));
    4f6a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f6c:	98 2f       	mov	r25, r24
    4f6e:	99 1f       	adc	r25, r25
    4f70:	99 27       	eor	r25, r25
    4f72:	99 1f       	adc	r25, r25
    4f74:	81 e0       	ldi	r24, 0x01	; 1
    4f76:	67 e0       	ldi	r22, 0x07	; 7
    4f78:	49 2f       	mov	r20, r25
    4f7a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(D6_PORT, D6_PIN, ((Copy_u8Data >> 6) & 1));
    4f7e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f80:	82 95       	swap	r24
    4f82:	86 95       	lsr	r24
    4f84:	86 95       	lsr	r24
    4f86:	83 70       	andi	r24, 0x03	; 3
    4f88:	98 2f       	mov	r25, r24
    4f8a:	91 70       	andi	r25, 0x01	; 1
    4f8c:	81 e0       	ldi	r24, 0x01	; 1
    4f8e:	66 e0       	ldi	r22, 0x06	; 6
    4f90:	49 2f       	mov	r20, r25
    4f92:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(D5_PORT, D5_PIN, ((Copy_u8Data >> 5) & 1));
    4f96:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f98:	82 95       	swap	r24
    4f9a:	86 95       	lsr	r24
    4f9c:	87 70       	andi	r24, 0x07	; 7
    4f9e:	98 2f       	mov	r25, r24
    4fa0:	91 70       	andi	r25, 0x01	; 1
    4fa2:	81 e0       	ldi	r24, 0x01	; 1
    4fa4:	65 e0       	ldi	r22, 0x05	; 5
    4fa6:	49 2f       	mov	r20, r25
    4fa8:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(D4_PORT, D4_PIN, ((Copy_u8Data >> 4) & 1));
    4fac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fae:	82 95       	swap	r24
    4fb0:	8f 70       	andi	r24, 0x0F	; 15
    4fb2:	98 2f       	mov	r25, r24
    4fb4:	91 70       	andi	r25, 0x01	; 1
    4fb6:	81 e0       	ldi	r24, 0x01	; 1
    4fb8:	64 e0       	ldi	r22, 0x04	; 4
    4fba:	49 2f       	mov	r20, r25
    4fbc:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	#if LCD_MODE == EIGHT_BIT
		DIO_enuSetPinValue(D3_PORT, D3_PIN, ((Copy_u8Data >> 3) & 1));
    4fc0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fc2:	86 95       	lsr	r24
    4fc4:	86 95       	lsr	r24
    4fc6:	86 95       	lsr	r24
    4fc8:	98 2f       	mov	r25, r24
    4fca:	91 70       	andi	r25, 0x01	; 1
    4fcc:	82 e0       	ldi	r24, 0x02	; 2
    4fce:	63 e0       	ldi	r22, 0x03	; 3
    4fd0:	49 2f       	mov	r20, r25
    4fd2:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D2_PORT, D2_PIN, ((Copy_u8Data >> 2) & 1));
    4fd6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fd8:	86 95       	lsr	r24
    4fda:	86 95       	lsr	r24
    4fdc:	98 2f       	mov	r25, r24
    4fde:	91 70       	andi	r25, 0x01	; 1
    4fe0:	82 e0       	ldi	r24, 0x02	; 2
    4fe2:	62 e0       	ldi	r22, 0x02	; 2
    4fe4:	49 2f       	mov	r20, r25
    4fe6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D1_PORT, D1_PIN, ((Copy_u8Data >> 1) & 1));
    4fea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fec:	86 95       	lsr	r24
    4fee:	98 2f       	mov	r25, r24
    4ff0:	91 70       	andi	r25, 0x01	; 1
    4ff2:	82 e0       	ldi	r24, 0x02	; 2
    4ff4:	61 e0       	ldi	r22, 0x01	; 1
    4ff6:	49 2f       	mov	r20, r25
    4ff8:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D0_PORT, D0_PIN, ((Copy_u8Data >> 0) & 1));
    4ffc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4ffe:	98 2f       	mov	r25, r24
    5000:	91 70       	andi	r25, 0x01	; 1
    5002:	82 e0       	ldi	r24, 0x02	; 2
    5004:	60 e0       	ldi	r22, 0x00	; 0
    5006:	49 2f       	mov	r20, r25
    5008:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D6_PORT, D6_PIN, ((Copy_u8Data >> 2) & 1));
		DIO_enuSetPinValue(D5_PORT, D5_PIN, ((Copy_u8Data >> 1) & 1));
		DIO_enuSetPinValue(D4_PORT, D4_PIN, ((Copy_u8Data >> 0) & 1));
	#endif
	/* Enable Latch "EN is High" because latch happen in rising edge*/
	DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8HIGH);
    500c:	80 e0       	ldi	r24, 0x00	; 0
    500e:	62 e0       	ldi	r22, 0x02	; 2
    5010:	41 e0       	ldi	r20, 0x01	; 1
    5012:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    5016:	80 e0       	ldi	r24, 0x00	; 0
    5018:	90 e0       	ldi	r25, 0x00	; 0
    501a:	a0 e2       	ldi	r26, 0x20	; 32
    501c:	b1 e4       	ldi	r27, 0x41	; 65
    501e:	89 8f       	std	Y+25, r24	; 0x19
    5020:	9a 8f       	std	Y+26, r25	; 0x1a
    5022:	ab 8f       	std	Y+27, r26	; 0x1b
    5024:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5026:	69 8d       	ldd	r22, Y+25	; 0x19
    5028:	7a 8d       	ldd	r23, Y+26	; 0x1a
    502a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    502c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    502e:	20 e0       	ldi	r18, 0x00	; 0
    5030:	30 e0       	ldi	r19, 0x00	; 0
    5032:	4a e7       	ldi	r20, 0x7A	; 122
    5034:	53 e4       	ldi	r21, 0x43	; 67
    5036:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    503a:	dc 01       	movw	r26, r24
    503c:	cb 01       	movw	r24, r22
    503e:	8d 8b       	std	Y+21, r24	; 0x15
    5040:	9e 8b       	std	Y+22, r25	; 0x16
    5042:	af 8b       	std	Y+23, r26	; 0x17
    5044:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5046:	6d 89       	ldd	r22, Y+21	; 0x15
    5048:	7e 89       	ldd	r23, Y+22	; 0x16
    504a:	8f 89       	ldd	r24, Y+23	; 0x17
    504c:	98 8d       	ldd	r25, Y+24	; 0x18
    504e:	20 e0       	ldi	r18, 0x00	; 0
    5050:	30 e0       	ldi	r19, 0x00	; 0
    5052:	40 e8       	ldi	r20, 0x80	; 128
    5054:	5f e3       	ldi	r21, 0x3F	; 63
    5056:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    505a:	88 23       	and	r24, r24
    505c:	2c f4       	brge	.+10     	; 0x5068 <LCD_voidLatch+0x128>
		__ticks = 1;
    505e:	81 e0       	ldi	r24, 0x01	; 1
    5060:	90 e0       	ldi	r25, 0x00	; 0
    5062:	9c 8b       	std	Y+20, r25	; 0x14
    5064:	8b 8b       	std	Y+19, r24	; 0x13
    5066:	3f c0       	rjmp	.+126    	; 0x50e6 <LCD_voidLatch+0x1a6>
	else if (__tmp > 65535)
    5068:	6d 89       	ldd	r22, Y+21	; 0x15
    506a:	7e 89       	ldd	r23, Y+22	; 0x16
    506c:	8f 89       	ldd	r24, Y+23	; 0x17
    506e:	98 8d       	ldd	r25, Y+24	; 0x18
    5070:	20 e0       	ldi	r18, 0x00	; 0
    5072:	3f ef       	ldi	r19, 0xFF	; 255
    5074:	4f e7       	ldi	r20, 0x7F	; 127
    5076:	57 e4       	ldi	r21, 0x47	; 71
    5078:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    507c:	18 16       	cp	r1, r24
    507e:	4c f5       	brge	.+82     	; 0x50d2 <LCD_voidLatch+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5080:	69 8d       	ldd	r22, Y+25	; 0x19
    5082:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5084:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5086:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5088:	20 e0       	ldi	r18, 0x00	; 0
    508a:	30 e0       	ldi	r19, 0x00	; 0
    508c:	40 e2       	ldi	r20, 0x20	; 32
    508e:	51 e4       	ldi	r21, 0x41	; 65
    5090:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5094:	dc 01       	movw	r26, r24
    5096:	cb 01       	movw	r24, r22
    5098:	bc 01       	movw	r22, r24
    509a:	cd 01       	movw	r24, r26
    509c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50a0:	dc 01       	movw	r26, r24
    50a2:	cb 01       	movw	r24, r22
    50a4:	9c 8b       	std	Y+20, r25	; 0x14
    50a6:	8b 8b       	std	Y+19, r24	; 0x13
    50a8:	0f c0       	rjmp	.+30     	; 0x50c8 <LCD_voidLatch+0x188>
    50aa:	89 e1       	ldi	r24, 0x19	; 25
    50ac:	90 e0       	ldi	r25, 0x00	; 0
    50ae:	9a 8b       	std	Y+18, r25	; 0x12
    50b0:	89 8b       	std	Y+17, r24	; 0x11
    50b2:	89 89       	ldd	r24, Y+17	; 0x11
    50b4:	9a 89       	ldd	r25, Y+18	; 0x12
    50b6:	01 97       	sbiw	r24, 0x01	; 1
    50b8:	f1 f7       	brne	.-4      	; 0x50b6 <LCD_voidLatch+0x176>
    50ba:	9a 8b       	std	Y+18, r25	; 0x12
    50bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50be:	8b 89       	ldd	r24, Y+19	; 0x13
    50c0:	9c 89       	ldd	r25, Y+20	; 0x14
    50c2:	01 97       	sbiw	r24, 0x01	; 1
    50c4:	9c 8b       	std	Y+20, r25	; 0x14
    50c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50c8:	8b 89       	ldd	r24, Y+19	; 0x13
    50ca:	9c 89       	ldd	r25, Y+20	; 0x14
    50cc:	00 97       	sbiw	r24, 0x00	; 0
    50ce:	69 f7       	brne	.-38     	; 0x50aa <LCD_voidLatch+0x16a>
    50d0:	14 c0       	rjmp	.+40     	; 0x50fa <LCD_voidLatch+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50d2:	6d 89       	ldd	r22, Y+21	; 0x15
    50d4:	7e 89       	ldd	r23, Y+22	; 0x16
    50d6:	8f 89       	ldd	r24, Y+23	; 0x17
    50d8:	98 8d       	ldd	r25, Y+24	; 0x18
    50da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50de:	dc 01       	movw	r26, r24
    50e0:	cb 01       	movw	r24, r22
    50e2:	9c 8b       	std	Y+20, r25	; 0x14
    50e4:	8b 8b       	std	Y+19, r24	; 0x13
    50e6:	8b 89       	ldd	r24, Y+19	; 0x13
    50e8:	9c 89       	ldd	r25, Y+20	; 0x14
    50ea:	98 8b       	std	Y+16, r25	; 0x10
    50ec:	8f 87       	std	Y+15, r24	; 0x0f
    50ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    50f0:	98 89       	ldd	r25, Y+16	; 0x10
    50f2:	01 97       	sbiw	r24, 0x01	; 1
    50f4:	f1 f7       	brne	.-4      	; 0x50f2 <LCD_voidLatch+0x1b2>
    50f6:	98 8b       	std	Y+16, r25	; 0x10
    50f8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10); /* Garbage Number */
	DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8LOW);
    50fa:	80 e0       	ldi	r24, 0x00	; 0
    50fc:	62 e0       	ldi	r22, 0x02	; 2
    50fe:	40 e0       	ldi	r20, 0x00	; 0
    5100:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    5104:	80 e0       	ldi	r24, 0x00	; 0
    5106:	90 e0       	ldi	r25, 0x00	; 0
    5108:	a0 e2       	ldi	r26, 0x20	; 32
    510a:	b1 e4       	ldi	r27, 0x41	; 65
    510c:	8b 87       	std	Y+11, r24	; 0x0b
    510e:	9c 87       	std	Y+12, r25	; 0x0c
    5110:	ad 87       	std	Y+13, r26	; 0x0d
    5112:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5114:	6b 85       	ldd	r22, Y+11	; 0x0b
    5116:	7c 85       	ldd	r23, Y+12	; 0x0c
    5118:	8d 85       	ldd	r24, Y+13	; 0x0d
    511a:	9e 85       	ldd	r25, Y+14	; 0x0e
    511c:	20 e0       	ldi	r18, 0x00	; 0
    511e:	30 e0       	ldi	r19, 0x00	; 0
    5120:	4a e7       	ldi	r20, 0x7A	; 122
    5122:	53 e4       	ldi	r21, 0x43	; 67
    5124:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5128:	dc 01       	movw	r26, r24
    512a:	cb 01       	movw	r24, r22
    512c:	8f 83       	std	Y+7, r24	; 0x07
    512e:	98 87       	std	Y+8, r25	; 0x08
    5130:	a9 87       	std	Y+9, r26	; 0x09
    5132:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5134:	6f 81       	ldd	r22, Y+7	; 0x07
    5136:	78 85       	ldd	r23, Y+8	; 0x08
    5138:	89 85       	ldd	r24, Y+9	; 0x09
    513a:	9a 85       	ldd	r25, Y+10	; 0x0a
    513c:	20 e0       	ldi	r18, 0x00	; 0
    513e:	30 e0       	ldi	r19, 0x00	; 0
    5140:	40 e8       	ldi	r20, 0x80	; 128
    5142:	5f e3       	ldi	r21, 0x3F	; 63
    5144:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    5148:	88 23       	and	r24, r24
    514a:	2c f4       	brge	.+10     	; 0x5156 <LCD_voidLatch+0x216>
		__ticks = 1;
    514c:	81 e0       	ldi	r24, 0x01	; 1
    514e:	90 e0       	ldi	r25, 0x00	; 0
    5150:	9e 83       	std	Y+6, r25	; 0x06
    5152:	8d 83       	std	Y+5, r24	; 0x05
    5154:	3f c0       	rjmp	.+126    	; 0x51d4 <LCD_voidLatch+0x294>
	else if (__tmp > 65535)
    5156:	6f 81       	ldd	r22, Y+7	; 0x07
    5158:	78 85       	ldd	r23, Y+8	; 0x08
    515a:	89 85       	ldd	r24, Y+9	; 0x09
    515c:	9a 85       	ldd	r25, Y+10	; 0x0a
    515e:	20 e0       	ldi	r18, 0x00	; 0
    5160:	3f ef       	ldi	r19, 0xFF	; 255
    5162:	4f e7       	ldi	r20, 0x7F	; 127
    5164:	57 e4       	ldi	r21, 0x47	; 71
    5166:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    516a:	18 16       	cp	r1, r24
    516c:	4c f5       	brge	.+82     	; 0x51c0 <LCD_voidLatch+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    516e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5170:	7c 85       	ldd	r23, Y+12	; 0x0c
    5172:	8d 85       	ldd	r24, Y+13	; 0x0d
    5174:	9e 85       	ldd	r25, Y+14	; 0x0e
    5176:	20 e0       	ldi	r18, 0x00	; 0
    5178:	30 e0       	ldi	r19, 0x00	; 0
    517a:	40 e2       	ldi	r20, 0x20	; 32
    517c:	51 e4       	ldi	r21, 0x41	; 65
    517e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5182:	dc 01       	movw	r26, r24
    5184:	cb 01       	movw	r24, r22
    5186:	bc 01       	movw	r22, r24
    5188:	cd 01       	movw	r24, r26
    518a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    518e:	dc 01       	movw	r26, r24
    5190:	cb 01       	movw	r24, r22
    5192:	9e 83       	std	Y+6, r25	; 0x06
    5194:	8d 83       	std	Y+5, r24	; 0x05
    5196:	0f c0       	rjmp	.+30     	; 0x51b6 <LCD_voidLatch+0x276>
    5198:	89 e1       	ldi	r24, 0x19	; 25
    519a:	90 e0       	ldi	r25, 0x00	; 0
    519c:	9c 83       	std	Y+4, r25	; 0x04
    519e:	8b 83       	std	Y+3, r24	; 0x03
    51a0:	8b 81       	ldd	r24, Y+3	; 0x03
    51a2:	9c 81       	ldd	r25, Y+4	; 0x04
    51a4:	01 97       	sbiw	r24, 0x01	; 1
    51a6:	f1 f7       	brne	.-4      	; 0x51a4 <LCD_voidLatch+0x264>
    51a8:	9c 83       	std	Y+4, r25	; 0x04
    51aa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51ac:	8d 81       	ldd	r24, Y+5	; 0x05
    51ae:	9e 81       	ldd	r25, Y+6	; 0x06
    51b0:	01 97       	sbiw	r24, 0x01	; 1
    51b2:	9e 83       	std	Y+6, r25	; 0x06
    51b4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    51b6:	8d 81       	ldd	r24, Y+5	; 0x05
    51b8:	9e 81       	ldd	r25, Y+6	; 0x06
    51ba:	00 97       	sbiw	r24, 0x00	; 0
    51bc:	69 f7       	brne	.-38     	; 0x5198 <LCD_voidLatch+0x258>
    51be:	14 c0       	rjmp	.+40     	; 0x51e8 <LCD_voidLatch+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    51c0:	6f 81       	ldd	r22, Y+7	; 0x07
    51c2:	78 85       	ldd	r23, Y+8	; 0x08
    51c4:	89 85       	ldd	r24, Y+9	; 0x09
    51c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    51c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    51cc:	dc 01       	movw	r26, r24
    51ce:	cb 01       	movw	r24, r22
    51d0:	9e 83       	std	Y+6, r25	; 0x06
    51d2:	8d 83       	std	Y+5, r24	; 0x05
    51d4:	8d 81       	ldd	r24, Y+5	; 0x05
    51d6:	9e 81       	ldd	r25, Y+6	; 0x06
    51d8:	9a 83       	std	Y+2, r25	; 0x02
    51da:	89 83       	std	Y+1, r24	; 0x01
    51dc:	89 81       	ldd	r24, Y+1	; 0x01
    51de:	9a 81       	ldd	r25, Y+2	; 0x02
    51e0:	01 97       	sbiw	r24, 0x01	; 1
    51e2:	f1 f7       	brne	.-4      	; 0x51e0 <LCD_voidLatch+0x2a0>
    51e4:	9a 83       	std	Y+2, r25	; 0x02
    51e6:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(10); //For speed difference between MC and LCD.
}
    51e8:	6d 96       	adiw	r28, 0x1d	; 29
    51ea:	0f b6       	in	r0, 0x3f	; 63
    51ec:	f8 94       	cli
    51ee:	de bf       	out	0x3e, r29	; 62
    51f0:	0f be       	out	0x3f, r0	; 63
    51f2:	cd bf       	out	0x3d, r28	; 61
    51f4:	cf 91       	pop	r28
    51f6:	df 91       	pop	r29
    51f8:	08 95       	ret

000051fa <LCD_invoidSendCommand>:
static inline void LCD_invoidSendCommand(u8 Copy_u8Command)
{
    51fa:	df 93       	push	r29
    51fc:	cf 93       	push	r28
    51fe:	cd b7       	in	r28, 0x3d	; 61
    5200:	de b7       	in	r29, 0x3e	; 62
    5202:	6d 97       	sbiw	r28, 0x1d	; 29
    5204:	0f b6       	in	r0, 0x3f	; 63
    5206:	f8 94       	cli
    5208:	de bf       	out	0x3e, r29	; 62
    520a:	0f be       	out	0x3f, r0	; 63
    520c:	cd bf       	out	0x3d, r28	; 61
    520e:	8d 8f       	std	Y+29, r24	; 0x1d

	/* Set RS as Command, EN is Low */
	DIO_enuSetPinValue(RS_PORT, RS_PIN, DIO_u8LOW);
    5210:	80 e0       	ldi	r24, 0x00	; 0
    5212:	60 e0       	ldi	r22, 0x00	; 0
    5214:	40 e0       	ldi	r20, 0x00	; 0
    5216:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8LOW);
    521a:	80 e0       	ldi	r24, 0x00	; 0
    521c:	62 e0       	ldi	r22, 0x02	; 2
    521e:	40 e0       	ldi	r20, 0x00	; 0
    5220:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

	if(Copy_u8Command == 0x28)
    5224:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5226:	88 32       	cpi	r24, 0x28	; 40
    5228:	09 f0       	breq	.+2      	; 0x522c <LCD_invoidSendCommand+0x32>
    522a:	19 c1       	rjmp	.+562    	; 0x545e <LCD_invoidSendCommand+0x264>
	{
		DIO_enuSetPinValue(D7_PORT , D7_PIN , ((Copy_u8Command >> 7) & 1));
    522c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    522e:	98 2f       	mov	r25, r24
    5230:	99 1f       	adc	r25, r25
    5232:	99 27       	eor	r25, r25
    5234:	99 1f       	adc	r25, r25
    5236:	81 e0       	ldi	r24, 0x01	; 1
    5238:	67 e0       	ldi	r22, 0x07	; 7
    523a:	49 2f       	mov	r20, r25
    523c:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D6_PORT , D6_PIN , ((Copy_u8Command >> 6) & 1));
    5240:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5242:	82 95       	swap	r24
    5244:	86 95       	lsr	r24
    5246:	86 95       	lsr	r24
    5248:	83 70       	andi	r24, 0x03	; 3
    524a:	98 2f       	mov	r25, r24
    524c:	91 70       	andi	r25, 0x01	; 1
    524e:	81 e0       	ldi	r24, 0x01	; 1
    5250:	66 e0       	ldi	r22, 0x06	; 6
    5252:	49 2f       	mov	r20, r25
    5254:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D5_PORT , D5_PIN , ((Copy_u8Command >> 5) & 1));
    5258:	8d 8d       	ldd	r24, Y+29	; 0x1d
    525a:	82 95       	swap	r24
    525c:	86 95       	lsr	r24
    525e:	87 70       	andi	r24, 0x07	; 7
    5260:	98 2f       	mov	r25, r24
    5262:	91 70       	andi	r25, 0x01	; 1
    5264:	81 e0       	ldi	r24, 0x01	; 1
    5266:	65 e0       	ldi	r22, 0x05	; 5
    5268:	49 2f       	mov	r20, r25
    526a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(D4_PORT , D4_PIN , ((Copy_u8Command >> 4) & 1));
    526e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5270:	82 95       	swap	r24
    5272:	8f 70       	andi	r24, 0x0F	; 15
    5274:	98 2f       	mov	r25, r24
    5276:	91 70       	andi	r25, 0x01	; 1
    5278:	81 e0       	ldi	r24, 0x01	; 1
    527a:	64 e0       	ldi	r22, 0x04	; 4
    527c:	49 2f       	mov	r20, r25
    527e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>

		/* Enable Latch "EN is High" because latch happen in rising edge*/
		DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8HIGH);
    5282:	80 e0       	ldi	r24, 0x00	; 0
    5284:	62 e0       	ldi	r22, 0x02	; 2
    5286:	41 e0       	ldi	r20, 0x01	; 1
    5288:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    528c:	80 e0       	ldi	r24, 0x00	; 0
    528e:	90 e0       	ldi	r25, 0x00	; 0
    5290:	a0 e2       	ldi	r26, 0x20	; 32
    5292:	b1 e4       	ldi	r27, 0x41	; 65
    5294:	89 8f       	std	Y+25, r24	; 0x19
    5296:	9a 8f       	std	Y+26, r25	; 0x1a
    5298:	ab 8f       	std	Y+27, r26	; 0x1b
    529a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    529c:	69 8d       	ldd	r22, Y+25	; 0x19
    529e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    52a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    52a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    52a4:	20 e0       	ldi	r18, 0x00	; 0
    52a6:	30 e0       	ldi	r19, 0x00	; 0
    52a8:	4a e7       	ldi	r20, 0x7A	; 122
    52aa:	53 e4       	ldi	r21, 0x43	; 67
    52ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52b0:	dc 01       	movw	r26, r24
    52b2:	cb 01       	movw	r24, r22
    52b4:	8d 8b       	std	Y+21, r24	; 0x15
    52b6:	9e 8b       	std	Y+22, r25	; 0x16
    52b8:	af 8b       	std	Y+23, r26	; 0x17
    52ba:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    52bc:	6d 89       	ldd	r22, Y+21	; 0x15
    52be:	7e 89       	ldd	r23, Y+22	; 0x16
    52c0:	8f 89       	ldd	r24, Y+23	; 0x17
    52c2:	98 8d       	ldd	r25, Y+24	; 0x18
    52c4:	20 e0       	ldi	r18, 0x00	; 0
    52c6:	30 e0       	ldi	r19, 0x00	; 0
    52c8:	40 e8       	ldi	r20, 0x80	; 128
    52ca:	5f e3       	ldi	r21, 0x3F	; 63
    52cc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    52d0:	88 23       	and	r24, r24
    52d2:	2c f4       	brge	.+10     	; 0x52de <LCD_invoidSendCommand+0xe4>
		__ticks = 1;
    52d4:	81 e0       	ldi	r24, 0x01	; 1
    52d6:	90 e0       	ldi	r25, 0x00	; 0
    52d8:	9c 8b       	std	Y+20, r25	; 0x14
    52da:	8b 8b       	std	Y+19, r24	; 0x13
    52dc:	3f c0       	rjmp	.+126    	; 0x535c <LCD_invoidSendCommand+0x162>
	else if (__tmp > 65535)
    52de:	6d 89       	ldd	r22, Y+21	; 0x15
    52e0:	7e 89       	ldd	r23, Y+22	; 0x16
    52e2:	8f 89       	ldd	r24, Y+23	; 0x17
    52e4:	98 8d       	ldd	r25, Y+24	; 0x18
    52e6:	20 e0       	ldi	r18, 0x00	; 0
    52e8:	3f ef       	ldi	r19, 0xFF	; 255
    52ea:	4f e7       	ldi	r20, 0x7F	; 127
    52ec:	57 e4       	ldi	r21, 0x47	; 71
    52ee:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    52f2:	18 16       	cp	r1, r24
    52f4:	4c f5       	brge	.+82     	; 0x5348 <LCD_invoidSendCommand+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52f6:	69 8d       	ldd	r22, Y+25	; 0x19
    52f8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    52fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    52fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    52fe:	20 e0       	ldi	r18, 0x00	; 0
    5300:	30 e0       	ldi	r19, 0x00	; 0
    5302:	40 e2       	ldi	r20, 0x20	; 32
    5304:	51 e4       	ldi	r21, 0x41	; 65
    5306:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    530a:	dc 01       	movw	r26, r24
    530c:	cb 01       	movw	r24, r22
    530e:	bc 01       	movw	r22, r24
    5310:	cd 01       	movw	r24, r26
    5312:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5316:	dc 01       	movw	r26, r24
    5318:	cb 01       	movw	r24, r22
    531a:	9c 8b       	std	Y+20, r25	; 0x14
    531c:	8b 8b       	std	Y+19, r24	; 0x13
    531e:	0f c0       	rjmp	.+30     	; 0x533e <LCD_invoidSendCommand+0x144>
    5320:	89 e1       	ldi	r24, 0x19	; 25
    5322:	90 e0       	ldi	r25, 0x00	; 0
    5324:	9a 8b       	std	Y+18, r25	; 0x12
    5326:	89 8b       	std	Y+17, r24	; 0x11
    5328:	89 89       	ldd	r24, Y+17	; 0x11
    532a:	9a 89       	ldd	r25, Y+18	; 0x12
    532c:	01 97       	sbiw	r24, 0x01	; 1
    532e:	f1 f7       	brne	.-4      	; 0x532c <LCD_invoidSendCommand+0x132>
    5330:	9a 8b       	std	Y+18, r25	; 0x12
    5332:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5334:	8b 89       	ldd	r24, Y+19	; 0x13
    5336:	9c 89       	ldd	r25, Y+20	; 0x14
    5338:	01 97       	sbiw	r24, 0x01	; 1
    533a:	9c 8b       	std	Y+20, r25	; 0x14
    533c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    533e:	8b 89       	ldd	r24, Y+19	; 0x13
    5340:	9c 89       	ldd	r25, Y+20	; 0x14
    5342:	00 97       	sbiw	r24, 0x00	; 0
    5344:	69 f7       	brne	.-38     	; 0x5320 <LCD_invoidSendCommand+0x126>
    5346:	14 c0       	rjmp	.+40     	; 0x5370 <LCD_invoidSendCommand+0x176>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5348:	6d 89       	ldd	r22, Y+21	; 0x15
    534a:	7e 89       	ldd	r23, Y+22	; 0x16
    534c:	8f 89       	ldd	r24, Y+23	; 0x17
    534e:	98 8d       	ldd	r25, Y+24	; 0x18
    5350:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5354:	dc 01       	movw	r26, r24
    5356:	cb 01       	movw	r24, r22
    5358:	9c 8b       	std	Y+20, r25	; 0x14
    535a:	8b 8b       	std	Y+19, r24	; 0x13
    535c:	8b 89       	ldd	r24, Y+19	; 0x13
    535e:	9c 89       	ldd	r25, Y+20	; 0x14
    5360:	98 8b       	std	Y+16, r25	; 0x10
    5362:	8f 87       	std	Y+15, r24	; 0x0f
    5364:	8f 85       	ldd	r24, Y+15	; 0x0f
    5366:	98 89       	ldd	r25, Y+16	; 0x10
    5368:	01 97       	sbiw	r24, 0x01	; 1
    536a:	f1 f7       	brne	.-4      	; 0x5368 <LCD_invoidSendCommand+0x16e>
    536c:	98 8b       	std	Y+16, r25	; 0x10
    536e:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10); /* Garbage Number */
		DIO_enuSetPinValue(EN_PORT, EN_PIN, DIO_u8LOW);
    5370:	80 e0       	ldi	r24, 0x00	; 0
    5372:	62 e0       	ldi	r22, 0x02	; 2
    5374:	40 e0       	ldi	r20, 0x00	; 0
    5376:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    537a:	80 e0       	ldi	r24, 0x00	; 0
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	a8 e4       	ldi	r26, 0x48	; 72
    5380:	b2 e4       	ldi	r27, 0x42	; 66
    5382:	8b 87       	std	Y+11, r24	; 0x0b
    5384:	9c 87       	std	Y+12, r25	; 0x0c
    5386:	ad 87       	std	Y+13, r26	; 0x0d
    5388:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    538a:	6b 85       	ldd	r22, Y+11	; 0x0b
    538c:	7c 85       	ldd	r23, Y+12	; 0x0c
    538e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5390:	9e 85       	ldd	r25, Y+14	; 0x0e
    5392:	20 e0       	ldi	r18, 0x00	; 0
    5394:	30 e0       	ldi	r19, 0x00	; 0
    5396:	4a e7       	ldi	r20, 0x7A	; 122
    5398:	53 e4       	ldi	r21, 0x43	; 67
    539a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    539e:	dc 01       	movw	r26, r24
    53a0:	cb 01       	movw	r24, r22
    53a2:	8f 83       	std	Y+7, r24	; 0x07
    53a4:	98 87       	std	Y+8, r25	; 0x08
    53a6:	a9 87       	std	Y+9, r26	; 0x09
    53a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    53aa:	6f 81       	ldd	r22, Y+7	; 0x07
    53ac:	78 85       	ldd	r23, Y+8	; 0x08
    53ae:	89 85       	ldd	r24, Y+9	; 0x09
    53b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    53b2:	20 e0       	ldi	r18, 0x00	; 0
    53b4:	30 e0       	ldi	r19, 0x00	; 0
    53b6:	40 e8       	ldi	r20, 0x80	; 128
    53b8:	5f e3       	ldi	r21, 0x3F	; 63
    53ba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    53be:	88 23       	and	r24, r24
    53c0:	2c f4       	brge	.+10     	; 0x53cc <LCD_invoidSendCommand+0x1d2>
		__ticks = 1;
    53c2:	81 e0       	ldi	r24, 0x01	; 1
    53c4:	90 e0       	ldi	r25, 0x00	; 0
    53c6:	9e 83       	std	Y+6, r25	; 0x06
    53c8:	8d 83       	std	Y+5, r24	; 0x05
    53ca:	3f c0       	rjmp	.+126    	; 0x544a <LCD_invoidSendCommand+0x250>
	else if (__tmp > 65535)
    53cc:	6f 81       	ldd	r22, Y+7	; 0x07
    53ce:	78 85       	ldd	r23, Y+8	; 0x08
    53d0:	89 85       	ldd	r24, Y+9	; 0x09
    53d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    53d4:	20 e0       	ldi	r18, 0x00	; 0
    53d6:	3f ef       	ldi	r19, 0xFF	; 255
    53d8:	4f e7       	ldi	r20, 0x7F	; 127
    53da:	57 e4       	ldi	r21, 0x47	; 71
    53dc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    53e0:	18 16       	cp	r1, r24
    53e2:	4c f5       	brge	.+82     	; 0x5436 <LCD_invoidSendCommand+0x23c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    53e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    53e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    53ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    53ec:	20 e0       	ldi	r18, 0x00	; 0
    53ee:	30 e0       	ldi	r19, 0x00	; 0
    53f0:	40 e2       	ldi	r20, 0x20	; 32
    53f2:	51 e4       	ldi	r21, 0x41	; 65
    53f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    53f8:	dc 01       	movw	r26, r24
    53fa:	cb 01       	movw	r24, r22
    53fc:	bc 01       	movw	r22, r24
    53fe:	cd 01       	movw	r24, r26
    5400:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5404:	dc 01       	movw	r26, r24
    5406:	cb 01       	movw	r24, r22
    5408:	9e 83       	std	Y+6, r25	; 0x06
    540a:	8d 83       	std	Y+5, r24	; 0x05
    540c:	0f c0       	rjmp	.+30     	; 0x542c <LCD_invoidSendCommand+0x232>
    540e:	89 e1       	ldi	r24, 0x19	; 25
    5410:	90 e0       	ldi	r25, 0x00	; 0
    5412:	9c 83       	std	Y+4, r25	; 0x04
    5414:	8b 83       	std	Y+3, r24	; 0x03
    5416:	8b 81       	ldd	r24, Y+3	; 0x03
    5418:	9c 81       	ldd	r25, Y+4	; 0x04
    541a:	01 97       	sbiw	r24, 0x01	; 1
    541c:	f1 f7       	brne	.-4      	; 0x541a <LCD_invoidSendCommand+0x220>
    541e:	9c 83       	std	Y+4, r25	; 0x04
    5420:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5422:	8d 81       	ldd	r24, Y+5	; 0x05
    5424:	9e 81       	ldd	r25, Y+6	; 0x06
    5426:	01 97       	sbiw	r24, 0x01	; 1
    5428:	9e 83       	std	Y+6, r25	; 0x06
    542a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    542c:	8d 81       	ldd	r24, Y+5	; 0x05
    542e:	9e 81       	ldd	r25, Y+6	; 0x06
    5430:	00 97       	sbiw	r24, 0x00	; 0
    5432:	69 f7       	brne	.-38     	; 0x540e <LCD_invoidSendCommand+0x214>
    5434:	14 c0       	rjmp	.+40     	; 0x545e <LCD_invoidSendCommand+0x264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5436:	6f 81       	ldd	r22, Y+7	; 0x07
    5438:	78 85       	ldd	r23, Y+8	; 0x08
    543a:	89 85       	ldd	r24, Y+9	; 0x09
    543c:	9a 85       	ldd	r25, Y+10	; 0x0a
    543e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5442:	dc 01       	movw	r26, r24
    5444:	cb 01       	movw	r24, r22
    5446:	9e 83       	std	Y+6, r25	; 0x06
    5448:	8d 83       	std	Y+5, r24	; 0x05
    544a:	8d 81       	ldd	r24, Y+5	; 0x05
    544c:	9e 81       	ldd	r25, Y+6	; 0x06
    544e:	9a 83       	std	Y+2, r25	; 0x02
    5450:	89 83       	std	Y+1, r24	; 0x01
    5452:	89 81       	ldd	r24, Y+1	; 0x01
    5454:	9a 81       	ldd	r25, Y+2	; 0x02
    5456:	01 97       	sbiw	r24, 0x01	; 1
    5458:	f1 f7       	brne	.-4      	; 0x5456 <LCD_invoidSendCommand+0x25c>
    545a:	9a 83       	std	Y+2, r25	; 0x02
    545c:	89 83       	std	Y+1, r24	; 0x01

		_delay_ms(50);
	}

	LCD_voidLatch(Copy_u8Command);
    545e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5460:	0e 94 a0 27 	call	0x4f40	; 0x4f40 <LCD_voidLatch>

}
    5464:	6d 96       	adiw	r28, 0x1d	; 29
    5466:	0f b6       	in	r0, 0x3f	; 63
    5468:	f8 94       	cli
    546a:	de bf       	out	0x3e, r29	; 62
    546c:	0f be       	out	0x3f, r0	; 63
    546e:	cd bf       	out	0x3d, r28	; 61
    5470:	cf 91       	pop	r28
    5472:	df 91       	pop	r29
    5474:	08 95       	ret

00005476 <KPAD_enuInit>:

#include "Keypad_private.h"
#include "Keypad_config.h"

ES_t KPAD_enuInit(void)
{
    5476:	df 93       	push	r29
    5478:	cf 93       	push	r28
    547a:	cd b7       	in	r28, 0x3d	; 61
    547c:	de b7       	in	r29, 0x3e	; 62
    547e:	27 97       	sbiw	r28, 0x07	; 7
    5480:	0f b6       	in	r0, 0x3f	; 63
    5482:	f8 94       	cli
    5484:	de bf       	out	0x3e, r29	; 62
    5486:	0f be       	out	0x3f, r0	; 63
    5488:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    548a:	1e 82       	std	Y+6, r1	; 0x06

	u8 Local_u8Iterator = KPAD_ZERO;
    548c:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = KPAD_ZERO;
    548e:	19 82       	std	Y+1, r1	; 0x01
    5490:	1a 82       	std	Y+2, r1	; 0x02
    5492:	1b 82       	std	Y+3, r1	; 0x03
    5494:	1c 82       	std	Y+4, r1	; 0x04

	Local_u32Check |= (DIO_enuSetPinDirection(ROW1_PORT, ROW1_PIN, DIO_u8INPUT) << KPAD_SHIFTBIT_ZERO);
    5496:	80 e0       	ldi	r24, 0x00	; 0
    5498:	64 e0       	ldi	r22, 0x04	; 4
    549a:	40 e0       	ldi	r20, 0x00	; 0
    549c:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    54a0:	28 2f       	mov	r18, r24
    54a2:	30 e0       	ldi	r19, 0x00	; 0
    54a4:	40 e0       	ldi	r20, 0x00	; 0
    54a6:	50 e0       	ldi	r21, 0x00	; 0
    54a8:	89 81       	ldd	r24, Y+1	; 0x01
    54aa:	9a 81       	ldd	r25, Y+2	; 0x02
    54ac:	ab 81       	ldd	r26, Y+3	; 0x03
    54ae:	bc 81       	ldd	r27, Y+4	; 0x04
    54b0:	82 2b       	or	r24, r18
    54b2:	93 2b       	or	r25, r19
    54b4:	a4 2b       	or	r26, r20
    54b6:	b5 2b       	or	r27, r21
    54b8:	89 83       	std	Y+1, r24	; 0x01
    54ba:	9a 83       	std	Y+2, r25	; 0x02
    54bc:	ab 83       	std	Y+3, r26	; 0x03
    54be:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(ROW2_PORT, ROW2_PIN, DIO_u8INPUT) << KPAD_SHIFTBIT_THREE);
    54c0:	80 e0       	ldi	r24, 0x00	; 0
    54c2:	65 e0       	ldi	r22, 0x05	; 5
    54c4:	40 e0       	ldi	r20, 0x00	; 0
    54c6:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    54ca:	88 2f       	mov	r24, r24
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	88 0f       	add	r24, r24
    54d0:	99 1f       	adc	r25, r25
    54d2:	88 0f       	add	r24, r24
    54d4:	99 1f       	adc	r25, r25
    54d6:	88 0f       	add	r24, r24
    54d8:	99 1f       	adc	r25, r25
    54da:	9c 01       	movw	r18, r24
    54dc:	44 27       	eor	r20, r20
    54de:	37 fd       	sbrc	r19, 7
    54e0:	40 95       	com	r20
    54e2:	54 2f       	mov	r21, r20
    54e4:	89 81       	ldd	r24, Y+1	; 0x01
    54e6:	9a 81       	ldd	r25, Y+2	; 0x02
    54e8:	ab 81       	ldd	r26, Y+3	; 0x03
    54ea:	bc 81       	ldd	r27, Y+4	; 0x04
    54ec:	82 2b       	or	r24, r18
    54ee:	93 2b       	or	r25, r19
    54f0:	a4 2b       	or	r26, r20
    54f2:	b5 2b       	or	r27, r21
    54f4:	89 83       	std	Y+1, r24	; 0x01
    54f6:	9a 83       	std	Y+2, r25	; 0x02
    54f8:	ab 83       	std	Y+3, r26	; 0x03
    54fa:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(ROW3_PORT, ROW3_PIN, DIO_u8INPUT) << KPAD_SHIFTBIT_SIX);
    54fc:	80 e0       	ldi	r24, 0x00	; 0
    54fe:	66 e0       	ldi	r22, 0x06	; 6
    5500:	40 e0       	ldi	r20, 0x00	; 0
    5502:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    5506:	88 2f       	mov	r24, r24
    5508:	90 e0       	ldi	r25, 0x00	; 0
    550a:	00 24       	eor	r0, r0
    550c:	96 95       	lsr	r25
    550e:	87 95       	ror	r24
    5510:	07 94       	ror	r0
    5512:	96 95       	lsr	r25
    5514:	87 95       	ror	r24
    5516:	07 94       	ror	r0
    5518:	98 2f       	mov	r25, r24
    551a:	80 2d       	mov	r24, r0
    551c:	9c 01       	movw	r18, r24
    551e:	44 27       	eor	r20, r20
    5520:	37 fd       	sbrc	r19, 7
    5522:	40 95       	com	r20
    5524:	54 2f       	mov	r21, r20
    5526:	89 81       	ldd	r24, Y+1	; 0x01
    5528:	9a 81       	ldd	r25, Y+2	; 0x02
    552a:	ab 81       	ldd	r26, Y+3	; 0x03
    552c:	bc 81       	ldd	r27, Y+4	; 0x04
    552e:	82 2b       	or	r24, r18
    5530:	93 2b       	or	r25, r19
    5532:	a4 2b       	or	r26, r20
    5534:	b5 2b       	or	r27, r21
    5536:	89 83       	std	Y+1, r24	; 0x01
    5538:	9a 83       	std	Y+2, r25	; 0x02
    553a:	ab 83       	std	Y+3, r26	; 0x03
    553c:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(ROW4_PORT, ROW4_PIN, DIO_u8INPUT) << KPAD_SHIFTBIT_NINE);
    553e:	80 e0       	ldi	r24, 0x00	; 0
    5540:	67 e0       	ldi	r22, 0x07	; 7
    5542:	40 e0       	ldi	r20, 0x00	; 0
    5544:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    5548:	88 2f       	mov	r24, r24
    554a:	90 e0       	ldi	r25, 0x00	; 0
    554c:	98 2f       	mov	r25, r24
    554e:	88 27       	eor	r24, r24
    5550:	99 0f       	add	r25, r25
    5552:	9c 01       	movw	r18, r24
    5554:	44 27       	eor	r20, r20
    5556:	37 fd       	sbrc	r19, 7
    5558:	40 95       	com	r20
    555a:	54 2f       	mov	r21, r20
    555c:	89 81       	ldd	r24, Y+1	; 0x01
    555e:	9a 81       	ldd	r25, Y+2	; 0x02
    5560:	ab 81       	ldd	r26, Y+3	; 0x03
    5562:	bc 81       	ldd	r27, Y+4	; 0x04
    5564:	82 2b       	or	r24, r18
    5566:	93 2b       	or	r25, r19
    5568:	a4 2b       	or	r26, r20
    556a:	b5 2b       	or	r27, r21
    556c:	89 83       	std	Y+1, r24	; 0x01
    556e:	9a 83       	std	Y+2, r25	; 0x02
    5570:	ab 83       	std	Y+3, r26	; 0x03
    5572:	bc 83       	std	Y+4, r27	; 0x04

	Local_u32Check |= (DIO_enuSetPinValue(ROW1_PORT, ROW1_PIN, DIO_u8PULL_UP) << KPAD_SHIFTBIT_TWELVE);
    5574:	80 e0       	ldi	r24, 0x00	; 0
    5576:	64 e0       	ldi	r22, 0x04	; 4
    5578:	41 e0       	ldi	r20, 0x01	; 1
    557a:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    557e:	88 2f       	mov	r24, r24
    5580:	90 e0       	ldi	r25, 0x00	; 0
    5582:	98 2f       	mov	r25, r24
    5584:	88 27       	eor	r24, r24
    5586:	92 95       	swap	r25
    5588:	90 7f       	andi	r25, 0xF0	; 240
    558a:	9c 01       	movw	r18, r24
    558c:	44 27       	eor	r20, r20
    558e:	37 fd       	sbrc	r19, 7
    5590:	40 95       	com	r20
    5592:	54 2f       	mov	r21, r20
    5594:	89 81       	ldd	r24, Y+1	; 0x01
    5596:	9a 81       	ldd	r25, Y+2	; 0x02
    5598:	ab 81       	ldd	r26, Y+3	; 0x03
    559a:	bc 81       	ldd	r27, Y+4	; 0x04
    559c:	82 2b       	or	r24, r18
    559e:	93 2b       	or	r25, r19
    55a0:	a4 2b       	or	r26, r20
    55a2:	b5 2b       	or	r27, r21
    55a4:	89 83       	std	Y+1, r24	; 0x01
    55a6:	9a 83       	std	Y+2, r25	; 0x02
    55a8:	ab 83       	std	Y+3, r26	; 0x03
    55aa:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW2_PORT, ROW2_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_FIFTEEN);
    55ac:	80 e0       	ldi	r24, 0x00	; 0
    55ae:	65 e0       	ldi	r22, 0x05	; 5
    55b0:	41 e0       	ldi	r20, 0x01	; 1
    55b2:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    55b6:	88 2f       	mov	r24, r24
    55b8:	90 e0       	ldi	r25, 0x00	; 0
    55ba:	a0 e0       	ldi	r26, 0x00	; 0
    55bc:	b0 e0       	ldi	r27, 0x00	; 0
    55be:	9c 01       	movw	r18, r24
    55c0:	ad 01       	movw	r20, r26
    55c2:	01 2e       	mov	r0, r17
    55c4:	1f e0       	ldi	r17, 0x0F	; 15
    55c6:	22 0f       	add	r18, r18
    55c8:	33 1f       	adc	r19, r19
    55ca:	44 1f       	adc	r20, r20
    55cc:	55 1f       	adc	r21, r21
    55ce:	1a 95       	dec	r17
    55d0:	d1 f7       	brne	.-12     	; 0x55c6 <KPAD_enuInit+0x150>
    55d2:	10 2d       	mov	r17, r0
    55d4:	89 81       	ldd	r24, Y+1	; 0x01
    55d6:	9a 81       	ldd	r25, Y+2	; 0x02
    55d8:	ab 81       	ldd	r26, Y+3	; 0x03
    55da:	bc 81       	ldd	r27, Y+4	; 0x04
    55dc:	82 2b       	or	r24, r18
    55de:	93 2b       	or	r25, r19
    55e0:	a4 2b       	or	r26, r20
    55e2:	b5 2b       	or	r27, r21
    55e4:	89 83       	std	Y+1, r24	; 0x01
    55e6:	9a 83       	std	Y+2, r25	; 0x02
    55e8:	ab 83       	std	Y+3, r26	; 0x03
    55ea:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW3_PORT, ROW3_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_EIGHTEEN);
    55ec:	80 e0       	ldi	r24, 0x00	; 0
    55ee:	66 e0       	ldi	r22, 0x06	; 6
    55f0:	41 e0       	ldi	r20, 0x01	; 1
    55f2:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    55f6:	88 2f       	mov	r24, r24
    55f8:	90 e0       	ldi	r25, 0x00	; 0
    55fa:	a0 e0       	ldi	r26, 0x00	; 0
    55fc:	b0 e0       	ldi	r27, 0x00	; 0
    55fe:	9c 01       	movw	r18, r24
    5600:	ad 01       	movw	r20, r26
    5602:	01 2e       	mov	r0, r17
    5604:	12 e1       	ldi	r17, 0x12	; 18
    5606:	22 0f       	add	r18, r18
    5608:	33 1f       	adc	r19, r19
    560a:	44 1f       	adc	r20, r20
    560c:	55 1f       	adc	r21, r21
    560e:	1a 95       	dec	r17
    5610:	d1 f7       	brne	.-12     	; 0x5606 <KPAD_enuInit+0x190>
    5612:	10 2d       	mov	r17, r0
    5614:	89 81       	ldd	r24, Y+1	; 0x01
    5616:	9a 81       	ldd	r25, Y+2	; 0x02
    5618:	ab 81       	ldd	r26, Y+3	; 0x03
    561a:	bc 81       	ldd	r27, Y+4	; 0x04
    561c:	82 2b       	or	r24, r18
    561e:	93 2b       	or	r25, r19
    5620:	a4 2b       	or	r26, r20
    5622:	b5 2b       	or	r27, r21
    5624:	89 83       	std	Y+1, r24	; 0x01
    5626:	9a 83       	std	Y+2, r25	; 0x02
    5628:	ab 83       	std	Y+3, r26	; 0x03
    562a:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW4_PORT, ROW4_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_TWENTYONE);
    562c:	80 e0       	ldi	r24, 0x00	; 0
    562e:	67 e0       	ldi	r22, 0x07	; 7
    5630:	41 e0       	ldi	r20, 0x01	; 1
    5632:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    5636:	88 2f       	mov	r24, r24
    5638:	90 e0       	ldi	r25, 0x00	; 0
    563a:	a0 e0       	ldi	r26, 0x00	; 0
    563c:	b0 e0       	ldi	r27, 0x00	; 0
    563e:	9c 01       	movw	r18, r24
    5640:	ad 01       	movw	r20, r26
    5642:	01 2e       	mov	r0, r17
    5644:	15 e1       	ldi	r17, 0x15	; 21
    5646:	22 0f       	add	r18, r18
    5648:	33 1f       	adc	r19, r19
    564a:	44 1f       	adc	r20, r20
    564c:	55 1f       	adc	r21, r21
    564e:	1a 95       	dec	r17
    5650:	d1 f7       	brne	.-12     	; 0x5646 <KPAD_enuInit+0x1d0>
    5652:	10 2d       	mov	r17, r0
    5654:	89 81       	ldd	r24, Y+1	; 0x01
    5656:	9a 81       	ldd	r25, Y+2	; 0x02
    5658:	ab 81       	ldd	r26, Y+3	; 0x03
    565a:	bc 81       	ldd	r27, Y+4	; 0x04
    565c:	82 2b       	or	r24, r18
    565e:	93 2b       	or	r25, r19
    5660:	a4 2b       	or	r26, r20
    5662:	b5 2b       	or	r27, r21
    5664:	89 83       	std	Y+1, r24	; 0x01
    5666:	9a 83       	std	Y+2, r25	; 0x02
    5668:	ab 83       	std	Y+3, r26	; 0x03
    566a:	bc 83       	std	Y+4, r27	; 0x04

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWENTYFOUR; Local_u8Iterator += KPAD_THREE)
    566c:	1d 82       	std	Y+5, r1	; 0x05
    566e:	1e c0       	rjmp	.+60     	; 0x56ac <KPAD_enuInit+0x236>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & KPAD_SEVEN) != ES_OK)
    5670:	8d 81       	ldd	r24, Y+5	; 0x05
    5672:	28 2f       	mov	r18, r24
    5674:	30 e0       	ldi	r19, 0x00	; 0
    5676:	89 81       	ldd	r24, Y+1	; 0x01
    5678:	9a 81       	ldd	r25, Y+2	; 0x02
    567a:	ab 81       	ldd	r26, Y+3	; 0x03
    567c:	bc 81       	ldd	r27, Y+4	; 0x04
    567e:	02 2e       	mov	r0, r18
    5680:	04 c0       	rjmp	.+8      	; 0x568a <KPAD_enuInit+0x214>
    5682:	b6 95       	lsr	r27
    5684:	a7 95       	ror	r26
    5686:	97 95       	ror	r25
    5688:	87 95       	ror	r24
    568a:	0a 94       	dec	r0
    568c:	d2 f7       	brpl	.-12     	; 0x5682 <KPAD_enuInit+0x20c>
    568e:	87 70       	andi	r24, 0x07	; 7
    5690:	90 70       	andi	r25, 0x00	; 0
    5692:	a0 70       	andi	r26, 0x00	; 0
    5694:	b0 70       	andi	r27, 0x00	; 0
    5696:	81 30       	cpi	r24, 0x01	; 1
    5698:	91 05       	cpc	r25, r1
    569a:	a1 05       	cpc	r26, r1
    569c:	b1 05       	cpc	r27, r1
    569e:	19 f0       	breq	.+6      	; 0x56a6 <KPAD_enuInit+0x230>
		{
			return Local_enuErrorState;
    56a0:	8e 81       	ldd	r24, Y+6	; 0x06
    56a2:	8f 83       	std	Y+7, r24	; 0x07
    56a4:	1c c1       	rjmp	.+568    	; 0x58de <KPAD_enuInit+0x468>
	Local_u32Check |= (DIO_enuSetPinValue(ROW1_PORT, ROW1_PIN, DIO_u8PULL_UP) << KPAD_SHIFTBIT_TWELVE);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW2_PORT, ROW2_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_FIFTEEN);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW3_PORT, ROW3_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_EIGHTEEN);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(ROW4_PORT, ROW4_PIN, DIO_u8PULL_UP)) << KPAD_SHIFTBIT_TWENTYONE);

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWENTYFOUR; Local_u8Iterator += KPAD_THREE)
    56a6:	8d 81       	ldd	r24, Y+5	; 0x05
    56a8:	8d 5f       	subi	r24, 0xFD	; 253
    56aa:	8d 83       	std	Y+5, r24	; 0x05
    56ac:	8d 81       	ldd	r24, Y+5	; 0x05
    56ae:	88 31       	cpi	r24, 0x18	; 24
    56b0:	f8 f2       	brcs	.-66     	; 0x5670 <KPAD_enuInit+0x1fa>
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & KPAD_SEVEN) != ES_OK)
		{
			return Local_enuErrorState;
		}
	}
	Local_u32Check = KPAD_ZERO;
    56b2:	19 82       	std	Y+1, r1	; 0x01
    56b4:	1a 82       	std	Y+2, r1	; 0x02
    56b6:	1b 82       	std	Y+3, r1	; 0x03
    56b8:	1c 82       	std	Y+4, r1	; 0x04

	Local_u32Check |= (DIO_enuSetPinDirection(COL1_PORT, COL1_PIN, DIO_u8OUTPUT) << KPAD_SHIFTBIT_ZERO);
    56ba:	81 e0       	ldi	r24, 0x01	; 1
    56bc:	60 e0       	ldi	r22, 0x00	; 0
    56be:	41 e0       	ldi	r20, 0x01	; 1
    56c0:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    56c4:	28 2f       	mov	r18, r24
    56c6:	30 e0       	ldi	r19, 0x00	; 0
    56c8:	40 e0       	ldi	r20, 0x00	; 0
    56ca:	50 e0       	ldi	r21, 0x00	; 0
    56cc:	89 81       	ldd	r24, Y+1	; 0x01
    56ce:	9a 81       	ldd	r25, Y+2	; 0x02
    56d0:	ab 81       	ldd	r26, Y+3	; 0x03
    56d2:	bc 81       	ldd	r27, Y+4	; 0x04
    56d4:	82 2b       	or	r24, r18
    56d6:	93 2b       	or	r25, r19
    56d8:	a4 2b       	or	r26, r20
    56da:	b5 2b       	or	r27, r21
    56dc:	89 83       	std	Y+1, r24	; 0x01
    56de:	9a 83       	std	Y+2, r25	; 0x02
    56e0:	ab 83       	std	Y+3, r26	; 0x03
    56e2:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(COL2_PORT, COL2_PIN, DIO_u8OUTPUT) << KPAD_SHIFTBIT_THREE);
    56e4:	81 e0       	ldi	r24, 0x01	; 1
    56e6:	61 e0       	ldi	r22, 0x01	; 1
    56e8:	41 e0       	ldi	r20, 0x01	; 1
    56ea:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    56ee:	88 2f       	mov	r24, r24
    56f0:	90 e0       	ldi	r25, 0x00	; 0
    56f2:	88 0f       	add	r24, r24
    56f4:	99 1f       	adc	r25, r25
    56f6:	88 0f       	add	r24, r24
    56f8:	99 1f       	adc	r25, r25
    56fa:	88 0f       	add	r24, r24
    56fc:	99 1f       	adc	r25, r25
    56fe:	9c 01       	movw	r18, r24
    5700:	44 27       	eor	r20, r20
    5702:	37 fd       	sbrc	r19, 7
    5704:	40 95       	com	r20
    5706:	54 2f       	mov	r21, r20
    5708:	89 81       	ldd	r24, Y+1	; 0x01
    570a:	9a 81       	ldd	r25, Y+2	; 0x02
    570c:	ab 81       	ldd	r26, Y+3	; 0x03
    570e:	bc 81       	ldd	r27, Y+4	; 0x04
    5710:	82 2b       	or	r24, r18
    5712:	93 2b       	or	r25, r19
    5714:	a4 2b       	or	r26, r20
    5716:	b5 2b       	or	r27, r21
    5718:	89 83       	std	Y+1, r24	; 0x01
    571a:	9a 83       	std	Y+2, r25	; 0x02
    571c:	ab 83       	std	Y+3, r26	; 0x03
    571e:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(COL3_PORT, COL3_PIN, DIO_u8OUTPUT) << KPAD_SHIFTBIT_SIX);
    5720:	81 e0       	ldi	r24, 0x01	; 1
    5722:	62 e0       	ldi	r22, 0x02	; 2
    5724:	41 e0       	ldi	r20, 0x01	; 1
    5726:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    572a:	88 2f       	mov	r24, r24
    572c:	90 e0       	ldi	r25, 0x00	; 0
    572e:	00 24       	eor	r0, r0
    5730:	96 95       	lsr	r25
    5732:	87 95       	ror	r24
    5734:	07 94       	ror	r0
    5736:	96 95       	lsr	r25
    5738:	87 95       	ror	r24
    573a:	07 94       	ror	r0
    573c:	98 2f       	mov	r25, r24
    573e:	80 2d       	mov	r24, r0
    5740:	9c 01       	movw	r18, r24
    5742:	44 27       	eor	r20, r20
    5744:	37 fd       	sbrc	r19, 7
    5746:	40 95       	com	r20
    5748:	54 2f       	mov	r21, r20
    574a:	89 81       	ldd	r24, Y+1	; 0x01
    574c:	9a 81       	ldd	r25, Y+2	; 0x02
    574e:	ab 81       	ldd	r26, Y+3	; 0x03
    5750:	bc 81       	ldd	r27, Y+4	; 0x04
    5752:	82 2b       	or	r24, r18
    5754:	93 2b       	or	r25, r19
    5756:	a4 2b       	or	r26, r20
    5758:	b5 2b       	or	r27, r21
    575a:	89 83       	std	Y+1, r24	; 0x01
    575c:	9a 83       	std	Y+2, r25	; 0x02
    575e:	ab 83       	std	Y+3, r26	; 0x03
    5760:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (DIO_enuSetPinDirection(COL4_PORT, COL4_PIN, DIO_u8OUTPUT) << KPAD_SHIFTBIT_NINE);
    5762:	81 e0       	ldi	r24, 0x01	; 1
    5764:	63 e0       	ldi	r22, 0x03	; 3
    5766:	41 e0       	ldi	r20, 0x01	; 1
    5768:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <DIO_enuSetPinDirection>
    576c:	88 2f       	mov	r24, r24
    576e:	90 e0       	ldi	r25, 0x00	; 0
    5770:	98 2f       	mov	r25, r24
    5772:	88 27       	eor	r24, r24
    5774:	99 0f       	add	r25, r25
    5776:	9c 01       	movw	r18, r24
    5778:	44 27       	eor	r20, r20
    577a:	37 fd       	sbrc	r19, 7
    577c:	40 95       	com	r20
    577e:	54 2f       	mov	r21, r20
    5780:	89 81       	ldd	r24, Y+1	; 0x01
    5782:	9a 81       	ldd	r25, Y+2	; 0x02
    5784:	ab 81       	ldd	r26, Y+3	; 0x03
    5786:	bc 81       	ldd	r27, Y+4	; 0x04
    5788:	82 2b       	or	r24, r18
    578a:	93 2b       	or	r25, r19
    578c:	a4 2b       	or	r26, r20
    578e:	b5 2b       	or	r27, r21
    5790:	89 83       	std	Y+1, r24	; 0x01
    5792:	9a 83       	std	Y+2, r25	; 0x02
    5794:	ab 83       	std	Y+3, r26	; 0x03
    5796:	bc 83       	std	Y+4, r27	; 0x04

	Local_u32Check |= (DIO_enuSetPinValue(COL1_PORT, COL1_PIN, DIO_u8HIGH) << KPAD_SHIFTBIT_TWELVE);
    5798:	81 e0       	ldi	r24, 0x01	; 1
    579a:	60 e0       	ldi	r22, 0x00	; 0
    579c:	41 e0       	ldi	r20, 0x01	; 1
    579e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    57a2:	88 2f       	mov	r24, r24
    57a4:	90 e0       	ldi	r25, 0x00	; 0
    57a6:	98 2f       	mov	r25, r24
    57a8:	88 27       	eor	r24, r24
    57aa:	92 95       	swap	r25
    57ac:	90 7f       	andi	r25, 0xF0	; 240
    57ae:	9c 01       	movw	r18, r24
    57b0:	44 27       	eor	r20, r20
    57b2:	37 fd       	sbrc	r19, 7
    57b4:	40 95       	com	r20
    57b6:	54 2f       	mov	r21, r20
    57b8:	89 81       	ldd	r24, Y+1	; 0x01
    57ba:	9a 81       	ldd	r25, Y+2	; 0x02
    57bc:	ab 81       	ldd	r26, Y+3	; 0x03
    57be:	bc 81       	ldd	r27, Y+4	; 0x04
    57c0:	82 2b       	or	r24, r18
    57c2:	93 2b       	or	r25, r19
    57c4:	a4 2b       	or	r26, r20
    57c6:	b5 2b       	or	r27, r21
    57c8:	89 83       	std	Y+1, r24	; 0x01
    57ca:	9a 83       	std	Y+2, r25	; 0x02
    57cc:	ab 83       	std	Y+3, r26	; 0x03
    57ce:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL2_PORT, COL2_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_FIFTEEN);
    57d0:	81 e0       	ldi	r24, 0x01	; 1
    57d2:	61 e0       	ldi	r22, 0x01	; 1
    57d4:	41 e0       	ldi	r20, 0x01	; 1
    57d6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    57da:	88 2f       	mov	r24, r24
    57dc:	90 e0       	ldi	r25, 0x00	; 0
    57de:	a0 e0       	ldi	r26, 0x00	; 0
    57e0:	b0 e0       	ldi	r27, 0x00	; 0
    57e2:	9c 01       	movw	r18, r24
    57e4:	ad 01       	movw	r20, r26
    57e6:	01 2e       	mov	r0, r17
    57e8:	1f e0       	ldi	r17, 0x0F	; 15
    57ea:	22 0f       	add	r18, r18
    57ec:	33 1f       	adc	r19, r19
    57ee:	44 1f       	adc	r20, r20
    57f0:	55 1f       	adc	r21, r21
    57f2:	1a 95       	dec	r17
    57f4:	d1 f7       	brne	.-12     	; 0x57ea <KPAD_enuInit+0x374>
    57f6:	10 2d       	mov	r17, r0
    57f8:	89 81       	ldd	r24, Y+1	; 0x01
    57fa:	9a 81       	ldd	r25, Y+2	; 0x02
    57fc:	ab 81       	ldd	r26, Y+3	; 0x03
    57fe:	bc 81       	ldd	r27, Y+4	; 0x04
    5800:	82 2b       	or	r24, r18
    5802:	93 2b       	or	r25, r19
    5804:	a4 2b       	or	r26, r20
    5806:	b5 2b       	or	r27, r21
    5808:	89 83       	std	Y+1, r24	; 0x01
    580a:	9a 83       	std	Y+2, r25	; 0x02
    580c:	ab 83       	std	Y+3, r26	; 0x03
    580e:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL3_PORT, COL3_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_EIGHTEEN);
    5810:	81 e0       	ldi	r24, 0x01	; 1
    5812:	62 e0       	ldi	r22, 0x02	; 2
    5814:	41 e0       	ldi	r20, 0x01	; 1
    5816:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    581a:	88 2f       	mov	r24, r24
    581c:	90 e0       	ldi	r25, 0x00	; 0
    581e:	a0 e0       	ldi	r26, 0x00	; 0
    5820:	b0 e0       	ldi	r27, 0x00	; 0
    5822:	9c 01       	movw	r18, r24
    5824:	ad 01       	movw	r20, r26
    5826:	01 2e       	mov	r0, r17
    5828:	12 e1       	ldi	r17, 0x12	; 18
    582a:	22 0f       	add	r18, r18
    582c:	33 1f       	adc	r19, r19
    582e:	44 1f       	adc	r20, r20
    5830:	55 1f       	adc	r21, r21
    5832:	1a 95       	dec	r17
    5834:	d1 f7       	brne	.-12     	; 0x582a <KPAD_enuInit+0x3b4>
    5836:	10 2d       	mov	r17, r0
    5838:	89 81       	ldd	r24, Y+1	; 0x01
    583a:	9a 81       	ldd	r25, Y+2	; 0x02
    583c:	ab 81       	ldd	r26, Y+3	; 0x03
    583e:	bc 81       	ldd	r27, Y+4	; 0x04
    5840:	82 2b       	or	r24, r18
    5842:	93 2b       	or	r25, r19
    5844:	a4 2b       	or	r26, r20
    5846:	b5 2b       	or	r27, r21
    5848:	89 83       	std	Y+1, r24	; 0x01
    584a:	9a 83       	std	Y+2, r25	; 0x02
    584c:	ab 83       	std	Y+3, r26	; 0x03
    584e:	bc 83       	std	Y+4, r27	; 0x04
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL4_PORT, COL4_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_TWENTYONE);
    5850:	81 e0       	ldi	r24, 0x01	; 1
    5852:	63 e0       	ldi	r22, 0x03	; 3
    5854:	41 e0       	ldi	r20, 0x01	; 1
    5856:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    585a:	88 2f       	mov	r24, r24
    585c:	90 e0       	ldi	r25, 0x00	; 0
    585e:	a0 e0       	ldi	r26, 0x00	; 0
    5860:	b0 e0       	ldi	r27, 0x00	; 0
    5862:	9c 01       	movw	r18, r24
    5864:	ad 01       	movw	r20, r26
    5866:	01 2e       	mov	r0, r17
    5868:	15 e1       	ldi	r17, 0x15	; 21
    586a:	22 0f       	add	r18, r18
    586c:	33 1f       	adc	r19, r19
    586e:	44 1f       	adc	r20, r20
    5870:	55 1f       	adc	r21, r21
    5872:	1a 95       	dec	r17
    5874:	d1 f7       	brne	.-12     	; 0x586a <KPAD_enuInit+0x3f4>
    5876:	10 2d       	mov	r17, r0
    5878:	89 81       	ldd	r24, Y+1	; 0x01
    587a:	9a 81       	ldd	r25, Y+2	; 0x02
    587c:	ab 81       	ldd	r26, Y+3	; 0x03
    587e:	bc 81       	ldd	r27, Y+4	; 0x04
    5880:	82 2b       	or	r24, r18
    5882:	93 2b       	or	r25, r19
    5884:	a4 2b       	or	r26, r20
    5886:	b5 2b       	or	r27, r21
    5888:	89 83       	std	Y+1, r24	; 0x01
    588a:	9a 83       	std	Y+2, r25	; 0x02
    588c:	ab 83       	std	Y+3, r26	; 0x03
    588e:	bc 83       	std	Y+4, r27	; 0x04

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWENTYFOUR; Local_u8Iterator += KPAD_THREE)
    5890:	1d 82       	std	Y+5, r1	; 0x05
    5892:	1e c0       	rjmp	.+60     	; 0x58d0 <KPAD_enuInit+0x45a>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & KPAD_SEVEN) != ES_OK)
    5894:	8d 81       	ldd	r24, Y+5	; 0x05
    5896:	28 2f       	mov	r18, r24
    5898:	30 e0       	ldi	r19, 0x00	; 0
    589a:	89 81       	ldd	r24, Y+1	; 0x01
    589c:	9a 81       	ldd	r25, Y+2	; 0x02
    589e:	ab 81       	ldd	r26, Y+3	; 0x03
    58a0:	bc 81       	ldd	r27, Y+4	; 0x04
    58a2:	02 2e       	mov	r0, r18
    58a4:	04 c0       	rjmp	.+8      	; 0x58ae <KPAD_enuInit+0x438>
    58a6:	b6 95       	lsr	r27
    58a8:	a7 95       	ror	r26
    58aa:	97 95       	ror	r25
    58ac:	87 95       	ror	r24
    58ae:	0a 94       	dec	r0
    58b0:	d2 f7       	brpl	.-12     	; 0x58a6 <KPAD_enuInit+0x430>
    58b2:	87 70       	andi	r24, 0x07	; 7
    58b4:	90 70       	andi	r25, 0x00	; 0
    58b6:	a0 70       	andi	r26, 0x00	; 0
    58b8:	b0 70       	andi	r27, 0x00	; 0
    58ba:	81 30       	cpi	r24, 0x01	; 1
    58bc:	91 05       	cpc	r25, r1
    58be:	a1 05       	cpc	r26, r1
    58c0:	b1 05       	cpc	r27, r1
    58c2:	19 f0       	breq	.+6      	; 0x58ca <KPAD_enuInit+0x454>
		{
			return Local_enuErrorState;
    58c4:	8e 81       	ldd	r24, Y+6	; 0x06
    58c6:	8f 83       	std	Y+7, r24	; 0x07
    58c8:	0a c0       	rjmp	.+20     	; 0x58de <KPAD_enuInit+0x468>
	Local_u32Check |= (DIO_enuSetPinValue(COL1_PORT, COL1_PIN, DIO_u8HIGH) << KPAD_SHIFTBIT_TWELVE);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL2_PORT, COL2_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_FIFTEEN);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL3_PORT, COL3_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_EIGHTEEN);
	Local_u32Check |= (((u32)DIO_enuSetPinValue(COL4_PORT, COL4_PIN, DIO_u8HIGH)) << KPAD_SHIFTBIT_TWENTYONE);

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWENTYFOUR; Local_u8Iterator += KPAD_THREE)
    58ca:	8d 81       	ldd	r24, Y+5	; 0x05
    58cc:	8d 5f       	subi	r24, 0xFD	; 253
    58ce:	8d 83       	std	Y+5, r24	; 0x05
    58d0:	8d 81       	ldd	r24, Y+5	; 0x05
    58d2:	88 31       	cpi	r24, 0x18	; 24
    58d4:	f8 f2       	brcs	.-66     	; 0x5894 <KPAD_enuInit+0x41e>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    58d6:	81 e0       	ldi	r24, 0x01	; 1
    58d8:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    58da:	8e 81       	ldd	r24, Y+6	; 0x06
    58dc:	8f 83       	std	Y+7, r24	; 0x07
    58de:	8f 81       	ldd	r24, Y+7	; 0x07
}
    58e0:	27 96       	adiw	r28, 0x07	; 7
    58e2:	0f b6       	in	r0, 0x3f	; 63
    58e4:	f8 94       	cli
    58e6:	de bf       	out	0x3e, r29	; 62
    58e8:	0f be       	out	0x3f, r0	; 63
    58ea:	cd bf       	out	0x3d, r28	; 61
    58ec:	cf 91       	pop	r28
    58ee:	df 91       	pop	r29
    58f0:	08 95       	ret

000058f2 <KPAD_enuGetPassedKey>:

ES_t KPAD_enuGetPassedKey(u8 *Copy_pu8KeyNumber)
{
    58f2:	df 93       	push	r29
    58f4:	cf 93       	push	r28
    58f6:	cd b7       	in	r28, 0x3d	; 61
    58f8:	de b7       	in	r29, 0x3e	; 62
    58fa:	2c 97       	sbiw	r28, 0x0c	; 12
    58fc:	0f b6       	in	r0, 0x3f	; 63
    58fe:	f8 94       	cli
    5900:	de bf       	out	0x3e, r29	; 62
    5902:	0f be       	out	0x3f, r0	; 63
    5904:	cd bf       	out	0x3d, r28	; 61
    5906:	9b 87       	std	Y+11, r25	; 0x0b
    5908:	8a 87       	std	Y+10, r24	; 0x0a
	ES_t Local_enuErrorState = ES_NOK;
    590a:	18 86       	std	Y+8, r1	; 0x08
	u8 Local_u8ColIndex = KPAD_ZERO, Local_u8RowIndex = KPAD_ZERO, Local_u8KeyState = KPAD_ZERO;
    590c:	1f 82       	std	Y+7, r1	; 0x07
    590e:	1e 82       	std	Y+6, r1	; 0x06
    5910:	19 86       	std	Y+9, r1	; 0x09
	u8 Local_u8Iterator = KPAD_ZERO;
    5912:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = KPAD_ZERO;
    5914:	19 82       	std	Y+1, r1	; 0x01
    5916:	1a 82       	std	Y+2, r1	; 0x02
    5918:	1b 82       	std	Y+3, r1	; 0x03
    591a:	1c 82       	std	Y+4, r1	; 0x04


	static u8 Local_u8AKPADARR[KPAD_ROWNUM][KPAD_COLNUM] = KPAD_ARR_VAL;

	/* Initial value of key pressed */
	if(Copy_pu8KeyNumber != NULL)
    591c:	8a 85       	ldd	r24, Y+10	; 0x0a
    591e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5920:	00 97       	sbiw	r24, 0x00	; 0
    5922:	31 f0       	breq	.+12     	; 0x5930 <KPAD_enuGetPassedKey+0x3e>
	{
		*Copy_pu8KeyNumber = NO_PRESSED_KEY;
    5924:	ea 85       	ldd	r30, Y+10	; 0x0a
    5926:	fb 85       	ldd	r31, Y+11	; 0x0b
    5928:	8f ef       	ldi	r24, 0xFF	; 255
    592a:	80 83       	st	Z, r24
	else
	{
		return ES_NULL_POINTER;
	}

	for(Local_u8ColIndex = KPAD_ZERO; Local_u8ColIndex < KPAD_COLNUM; Local_u8ColIndex++)
    592c:	1f 82       	std	Y+7, r1	; 0x07
    592e:	e9 c0       	rjmp	.+466    	; 0x5b02 <KPAD_enuGetPassedKey+0x210>
	{
		*Copy_pu8KeyNumber = NO_PRESSED_KEY;
	}
	else
	{
		return ES_NULL_POINTER;
    5930:	82 e0       	ldi	r24, 0x02	; 2
    5932:	8c 87       	std	Y+12, r24	; 0x0c
    5934:	11 c1       	rjmp	.+546    	; 0x5b58 <KPAD_enuGetPassedKey+0x266>
	}

	for(Local_u8ColIndex = KPAD_ZERO; Local_u8ColIndex < KPAD_COLNUM; Local_u8ColIndex++)
	{
		/* Activate Column */
		Local_u32Check |= (DIO_enuSetPinValue(Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ZERO],
    5936:	8f 81       	ldd	r24, Y+7	; 0x07
    5938:	88 2f       	mov	r24, r24
    593a:	90 e0       	ldi	r25, 0x00	; 0
    593c:	88 0f       	add	r24, r24
    593e:	99 1f       	adc	r25, r25
    5940:	fc 01       	movw	r30, r24
    5942:	e7 52       	subi	r30, 0x27	; 39
    5944:	fe 4f       	sbci	r31, 0xFE	; 254
    5946:	20 81       	ld	r18, Z
    5948:	8f 81       	ldd	r24, Y+7	; 0x07
    594a:	88 2f       	mov	r24, r24
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	88 0f       	add	r24, r24
    5950:	99 1f       	adc	r25, r25
    5952:	fc 01       	movw	r30, r24
    5954:	e6 52       	subi	r30, 0x26	; 38
    5956:	fe 4f       	sbci	r31, 0xFE	; 254
    5958:	90 81       	ld	r25, Z
    595a:	82 2f       	mov	r24, r18
    595c:	69 2f       	mov	r22, r25
    595e:	40 e0       	ldi	r20, 0x00	; 0
    5960:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    5964:	28 2f       	mov	r18, r24
    5966:	30 e0       	ldi	r19, 0x00	; 0
    5968:	40 e0       	ldi	r20, 0x00	; 0
    596a:	50 e0       	ldi	r21, 0x00	; 0
    596c:	89 81       	ldd	r24, Y+1	; 0x01
    596e:	9a 81       	ldd	r25, Y+2	; 0x02
    5970:	ab 81       	ldd	r26, Y+3	; 0x03
    5972:	bc 81       	ldd	r27, Y+4	; 0x04
    5974:	82 2b       	or	r24, r18
    5976:	93 2b       	or	r25, r19
    5978:	a4 2b       	or	r26, r20
    597a:	b5 2b       	or	r27, r21
    597c:	89 83       	std	Y+1, r24	; 0x01
    597e:	9a 83       	std	Y+2, r25	; 0x02
    5980:	ab 83       	std	Y+3, r26	; 0x03
    5982:	bc 83       	std	Y+4, r27	; 0x04
						   Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ONE], DIO_u8LOW) << KPAD_SHIFTBIT_ZERO);

		for(Local_u8RowIndex = KPAD_ZERO; Local_u8RowIndex < KPAD_ROWNUM; Local_u8RowIndex++)
    5984:	1e 82       	std	Y+6, r1	; 0x06
    5986:	89 c0       	rjmp	.+274    	; 0x5a9a <KPAD_enuGetPassedKey+0x1a8>
		{
			/* Read the current row */
			 Local_u32Check |= (DIO_enuGetPinValue(Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ZERO],
    5988:	8e 81       	ldd	r24, Y+6	; 0x06
    598a:	88 2f       	mov	r24, r24
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	88 0f       	add	r24, r24
    5990:	99 1f       	adc	r25, r25
    5992:	fc 01       	movw	r30, r24
    5994:	ef 52       	subi	r30, 0x2F	; 47
    5996:	fe 4f       	sbci	r31, 0xFE	; 254
    5998:	40 81       	ld	r20, Z
    599a:	8e 81       	ldd	r24, Y+6	; 0x06
    599c:	88 2f       	mov	r24, r24
    599e:	90 e0       	ldi	r25, 0x00	; 0
    59a0:	88 0f       	add	r24, r24
    59a2:	99 1f       	adc	r25, r25
    59a4:	fc 01       	movw	r30, r24
    59a6:	ee 52       	subi	r30, 0x2E	; 46
    59a8:	fe 4f       	sbci	r31, 0xFE	; 254
    59aa:	90 81       	ld	r25, Z
    59ac:	9e 01       	movw	r18, r28
    59ae:	27 5f       	subi	r18, 0xF7	; 247
    59b0:	3f 4f       	sbci	r19, 0xFF	; 255
    59b2:	84 2f       	mov	r24, r20
    59b4:	69 2f       	mov	r22, r25
    59b6:	a9 01       	movw	r20, r18
    59b8:	0e 94 4e 0b 	call	0x169c	; 0x169c <DIO_enuGetPinValue>
    59bc:	88 2f       	mov	r24, r24
    59be:	90 e0       	ldi	r25, 0x00	; 0
    59c0:	88 0f       	add	r24, r24
    59c2:	99 1f       	adc	r25, r25
    59c4:	88 0f       	add	r24, r24
    59c6:	99 1f       	adc	r25, r25
    59c8:	88 0f       	add	r24, r24
    59ca:	99 1f       	adc	r25, r25
    59cc:	9c 01       	movw	r18, r24
    59ce:	44 27       	eor	r20, r20
    59d0:	37 fd       	sbrc	r19, 7
    59d2:	40 95       	com	r20
    59d4:	54 2f       	mov	r21, r20
    59d6:	89 81       	ldd	r24, Y+1	; 0x01
    59d8:	9a 81       	ldd	r25, Y+2	; 0x02
    59da:	ab 81       	ldd	r26, Y+3	; 0x03
    59dc:	bc 81       	ldd	r27, Y+4	; 0x04
    59de:	82 2b       	or	r24, r18
    59e0:	93 2b       	or	r25, r19
    59e2:	a4 2b       	or	r26, r20
    59e4:	b5 2b       	or	r27, r21
    59e6:	89 83       	std	Y+1, r24	; 0x01
    59e8:	9a 83       	std	Y+2, r25	; 0x02
    59ea:	ab 83       	std	Y+3, r26	; 0x03
    59ec:	bc 83       	std	Y+4, r27	; 0x04
													Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ONE], &Local_u8KeyState) << KPAD_SHIFTBIT_THREE);
			 if(DIO_u8LOW == Local_u8KeyState)
    59ee:	89 85       	ldd	r24, Y+9	; 0x09
    59f0:	88 23       	and	r24, r24
    59f2:	09 f0       	breq	.+2      	; 0x59f6 <KPAD_enuGetPassedKey+0x104>
    59f4:	4f c0       	rjmp	.+158    	; 0x5a94 <KPAD_enuGetPassedKey+0x1a2>
    59f6:	36 c0       	rjmp	.+108    	; 0x5a64 <KPAD_enuGetPassedKey+0x172>
			 {
				 /* Polling (Busy waiting until the key is released) */
				 while(DIO_u8LOW == Local_u8KeyState)
				 {
					 Local_u32Check |= (DIO_enuGetPinValue(Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ZERO],
    59f8:	8e 81       	ldd	r24, Y+6	; 0x06
    59fa:	88 2f       	mov	r24, r24
    59fc:	90 e0       	ldi	r25, 0x00	; 0
    59fe:	88 0f       	add	r24, r24
    5a00:	99 1f       	adc	r25, r25
    5a02:	fc 01       	movw	r30, r24
    5a04:	ef 52       	subi	r30, 0x2F	; 47
    5a06:	fe 4f       	sbci	r31, 0xFE	; 254
    5a08:	40 81       	ld	r20, Z
    5a0a:	8e 81       	ldd	r24, Y+6	; 0x06
    5a0c:	88 2f       	mov	r24, r24
    5a0e:	90 e0       	ldi	r25, 0x00	; 0
    5a10:	88 0f       	add	r24, r24
    5a12:	99 1f       	adc	r25, r25
    5a14:	fc 01       	movw	r30, r24
    5a16:	ee 52       	subi	r30, 0x2E	; 46
    5a18:	fe 4f       	sbci	r31, 0xFE	; 254
    5a1a:	90 81       	ld	r25, Z
    5a1c:	9e 01       	movw	r18, r28
    5a1e:	27 5f       	subi	r18, 0xF7	; 247
    5a20:	3f 4f       	sbci	r19, 0xFF	; 255
    5a22:	84 2f       	mov	r24, r20
    5a24:	69 2f       	mov	r22, r25
    5a26:	a9 01       	movw	r20, r18
    5a28:	0e 94 4e 0b 	call	0x169c	; 0x169c <DIO_enuGetPinValue>
    5a2c:	88 2f       	mov	r24, r24
    5a2e:	90 e0       	ldi	r25, 0x00	; 0
    5a30:	00 24       	eor	r0, r0
    5a32:	96 95       	lsr	r25
    5a34:	87 95       	ror	r24
    5a36:	07 94       	ror	r0
    5a38:	96 95       	lsr	r25
    5a3a:	87 95       	ror	r24
    5a3c:	07 94       	ror	r0
    5a3e:	98 2f       	mov	r25, r24
    5a40:	80 2d       	mov	r24, r0
    5a42:	9c 01       	movw	r18, r24
    5a44:	44 27       	eor	r20, r20
    5a46:	37 fd       	sbrc	r19, 7
    5a48:	40 95       	com	r20
    5a4a:	54 2f       	mov	r21, r20
    5a4c:	89 81       	ldd	r24, Y+1	; 0x01
    5a4e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a50:	ab 81       	ldd	r26, Y+3	; 0x03
    5a52:	bc 81       	ldd	r27, Y+4	; 0x04
    5a54:	82 2b       	or	r24, r18
    5a56:	93 2b       	or	r25, r19
    5a58:	a4 2b       	or	r26, r20
    5a5a:	b5 2b       	or	r27, r21
    5a5c:	89 83       	std	Y+1, r24	; 0x01
    5a5e:	9a 83       	std	Y+2, r25	; 0x02
    5a60:	ab 83       	std	Y+3, r26	; 0x03
    5a62:	bc 83       	std	Y+4, r27	; 0x04
			 Local_u32Check |= (DIO_enuGetPinValue(Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ZERO],
													Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ONE], &Local_u8KeyState) << KPAD_SHIFTBIT_THREE);
			 if(DIO_u8LOW == Local_u8KeyState)
			 {
				 /* Polling (Busy waiting until the key is released) */
				 while(DIO_u8LOW == Local_u8KeyState)
    5a64:	89 85       	ldd	r24, Y+9	; 0x09
    5a66:	88 23       	and	r24, r24
    5a68:	39 f2       	breq	.-114    	; 0x59f8 <KPAD_enuGetPassedKey+0x106>
				 {
					 Local_u32Check |= (DIO_enuGetPinValue(Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ZERO],
															Local_u8AKPADRowButtons[Local_u8RowIndex][KPAD_ONE], &Local_u8KeyState) << KPAD_SHIFTBIT_SIX);
				 }

				 *Copy_pu8KeyNumber = Local_u8AKPADARR[Local_u8RowIndex][Local_u8ColIndex];
    5a6a:	8e 81       	ldd	r24, Y+6	; 0x06
    5a6c:	48 2f       	mov	r20, r24
    5a6e:	50 e0       	ldi	r21, 0x00	; 0
    5a70:	8f 81       	ldd	r24, Y+7	; 0x07
    5a72:	28 2f       	mov	r18, r24
    5a74:	30 e0       	ldi	r19, 0x00	; 0
    5a76:	ca 01       	movw	r24, r20
    5a78:	88 0f       	add	r24, r24
    5a7a:	99 1f       	adc	r25, r25
    5a7c:	88 0f       	add	r24, r24
    5a7e:	99 1f       	adc	r25, r25
    5a80:	82 0f       	add	r24, r18
    5a82:	93 1f       	adc	r25, r19
    5a84:	fc 01       	movw	r30, r24
    5a86:	ef 53       	subi	r30, 0x3F	; 63
    5a88:	fe 4f       	sbci	r31, 0xFE	; 254
    5a8a:	80 81       	ld	r24, Z
    5a8c:	ea 85       	ldd	r30, Y+10	; 0x0a
    5a8e:	fb 85       	ldd	r31, Y+11	; 0x0b
    5a90:	80 83       	st	Z, r24
    5a92:	07 c0       	rjmp	.+14     	; 0x5aa2 <KPAD_enuGetPassedKey+0x1b0>
	{
		/* Activate Column */
		Local_u32Check |= (DIO_enuSetPinValue(Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ZERO],
						   Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ONE], DIO_u8LOW) << KPAD_SHIFTBIT_ZERO);

		for(Local_u8RowIndex = KPAD_ZERO; Local_u8RowIndex < KPAD_ROWNUM; Local_u8RowIndex++)
    5a94:	8e 81       	ldd	r24, Y+6	; 0x06
    5a96:	8f 5f       	subi	r24, 0xFF	; 255
    5a98:	8e 83       	std	Y+6, r24	; 0x06
    5a9a:	8e 81       	ldd	r24, Y+6	; 0x06
    5a9c:	84 30       	cpi	r24, 0x04	; 4
    5a9e:	08 f4       	brcc	.+2      	; 0x5aa2 <KPAD_enuGetPassedKey+0x1b0>
    5aa0:	73 cf       	rjmp	.-282    	; 0x5988 <KPAD_enuGetPassedKey+0x96>
				 break;
			 }
		}

		/* Deactivate Column */
		Local_u32Check |= (DIO_enuSetPinValue(Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ZERO],
    5aa2:	8f 81       	ldd	r24, Y+7	; 0x07
    5aa4:	88 2f       	mov	r24, r24
    5aa6:	90 e0       	ldi	r25, 0x00	; 0
    5aa8:	88 0f       	add	r24, r24
    5aaa:	99 1f       	adc	r25, r25
    5aac:	fc 01       	movw	r30, r24
    5aae:	e7 52       	subi	r30, 0x27	; 39
    5ab0:	fe 4f       	sbci	r31, 0xFE	; 254
    5ab2:	20 81       	ld	r18, Z
    5ab4:	8f 81       	ldd	r24, Y+7	; 0x07
    5ab6:	88 2f       	mov	r24, r24
    5ab8:	90 e0       	ldi	r25, 0x00	; 0
    5aba:	88 0f       	add	r24, r24
    5abc:	99 1f       	adc	r25, r25
    5abe:	fc 01       	movw	r30, r24
    5ac0:	e6 52       	subi	r30, 0x26	; 38
    5ac2:	fe 4f       	sbci	r31, 0xFE	; 254
    5ac4:	90 81       	ld	r25, Z
    5ac6:	82 2f       	mov	r24, r18
    5ac8:	69 2f       	mov	r22, r25
    5aca:	41 e0       	ldi	r20, 0x01	; 1
    5acc:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <DIO_enuSetPinValue>
    5ad0:	88 2f       	mov	r24, r24
    5ad2:	90 e0       	ldi	r25, 0x00	; 0
    5ad4:	98 2f       	mov	r25, r24
    5ad6:	88 27       	eor	r24, r24
    5ad8:	99 0f       	add	r25, r25
    5ada:	9c 01       	movw	r18, r24
    5adc:	44 27       	eor	r20, r20
    5ade:	37 fd       	sbrc	r19, 7
    5ae0:	40 95       	com	r20
    5ae2:	54 2f       	mov	r21, r20
    5ae4:	89 81       	ldd	r24, Y+1	; 0x01
    5ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ae8:	ab 81       	ldd	r26, Y+3	; 0x03
    5aea:	bc 81       	ldd	r27, Y+4	; 0x04
    5aec:	82 2b       	or	r24, r18
    5aee:	93 2b       	or	r25, r19
    5af0:	a4 2b       	or	r26, r20
    5af2:	b5 2b       	or	r27, r21
    5af4:	89 83       	std	Y+1, r24	; 0x01
    5af6:	9a 83       	std	Y+2, r25	; 0x02
    5af8:	ab 83       	std	Y+3, r26	; 0x03
    5afa:	bc 83       	std	Y+4, r27	; 0x04
	else
	{
		return ES_NULL_POINTER;
	}

	for(Local_u8ColIndex = KPAD_ZERO; Local_u8ColIndex < KPAD_COLNUM; Local_u8ColIndex++)
    5afc:	8f 81       	ldd	r24, Y+7	; 0x07
    5afe:	8f 5f       	subi	r24, 0xFF	; 255
    5b00:	8f 83       	std	Y+7, r24	; 0x07
    5b02:	8f 81       	ldd	r24, Y+7	; 0x07
    5b04:	84 30       	cpi	r24, 0x04	; 4
    5b06:	08 f4       	brcc	.+2      	; 0x5b0a <KPAD_enuGetPassedKey+0x218>
    5b08:	16 cf       	rjmp	.-468    	; 0x5936 <KPAD_enuGetPassedKey+0x44>
		/* Deactivate Column */
		Local_u32Check |= (DIO_enuSetPinValue(Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ZERO],
						   	   	   	   	   	   Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ONE], DIO_u8HIGH) << KPAD_SHIFTBIT_NINE);
	}

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWELVE; Local_u8Iterator += KPAD_THREE)
    5b0a:	1d 82       	std	Y+5, r1	; 0x05
    5b0c:	1e c0       	rjmp	.+60     	; 0x5b4a <KPAD_enuGetPassedKey+0x258>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & KPAD_SEVEN) != ES_OK)
    5b0e:	8d 81       	ldd	r24, Y+5	; 0x05
    5b10:	28 2f       	mov	r18, r24
    5b12:	30 e0       	ldi	r19, 0x00	; 0
    5b14:	89 81       	ldd	r24, Y+1	; 0x01
    5b16:	9a 81       	ldd	r25, Y+2	; 0x02
    5b18:	ab 81       	ldd	r26, Y+3	; 0x03
    5b1a:	bc 81       	ldd	r27, Y+4	; 0x04
    5b1c:	02 2e       	mov	r0, r18
    5b1e:	04 c0       	rjmp	.+8      	; 0x5b28 <KPAD_enuGetPassedKey+0x236>
    5b20:	b6 95       	lsr	r27
    5b22:	a7 95       	ror	r26
    5b24:	97 95       	ror	r25
    5b26:	87 95       	ror	r24
    5b28:	0a 94       	dec	r0
    5b2a:	d2 f7       	brpl	.-12     	; 0x5b20 <KPAD_enuGetPassedKey+0x22e>
    5b2c:	87 70       	andi	r24, 0x07	; 7
    5b2e:	90 70       	andi	r25, 0x00	; 0
    5b30:	a0 70       	andi	r26, 0x00	; 0
    5b32:	b0 70       	andi	r27, 0x00	; 0
    5b34:	81 30       	cpi	r24, 0x01	; 1
    5b36:	91 05       	cpc	r25, r1
    5b38:	a1 05       	cpc	r26, r1
    5b3a:	b1 05       	cpc	r27, r1
    5b3c:	19 f0       	breq	.+6      	; 0x5b44 <KPAD_enuGetPassedKey+0x252>
		{
			return Local_enuErrorState;
    5b3e:	88 85       	ldd	r24, Y+8	; 0x08
    5b40:	8c 87       	std	Y+12, r24	; 0x0c
    5b42:	0a c0       	rjmp	.+20     	; 0x5b58 <KPAD_enuGetPassedKey+0x266>
		/* Deactivate Column */
		Local_u32Check |= (DIO_enuSetPinValue(Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ZERO],
						   	   	   	   	   	   Local_u8AKPADColButtons[Local_u8ColIndex][KPAD_ONE], DIO_u8HIGH) << KPAD_SHIFTBIT_NINE);
	}

	for(Local_u8Iterator = KPAD_ZERO; Local_u8Iterator < KPAD_TWELVE; Local_u8Iterator += KPAD_THREE)
    5b44:	8d 81       	ldd	r24, Y+5	; 0x05
    5b46:	8d 5f       	subi	r24, 0xFD	; 253
    5b48:	8d 83       	std	Y+5, r24	; 0x05
    5b4a:	8d 81       	ldd	r24, Y+5	; 0x05
    5b4c:	8c 30       	cpi	r24, 0x0C	; 12
    5b4e:	f8 f2       	brcs	.-66     	; 0x5b0e <KPAD_enuGetPassedKey+0x21c>
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & KPAD_SEVEN) != ES_OK)
		{
			return Local_enuErrorState;
		}
	}
	Local_enuErrorState = ES_OK;
    5b50:	81 e0       	ldi	r24, 0x01	; 1
    5b52:	88 87       	std	Y+8, r24	; 0x08

	return Local_enuErrorState;
    5b54:	88 85       	ldd	r24, Y+8	; 0x08
    5b56:	8c 87       	std	Y+12, r24	; 0x0c
    5b58:	8c 85       	ldd	r24, Y+12	; 0x0c
}
    5b5a:	2c 96       	adiw	r28, 0x0c	; 12
    5b5c:	0f b6       	in	r0, 0x3f	; 63
    5b5e:	f8 94       	cli
    5b60:	de bf       	out	0x3e, r29	; 62
    5b62:	0f be       	out	0x3f, r0	; 63
    5b64:	cd bf       	out	0x3d, r28	; 61
    5b66:	cf 91       	pop	r28
    5b68:	df 91       	pop	r29
    5b6a:	08 95       	ret

00005b6c <main>:
#include "../HAL/Keypad/Keypad_int.h"
#include "../HAL/LCD/LCD_int.h"


int main(void)
{
    5b6c:	df 93       	push	r29
    5b6e:	cf 93       	push	r28
    5b70:	00 d0       	rcall	.+0      	; 0x5b72 <main+0x6>
    5b72:	0f 92       	push	r0
    5b74:	cd b7       	in	r28, 0x3d	; 61
    5b76:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8KeyPressed = 0, Local_u8Counter = 0, Local_u8Check = 0;
    5b78:	1b 82       	std	Y+3, r1	; 0x03
    5b7a:	1a 82       	std	Y+2, r1	; 0x02
    5b7c:	19 82       	std	Y+1, r1	; 0x01
	LCD_enuInit();
    5b7e:	0e 94 c2 23 	call	0x4784	; 0x4784 <LCD_enuInit>
	Local_u8Check = KPAD_enuInit();
    5b82:	0e 94 3b 2a 	call	0x5476	; 0x5476 <KPAD_enuInit>
    5b86:	89 83       	std	Y+1, r24	; 0x01

	while(1)
	{
		if(Local_u8Check)
    5b88:	89 81       	ldd	r24, Y+1	; 0x01
    5b8a:	88 23       	and	r24, r24
    5b8c:	e9 f3       	breq	.-6      	; 0x5b88 <main+0x1c>
		{
		/* Polling (Stop every thing in application until keypad pressed)*/
		do
		{
			KPAD_enuGetPassedKey(&Local_u8KeyPressed);
    5b8e:	ce 01       	movw	r24, r28
    5b90:	03 96       	adiw	r24, 0x03	; 3
    5b92:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <KPAD_enuGetPassedKey>


		}while(Local_u8KeyPressed == 0xff); //Key Not pressed
    5b96:	8b 81       	ldd	r24, Y+3	; 0x03
    5b98:	8f 3f       	cpi	r24, 0xFF	; 255
    5b9a:	c9 f3       	breq	.-14     	; 0x5b8e <main+0x22>


		if(Local_u8KeyPressed == 'c')
    5b9c:	8b 81       	ldd	r24, Y+3	; 0x03
    5b9e:	83 36       	cpi	r24, 0x63	; 99
    5ba0:	39 f4       	brne	.+14     	; 0x5bb0 <main+0x44>
		{
			LCD_enuSendCommand(0x01); //Clear Display
    5ba2:	81 e0       	ldi	r24, 0x01	; 1
    5ba4:	0e 94 e2 25 	call	0x4bc4	; 0x4bc4 <LCD_enuSendCommand>
			Local_u8Counter++;
    5ba8:	8a 81       	ldd	r24, Y+2	; 0x02
    5baa:	8f 5f       	subi	r24, 0xFF	; 255
    5bac:	8a 83       	std	Y+2, r24	; 0x02
    5bae:	1f c0       	rjmp	.+62     	; 0x5bee <main+0x82>
		}
		else if(Local_u8KeyPressed >= 0 && Local_u8KeyPressed <= 9)
    5bb0:	8b 81       	ldd	r24, Y+3	; 0x03
    5bb2:	8a 30       	cpi	r24, 0x0A	; 10
    5bb4:	68 f4       	brcc	.+26     	; 0x5bd0 <main+0x64>
		{
			LCD_enuDisplayNumber(Local_u8KeyPressed);
    5bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    5bb8:	88 2f       	mov	r24, r24
    5bba:	90 e0       	ldi	r25, 0x00	; 0
    5bbc:	a0 e0       	ldi	r26, 0x00	; 0
    5bbe:	b0 e0       	ldi	r27, 0x00	; 0
    5bc0:	bc 01       	movw	r22, r24
    5bc2:	cd 01       	movw	r24, r26
    5bc4:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <LCD_enuDisplayNumber>
			Local_u8Counter++;
    5bc8:	8a 81       	ldd	r24, Y+2	; 0x02
    5bca:	8f 5f       	subi	r24, 0xFF	; 255
    5bcc:	8a 83       	std	Y+2, r24	; 0x02
    5bce:	0f c0       	rjmp	.+30     	; 0x5bee <main+0x82>
		}
		else if((Local_u8KeyPressed >= '*' && Local_u8KeyPressed <= '/') || Local_u8KeyPressed == '=')
    5bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    5bd2:	8a 32       	cpi	r24, 0x2A	; 42
    5bd4:	18 f0       	brcs	.+6      	; 0x5bdc <main+0x70>
    5bd6:	8b 81       	ldd	r24, Y+3	; 0x03
    5bd8:	80 33       	cpi	r24, 0x30	; 48
    5bda:	18 f0       	brcs	.+6      	; 0x5be2 <main+0x76>
    5bdc:	8b 81       	ldd	r24, Y+3	; 0x03
    5bde:	8d 33       	cpi	r24, 0x3D	; 61
    5be0:	31 f4       	brne	.+12     	; 0x5bee <main+0x82>
		{
			LCD_enuDisplayChar(Local_u8KeyPressed);
    5be2:	8b 81       	ldd	r24, Y+3	; 0x03
    5be4:	0e 94 f7 25 	call	0x4bee	; 0x4bee <LCD_enuDisplayChar>
			Local_u8Counter++;
    5be8:	8a 81       	ldd	r24, Y+2	; 0x02
    5bea:	8f 5f       	subi	r24, 0xFF	; 255
    5bec:	8a 83       	std	Y+2, r24	; 0x02
		}

		if(Local_u8Counter == 16)
    5bee:	8a 81       	ldd	r24, Y+2	; 0x02
    5bf0:	80 31       	cpi	r24, 0x10	; 16
    5bf2:	51 f6       	brne	.-108    	; 0x5b88 <main+0x1c>
		{
			LCD_enuSendCommand(0xC0); //Go to second line
    5bf4:	80 ec       	ldi	r24, 0xC0	; 192
    5bf6:	0e 94 e2 25 	call	0x4bc4	; 0x4bc4 <LCD_enuSendCommand>
    5bfa:	c6 cf       	rjmp	.-116    	; 0x5b88 <main+0x1c>

00005bfc <__prologue_saves__>:
    5bfc:	2f 92       	push	r2
    5bfe:	3f 92       	push	r3
    5c00:	4f 92       	push	r4
    5c02:	5f 92       	push	r5
    5c04:	6f 92       	push	r6
    5c06:	7f 92       	push	r7
    5c08:	8f 92       	push	r8
    5c0a:	9f 92       	push	r9
    5c0c:	af 92       	push	r10
    5c0e:	bf 92       	push	r11
    5c10:	cf 92       	push	r12
    5c12:	df 92       	push	r13
    5c14:	ef 92       	push	r14
    5c16:	ff 92       	push	r15
    5c18:	0f 93       	push	r16
    5c1a:	1f 93       	push	r17
    5c1c:	cf 93       	push	r28
    5c1e:	df 93       	push	r29
    5c20:	cd b7       	in	r28, 0x3d	; 61
    5c22:	de b7       	in	r29, 0x3e	; 62
    5c24:	ca 1b       	sub	r28, r26
    5c26:	db 0b       	sbc	r29, r27
    5c28:	0f b6       	in	r0, 0x3f	; 63
    5c2a:	f8 94       	cli
    5c2c:	de bf       	out	0x3e, r29	; 62
    5c2e:	0f be       	out	0x3f, r0	; 63
    5c30:	cd bf       	out	0x3d, r28	; 61
    5c32:	09 94       	ijmp

00005c34 <__epilogue_restores__>:
    5c34:	2a 88       	ldd	r2, Y+18	; 0x12
    5c36:	39 88       	ldd	r3, Y+17	; 0x11
    5c38:	48 88       	ldd	r4, Y+16	; 0x10
    5c3a:	5f 84       	ldd	r5, Y+15	; 0x0f
    5c3c:	6e 84       	ldd	r6, Y+14	; 0x0e
    5c3e:	7d 84       	ldd	r7, Y+13	; 0x0d
    5c40:	8c 84       	ldd	r8, Y+12	; 0x0c
    5c42:	9b 84       	ldd	r9, Y+11	; 0x0b
    5c44:	aa 84       	ldd	r10, Y+10	; 0x0a
    5c46:	b9 84       	ldd	r11, Y+9	; 0x09
    5c48:	c8 84       	ldd	r12, Y+8	; 0x08
    5c4a:	df 80       	ldd	r13, Y+7	; 0x07
    5c4c:	ee 80       	ldd	r14, Y+6	; 0x06
    5c4e:	fd 80       	ldd	r15, Y+5	; 0x05
    5c50:	0c 81       	ldd	r16, Y+4	; 0x04
    5c52:	1b 81       	ldd	r17, Y+3	; 0x03
    5c54:	aa 81       	ldd	r26, Y+2	; 0x02
    5c56:	b9 81       	ldd	r27, Y+1	; 0x01
    5c58:	ce 0f       	add	r28, r30
    5c5a:	d1 1d       	adc	r29, r1
    5c5c:	0f b6       	in	r0, 0x3f	; 63
    5c5e:	f8 94       	cli
    5c60:	de bf       	out	0x3e, r29	; 62
    5c62:	0f be       	out	0x3f, r0	; 63
    5c64:	cd bf       	out	0x3d, r28	; 61
    5c66:	ed 01       	movw	r28, r26
    5c68:	08 95       	ret

00005c6a <_exit>:
    5c6a:	f8 94       	cli

00005c6c <__stop_program>:
    5c6c:	ff cf       	rjmp	.-2      	; 0x5c6c <__stop_program>
