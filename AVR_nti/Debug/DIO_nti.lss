
DIO_nti.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004506  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  00004506  0000457a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002c70  00000000  00000000  000045e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001747  00000000  00000000  00007258  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000899f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00008adf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00008c4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000a898  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b783  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c530  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c690  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000c91d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d0eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e0       	ldi	r30, 0x06	; 6
      68:	f5 e4       	ldi	r31, 0x45	; 69
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 38 21 	call	0x4270	; 0x4270 <main>
      7a:	0c 94 81 22 	jmp	0x4502	; 0x4502 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 4a 22 	jmp	0x4494	; 0x4494 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 66 22 	jmp	0x44cc	; 0x44cc <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 4a 22 	jmp	0x4494	; 0x4494 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 66 22 	jmp	0x44cc	; 0x44cc <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 5a 22 	jmp	0x44b4	; 0x44b4 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 76 22 	jmp	0x44ec	; 0x44ec <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enuInit>:
#include "DIO_config.h"



ES_t DIO_enuInit(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
     b40:	19 82       	std	Y+1, r1	; 0x01

	DDRA = CONC(PA_PIN7_DIR, PA_PIN6_DIR, PA_PIN5_DIR, PA_PIN4_DIR, PA_PIN3_DIR, PA_PIN2_DIR, PA_PIN1_DIR, PA_PIN0_DIR);
     b42:	ea e3       	ldi	r30, 0x3A	; 58
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	8f ef       	ldi	r24, 0xFF	; 255
     b48:	80 83       	st	Z, r24
	DDRB = CONC(PB_PIN7_DIR, PB_PIN6_DIR, PB_PIN5_DIR, PB_PIN4_DIR, PB_PIN3_DIR, PB_PIN2_DIR, PB_PIN1_DIR, PB_PIN0_DIR);
     b4a:	e7 e3       	ldi	r30, 0x37	; 55
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	80 83       	st	Z, r24
	DDRC = CONC(PC_PIN7_DIR, PC_PIN6_DIR, PC_PIN5_DIR, PC_PIN4_DIR, PC_PIN3_DIR, PC_PIN2_DIR, PC_PIN1_DIR, PC_PIN0_DIR);
     b52:	e4 e3       	ldi	r30, 0x34	; 52
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	8a ea       	ldi	r24, 0xAA	; 170
     b58:	80 83       	st	Z, r24
	DDRD = CONC(PD_PIN7_DIR, PD_PIN6_DIR, PD_PIN5_DIR, PD_PIN4_DIR, PD_PIN3_DIR, PD_PIN2_DIR, PD_PIN1_DIR, PD_PIN0_DIR);
     b5a:	e1 e3       	ldi	r30, 0x31	; 49
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	8a ea       	ldi	r24, 0xAA	; 170
     b60:	80 83       	st	Z, r24

	PORTA = CONC(PA_PIN7_VAL, PA_PIN6_VAL, PA_PIN5_VAL, PA_PIN4_VAL, PA_PIN3_VAL, PA_PIN2_VAL, PA_PIN1_VAL, PA_PIN0_VAL);
     b62:	eb e3       	ldi	r30, 0x3B	; 59
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	10 82       	st	Z, r1
	PORTB = CONC(PB_PIN7_VAL, PB_PIN6_VAL, PB_PIN5_VAL, PB_PIN4_VAL, PB_PIN3_VAL, PB_PIN2_VAL, PB_PIN1_VAL, PB_PIN0_VAL);
     b68:	e8 e3       	ldi	r30, 0x38	; 56
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	10 82       	st	Z, r1
	PORTC = CONC(PC_PIN7_VAL, PC_PIN6_VAL, PC_PIN5_VAL, PC_PIN4_VAL, PC_PIN3_VAL, PC_PIN2_VAL, PC_PIN1_VAL, PC_PIN0_VAL);
     b6e:	e5 e3       	ldi	r30, 0x35	; 53
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	86 e6       	ldi	r24, 0x66	; 102
     b74:	80 83       	st	Z, r24
	PORTD = CONC(PD_PIN7_VAL, PD_PIN6_VAL, PD_PIN5_VAL, PD_PIN4_VAL, PD_PIN3_VAL, PD_PIN2_VAL, PD_PIN1_VAL, PD_PIN0_VAL);
     b76:	e2 e3       	ldi	r30, 0x32	; 50
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	86 e6       	ldi	r24, 0x66	; 102
     b7c:	80 83       	st	Z, r24

	Local_enuErrorState = ES_OK;
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
     b82:	89 81       	ldd	r24, Y+1	; 0x01
}
     b84:	0f 90       	pop	r0
     b86:	cf 91       	pop	r28
     b88:	df 91       	pop	r29
     b8a:	08 95       	ret

00000b8c <DIO_enuSetPortDirection>:


ES_t DIO_enuSetPortDirection(u8 Copy_u8PortID, u8 Copy_u8Value)
{
     b8c:	df 93       	push	r29
     b8e:	cf 93       	push	r28
     b90:	00 d0       	rcall	.+0      	; 0xb92 <DIO_enuSetPortDirection+0x6>
     b92:	00 d0       	rcall	.+0      	; 0xb94 <DIO_enuSetPortDirection+0x8>
     b94:	0f 92       	push	r0
     b96:	cd b7       	in	r28, 0x3d	; 61
     b98:	de b7       	in	r29, 0x3e	; 62
     b9a:	8a 83       	std	Y+2, r24	; 0x02
     b9c:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     b9e:	19 82       	std	Y+1, r1	; 0x01

	/*Range Check*/
	if(Copy_u8PortID <= DIO_PORTD)
     ba0:	8a 81       	ldd	r24, Y+2	; 0x02
     ba2:	84 30       	cpi	r24, 0x04	; 4
     ba4:	a8 f5       	brcc	.+106    	; 0xc10 <DIO_enuSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
     ba6:	8a 81       	ldd	r24, Y+2	; 0x02
     ba8:	28 2f       	mov	r18, r24
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	3d 83       	std	Y+5, r19	; 0x05
     bae:	2c 83       	std	Y+4, r18	; 0x04
     bb0:	8c 81       	ldd	r24, Y+4	; 0x04
     bb2:	9d 81       	ldd	r25, Y+5	; 0x05
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	91 05       	cpc	r25, r1
     bb8:	d1 f0       	breq	.+52     	; 0xbee <DIO_enuSetPortDirection+0x62>
     bba:	2c 81       	ldd	r18, Y+4	; 0x04
     bbc:	3d 81       	ldd	r19, Y+5	; 0x05
     bbe:	22 30       	cpi	r18, 0x02	; 2
     bc0:	31 05       	cpc	r19, r1
     bc2:	2c f4       	brge	.+10     	; 0xbce <DIO_enuSetPortDirection+0x42>
     bc4:	8c 81       	ldd	r24, Y+4	; 0x04
     bc6:	9d 81       	ldd	r25, Y+5	; 0x05
     bc8:	00 97       	sbiw	r24, 0x00	; 0
     bca:	61 f0       	breq	.+24     	; 0xbe4 <DIO_enuSetPortDirection+0x58>
     bcc:	1e c0       	rjmp	.+60     	; 0xc0a <DIO_enuSetPortDirection+0x7e>
     bce:	2c 81       	ldd	r18, Y+4	; 0x04
     bd0:	3d 81       	ldd	r19, Y+5	; 0x05
     bd2:	22 30       	cpi	r18, 0x02	; 2
     bd4:	31 05       	cpc	r19, r1
     bd6:	81 f0       	breq	.+32     	; 0xbf8 <DIO_enuSetPortDirection+0x6c>
     bd8:	8c 81       	ldd	r24, Y+4	; 0x04
     bda:	9d 81       	ldd	r25, Y+5	; 0x05
     bdc:	83 30       	cpi	r24, 0x03	; 3
     bde:	91 05       	cpc	r25, r1
     be0:	81 f0       	breq	.+32     	; 0xc02 <DIO_enuSetPortDirection+0x76>
     be2:	13 c0       	rjmp	.+38     	; 0xc0a <DIO_enuSetPortDirection+0x7e>
		{
		case DIO_PORTA:
			DDRA = Copy_u8Value;
     be4:	ea e3       	ldi	r30, 0x3A	; 58
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	8b 81       	ldd	r24, Y+3	; 0x03
     bea:	80 83       	st	Z, r24
     bec:	0e c0       	rjmp	.+28     	; 0xc0a <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTB:
			DDRB = Copy_u8Value;
     bee:	e7 e3       	ldi	r30, 0x37	; 55
     bf0:	f0 e0       	ldi	r31, 0x00	; 0
     bf2:	8b 81       	ldd	r24, Y+3	; 0x03
     bf4:	80 83       	st	Z, r24
     bf6:	09 c0       	rjmp	.+18     	; 0xc0a <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTC:
			DDRC = Copy_u8Value;
     bf8:	e4 e3       	ldi	r30, 0x34	; 52
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	8b 81       	ldd	r24, Y+3	; 0x03
     bfe:	80 83       	st	Z, r24
     c00:	04 c0       	rjmp	.+8      	; 0xc0a <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTD:
			DDRD = Copy_u8Value;
     c02:	e1 e3       	ldi	r30, 0x31	; 49
     c04:	f0 e0       	ldi	r31, 0x00	; 0
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState = ES_OK;
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	89 83       	std	Y+1, r24	; 0x01
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <DIO_enuSetPortDirection+0x88>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     c10:	83 e0       	ldi	r24, 0x03	; 3
     c12:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
     c14:	89 81       	ldd	r24, Y+1	; 0x01
}
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	cf 91       	pop	r28
     c22:	df 91       	pop	r29
     c24:	08 95       	ret

00000c26 <DIO_enuSetPortValue>:


ES_t DIO_enuSetPortValue(u8 Copy_u8PortID, u8 Copy_u8Value)
{
     c26:	df 93       	push	r29
     c28:	cf 93       	push	r28
     c2a:	00 d0       	rcall	.+0      	; 0xc2c <DIO_enuSetPortValue+0x6>
     c2c:	00 d0       	rcall	.+0      	; 0xc2e <DIO_enuSetPortValue+0x8>
     c2e:	0f 92       	push	r0
     c30:	cd b7       	in	r28, 0x3d	; 61
     c32:	de b7       	in	r29, 0x3e	; 62
     c34:	8a 83       	std	Y+2, r24	; 0x02
     c36:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     c38:	19 82       	std	Y+1, r1	; 0x01

	/* Range Check */
	if(Copy_u8PortID <= DIO_PORTD)
     c3a:	8a 81       	ldd	r24, Y+2	; 0x02
     c3c:	84 30       	cpi	r24, 0x04	; 4
     c3e:	a8 f5       	brcc	.+106    	; 0xcaa <DIO_enuSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
     c40:	8a 81       	ldd	r24, Y+2	; 0x02
     c42:	28 2f       	mov	r18, r24
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	3d 83       	std	Y+5, r19	; 0x05
     c48:	2c 83       	std	Y+4, r18	; 0x04
     c4a:	8c 81       	ldd	r24, Y+4	; 0x04
     c4c:	9d 81       	ldd	r25, Y+5	; 0x05
     c4e:	81 30       	cpi	r24, 0x01	; 1
     c50:	91 05       	cpc	r25, r1
     c52:	d1 f0       	breq	.+52     	; 0xc88 <DIO_enuSetPortValue+0x62>
     c54:	2c 81       	ldd	r18, Y+4	; 0x04
     c56:	3d 81       	ldd	r19, Y+5	; 0x05
     c58:	22 30       	cpi	r18, 0x02	; 2
     c5a:	31 05       	cpc	r19, r1
     c5c:	2c f4       	brge	.+10     	; 0xc68 <DIO_enuSetPortValue+0x42>
     c5e:	8c 81       	ldd	r24, Y+4	; 0x04
     c60:	9d 81       	ldd	r25, Y+5	; 0x05
     c62:	00 97       	sbiw	r24, 0x00	; 0
     c64:	61 f0       	breq	.+24     	; 0xc7e <DIO_enuSetPortValue+0x58>
     c66:	1e c0       	rjmp	.+60     	; 0xca4 <DIO_enuSetPortValue+0x7e>
     c68:	2c 81       	ldd	r18, Y+4	; 0x04
     c6a:	3d 81       	ldd	r19, Y+5	; 0x05
     c6c:	22 30       	cpi	r18, 0x02	; 2
     c6e:	31 05       	cpc	r19, r1
     c70:	81 f0       	breq	.+32     	; 0xc92 <DIO_enuSetPortValue+0x6c>
     c72:	8c 81       	ldd	r24, Y+4	; 0x04
     c74:	9d 81       	ldd	r25, Y+5	; 0x05
     c76:	83 30       	cpi	r24, 0x03	; 3
     c78:	91 05       	cpc	r25, r1
     c7a:	81 f0       	breq	.+32     	; 0xc9c <DIO_enuSetPortValue+0x76>
     c7c:	13 c0       	rjmp	.+38     	; 0xca4 <DIO_enuSetPortValue+0x7e>
		{
		case DIO_PORTA:
			PORTA = Copy_u8Value;
     c7e:	eb e3       	ldi	r30, 0x3B	; 59
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	8b 81       	ldd	r24, Y+3	; 0x03
     c84:	80 83       	st	Z, r24
     c86:	0e c0       	rjmp	.+28     	; 0xca4 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTB:
			PORTB = Copy_u8Value;
     c88:	e8 e3       	ldi	r30, 0x38	; 56
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	8b 81       	ldd	r24, Y+3	; 0x03
     c8e:	80 83       	st	Z, r24
     c90:	09 c0       	rjmp	.+18     	; 0xca4 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTC:
			PORTC = Copy_u8Value;
     c92:	e5 e3       	ldi	r30, 0x35	; 53
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	8b 81       	ldd	r24, Y+3	; 0x03
     c98:	80 83       	st	Z, r24
     c9a:	04 c0       	rjmp	.+8      	; 0xca4 <DIO_enuSetPortValue+0x7e>
			break;
		case DIO_PORTD:
			PORTD = Copy_u8Value;
     c9c:	e2 e3       	ldi	r30, 0x32	; 50
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	8b 81       	ldd	r24, Y+3	; 0x03
     ca2:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState = ES_OK;
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	89 83       	std	Y+1, r24	; 0x01
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <DIO_enuSetPortValue+0x88>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     caa:	83 e0       	ldi	r24, 0x03	; 3
     cac:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
     cae:	89 81       	ldd	r24, Y+1	; 0x01
}
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	0f 90       	pop	r0
     cba:	cf 91       	pop	r28
     cbc:	df 91       	pop	r29
     cbe:	08 95       	ret

00000cc0 <DIO_enuTogPortValue>:


ES_t DIO_enuTogPortValue(u8 Copy_u8PortID)
{
     cc0:	df 93       	push	r29
     cc2:	cf 93       	push	r28
     cc4:	00 d0       	rcall	.+0      	; 0xcc6 <DIO_enuTogPortValue+0x6>
     cc6:	00 d0       	rcall	.+0      	; 0xcc8 <DIO_enuTogPortValue+0x8>
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
     ccc:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
     cce:	19 82       	std	Y+1, r1	; 0x01

	/* Range Check */
	if(Copy_u8PortID <= DIO_PORTD)
     cd0:	8a 81       	ldd	r24, Y+2	; 0x02
     cd2:	84 30       	cpi	r24, 0x04	; 4
     cd4:	08 f0       	brcs	.+2      	; 0xcd8 <DIO_enuTogPortValue+0x18>
     cd6:	41 c0       	rjmp	.+130    	; 0xd5a <DIO_enuTogPortValue+0x9a>
	{
		switch(Copy_u8PortID)
     cd8:	8a 81       	ldd	r24, Y+2	; 0x02
     cda:	28 2f       	mov	r18, r24
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	3c 83       	std	Y+4, r19	; 0x04
     ce0:	2b 83       	std	Y+3, r18	; 0x03
     ce2:	8b 81       	ldd	r24, Y+3	; 0x03
     ce4:	9c 81       	ldd	r25, Y+4	; 0x04
     ce6:	81 30       	cpi	r24, 0x01	; 1
     ce8:	91 05       	cpc	r25, r1
     cea:	e9 f0       	breq	.+58     	; 0xd26 <DIO_enuTogPortValue+0x66>
     cec:	2b 81       	ldd	r18, Y+3	; 0x03
     cee:	3c 81       	ldd	r19, Y+4	; 0x04
     cf0:	22 30       	cpi	r18, 0x02	; 2
     cf2:	31 05       	cpc	r19, r1
     cf4:	2c f4       	brge	.+10     	; 0xd00 <DIO_enuTogPortValue+0x40>
     cf6:	8b 81       	ldd	r24, Y+3	; 0x03
     cf8:	9c 81       	ldd	r25, Y+4	; 0x04
     cfa:	00 97       	sbiw	r24, 0x00	; 0
     cfc:	61 f0       	breq	.+24     	; 0xd16 <DIO_enuTogPortValue+0x56>
     cfe:	2a c0       	rjmp	.+84     	; 0xd54 <DIO_enuTogPortValue+0x94>
     d00:	2b 81       	ldd	r18, Y+3	; 0x03
     d02:	3c 81       	ldd	r19, Y+4	; 0x04
     d04:	22 30       	cpi	r18, 0x02	; 2
     d06:	31 05       	cpc	r19, r1
     d08:	b1 f0       	breq	.+44     	; 0xd36 <DIO_enuTogPortValue+0x76>
     d0a:	8b 81       	ldd	r24, Y+3	; 0x03
     d0c:	9c 81       	ldd	r25, Y+4	; 0x04
     d0e:	83 30       	cpi	r24, 0x03	; 3
     d10:	91 05       	cpc	r25, r1
     d12:	c9 f0       	breq	.+50     	; 0xd46 <DIO_enuTogPortValue+0x86>
     d14:	1f c0       	rjmp	.+62     	; 0xd54 <DIO_enuTogPortValue+0x94>
		{
		case DIO_PORTA:
			PORTA = ~PORTA;
     d16:	ab e3       	ldi	r26, 0x3B	; 59
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	eb e3       	ldi	r30, 0x3B	; 59
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	80 81       	ld	r24, Z
     d20:	80 95       	com	r24
     d22:	8c 93       	st	X, r24
     d24:	17 c0       	rjmp	.+46     	; 0xd54 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTB:
			PORTB = ~PORTB;
     d26:	a8 e3       	ldi	r26, 0x38	; 56
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	e8 e3       	ldi	r30, 0x38	; 56
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	80 95       	com	r24
     d32:	8c 93       	st	X, r24
     d34:	0f c0       	rjmp	.+30     	; 0xd54 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTC:
			PORTC = ~PORTC;
     d36:	a5 e3       	ldi	r26, 0x35	; 53
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e5 e3       	ldi	r30, 0x35	; 53
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	80 81       	ld	r24, Z
     d40:	80 95       	com	r24
     d42:	8c 93       	st	X, r24
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <DIO_enuTogPortValue+0x94>
			break;
		case DIO_PORTD:
			PORTD = ~PORTD;
     d46:	a2 e3       	ldi	r26, 0x32	; 50
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e2 e3       	ldi	r30, 0x32	; 50
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	80 95       	com	r24
     d52:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	89 83       	std	Y+1, r24	; 0x01
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <DIO_enuTogPortValue+0x9e>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuErrorState;
     d5e:	89 81       	ldd	r24, Y+1	; 0x01
}
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	0f 90       	pop	r0
     d66:	0f 90       	pop	r0
     d68:	cf 91       	pop	r28
     d6a:	df 91       	pop	r29
     d6c:	08 95       	ret

00000d6e <DIO_enuGetPortValue>:


ES_t DIO_enuGetPortValue(u8 Copy_u8PortID, u8 * Copy_pu8Value)
{
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	00 d0       	rcall	.+0      	; 0xd74 <DIO_enuGetPortValue+0x6>
     d74:	00 d0       	rcall	.+0      	; 0xd76 <DIO_enuGetPortValue+0x8>
     d76:	00 d0       	rcall	.+0      	; 0xd78 <DIO_enuGetPortValue+0xa>
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
     d7c:	8a 83       	std	Y+2, r24	; 0x02
     d7e:	7c 83       	std	Y+4, r23	; 0x04
     d80:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
     d82:	19 82       	std	Y+1, r1	; 0x01

	/* Check if wild pointer */
	if(Copy_pu8Value != NULL)
     d84:	8b 81       	ldd	r24, Y+3	; 0x03
     d86:	9c 81       	ldd	r25, Y+4	; 0x04
     d88:	00 97       	sbiw	r24, 0x00	; 0
     d8a:	09 f4       	brne	.+2      	; 0xd8e <DIO_enuGetPortValue+0x20>
     d8c:	43 c0       	rjmp	.+134    	; 0xe14 <DIO_enuGetPortValue+0xa6>
	{
		/* Change Range */
		if(Copy_u8PortID <= DIO_PORTD)
     d8e:	8a 81       	ldd	r24, Y+2	; 0x02
     d90:	84 30       	cpi	r24, 0x04	; 4
     d92:	e8 f5       	brcc	.+122    	; 0xe0e <DIO_enuGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
     d94:	8a 81       	ldd	r24, Y+2	; 0x02
     d96:	28 2f       	mov	r18, r24
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	3e 83       	std	Y+6, r19	; 0x06
     d9c:	2d 83       	std	Y+5, r18	; 0x05
     d9e:	8d 81       	ldd	r24, Y+5	; 0x05
     da0:	9e 81       	ldd	r25, Y+6	; 0x06
     da2:	81 30       	cpi	r24, 0x01	; 1
     da4:	91 05       	cpc	r25, r1
     da6:	e1 f0       	breq	.+56     	; 0xde0 <DIO_enuGetPortValue+0x72>
     da8:	2d 81       	ldd	r18, Y+5	; 0x05
     daa:	3e 81       	ldd	r19, Y+6	; 0x06
     dac:	22 30       	cpi	r18, 0x02	; 2
     dae:	31 05       	cpc	r19, r1
     db0:	2c f4       	brge	.+10     	; 0xdbc <DIO_enuGetPortValue+0x4e>
     db2:	8d 81       	ldd	r24, Y+5	; 0x05
     db4:	9e 81       	ldd	r25, Y+6	; 0x06
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	61 f0       	breq	.+24     	; 0xdd2 <DIO_enuGetPortValue+0x64>
     dba:	26 c0       	rjmp	.+76     	; 0xe08 <DIO_enuGetPortValue+0x9a>
     dbc:	2d 81       	ldd	r18, Y+5	; 0x05
     dbe:	3e 81       	ldd	r19, Y+6	; 0x06
     dc0:	22 30       	cpi	r18, 0x02	; 2
     dc2:	31 05       	cpc	r19, r1
     dc4:	a1 f0       	breq	.+40     	; 0xdee <DIO_enuGetPortValue+0x80>
     dc6:	8d 81       	ldd	r24, Y+5	; 0x05
     dc8:	9e 81       	ldd	r25, Y+6	; 0x06
     dca:	83 30       	cpi	r24, 0x03	; 3
     dcc:	91 05       	cpc	r25, r1
     dce:	b1 f0       	breq	.+44     	; 0xdfc <DIO_enuGetPortValue+0x8e>
     dd0:	1b c0       	rjmp	.+54     	; 0xe08 <DIO_enuGetPortValue+0x9a>
			{
			case DIO_PORTA:
				*Copy_pu8Value = PINA;
     dd2:	e9 e3       	ldi	r30, 0x39	; 57
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 81       	ld	r24, Z
     dd8:	eb 81       	ldd	r30, Y+3	; 0x03
     dda:	fc 81       	ldd	r31, Y+4	; 0x04
     ddc:	80 83       	st	Z, r24
     dde:	14 c0       	rjmp	.+40     	; 0xe08 <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTB:
				*Copy_pu8Value = PINB;
     de0:	e6 e3       	ldi	r30, 0x36	; 54
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	eb 81       	ldd	r30, Y+3	; 0x03
     de8:	fc 81       	ldd	r31, Y+4	; 0x04
     dea:	80 83       	st	Z, r24
     dec:	0d c0       	rjmp	.+26     	; 0xe08 <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTC:
				*Copy_pu8Value = PINC;
     dee:	e3 e3       	ldi	r30, 0x33	; 51
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	80 81       	ld	r24, Z
     df4:	eb 81       	ldd	r30, Y+3	; 0x03
     df6:	fc 81       	ldd	r31, Y+4	; 0x04
     df8:	80 83       	st	Z, r24
     dfa:	06 c0       	rjmp	.+12     	; 0xe08 <DIO_enuGetPortValue+0x9a>
				break;
			case DIO_PORTD:
				*Copy_pu8Value = PIND;
     dfc:	e0 e3       	ldi	r30, 0x30	; 48
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	80 81       	ld	r24, Z
     e02:	eb 81       	ldd	r30, Y+3	; 0x03
     e04:	fc 81       	ldd	r31, Y+4	; 0x04
     e06:	80 83       	st	Z, r24
				break;
			}
			Local_enuErrorState = ES_OK;
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	89 83       	std	Y+1, r24	; 0x01
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <DIO_enuGetPortValue+0xaa>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
     e0e:	83 e0       	ldi	r24, 0x03	; 3
     e10:	89 83       	std	Y+1, r24	; 0x01
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <DIO_enuGetPortValue+0xaa>
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
     e14:	82 e0       	ldi	r24, 0x02	; 2
     e16:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
     e18:	89 81       	ldd	r24, Y+1	; 0x01
}
     e1a:	26 96       	adiw	r28, 0x06	; 6
     e1c:	0f b6       	in	r0, 0x3f	; 63
     e1e:	f8 94       	cli
     e20:	de bf       	out	0x3e, r29	; 62
     e22:	0f be       	out	0x3f, r0	; 63
     e24:	cd bf       	out	0x3d, r28	; 61
     e26:	cf 91       	pop	r28
     e28:	df 91       	pop	r29
     e2a:	08 95       	ret

00000e2c <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
     e2c:	df 93       	push	r29
     e2e:	cf 93       	push	r28
     e30:	00 d0       	rcall	.+0      	; 0xe32 <DIO_enuSetPinDirection+0x6>
     e32:	00 d0       	rcall	.+0      	; 0xe34 <DIO_enuSetPinDirection+0x8>
     e34:	00 d0       	rcall	.+0      	; 0xe36 <DIO_enuSetPinDirection+0xa>
     e36:	cd b7       	in	r28, 0x3d	; 61
     e38:	de b7       	in	r29, 0x3e	; 62
     e3a:	8a 83       	std	Y+2, r24	; 0x02
     e3c:	6b 83       	std	Y+3, r22	; 0x03
     e3e:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
     e40:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) && (Copy_u8Value <= OUTPUT))
     e42:	8a 81       	ldd	r24, Y+2	; 0x02
     e44:	84 30       	cpi	r24, 0x04	; 4
     e46:	08 f0       	brcs	.+2      	; 0xe4a <DIO_enuSetPinDirection+0x1e>
     e48:	d1 c0       	rjmp	.+418    	; 0xfec <DIO_enuSetPinDirection+0x1c0>
     e4a:	8b 81       	ldd	r24, Y+3	; 0x03
     e4c:	88 30       	cpi	r24, 0x08	; 8
     e4e:	08 f0       	brcs	.+2      	; 0xe52 <DIO_enuSetPinDirection+0x26>
     e50:	cd c0       	rjmp	.+410    	; 0xfec <DIO_enuSetPinDirection+0x1c0>
     e52:	8c 81       	ldd	r24, Y+4	; 0x04
     e54:	82 30       	cpi	r24, 0x02	; 2
     e56:	08 f0       	brcs	.+2      	; 0xe5a <DIO_enuSetPinDirection+0x2e>
     e58:	c9 c0       	rjmp	.+402    	; 0xfec <DIO_enuSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
     e5a:	8a 81       	ldd	r24, Y+2	; 0x02
     e5c:	28 2f       	mov	r18, r24
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	3e 83       	std	Y+6, r19	; 0x06
     e62:	2d 83       	std	Y+5, r18	; 0x05
     e64:	6d 81       	ldd	r22, Y+5	; 0x05
     e66:	7e 81       	ldd	r23, Y+6	; 0x06
     e68:	61 30       	cpi	r22, 0x01	; 1
     e6a:	71 05       	cpc	r23, r1
     e6c:	09 f4       	brne	.+2      	; 0xe70 <DIO_enuSetPinDirection+0x44>
     e6e:	41 c0       	rjmp	.+130    	; 0xef2 <DIO_enuSetPinDirection+0xc6>
     e70:	8d 81       	ldd	r24, Y+5	; 0x05
     e72:	9e 81       	ldd	r25, Y+6	; 0x06
     e74:	82 30       	cpi	r24, 0x02	; 2
     e76:	91 05       	cpc	r25, r1
     e78:	34 f4       	brge	.+12     	; 0xe86 <DIO_enuSetPinDirection+0x5a>
     e7a:	2d 81       	ldd	r18, Y+5	; 0x05
     e7c:	3e 81       	ldd	r19, Y+6	; 0x06
     e7e:	21 15       	cp	r18, r1
     e80:	31 05       	cpc	r19, r1
     e82:	71 f0       	breq	.+28     	; 0xea0 <DIO_enuSetPinDirection+0x74>
     e84:	b0 c0       	rjmp	.+352    	; 0xfe6 <DIO_enuSetPinDirection+0x1ba>
     e86:	6d 81       	ldd	r22, Y+5	; 0x05
     e88:	7e 81       	ldd	r23, Y+6	; 0x06
     e8a:	62 30       	cpi	r22, 0x02	; 2
     e8c:	71 05       	cpc	r23, r1
     e8e:	09 f4       	brne	.+2      	; 0xe92 <DIO_enuSetPinDirection+0x66>
     e90:	59 c0       	rjmp	.+178    	; 0xf44 <DIO_enuSetPinDirection+0x118>
     e92:	8d 81       	ldd	r24, Y+5	; 0x05
     e94:	9e 81       	ldd	r25, Y+6	; 0x06
     e96:	83 30       	cpi	r24, 0x03	; 3
     e98:	91 05       	cpc	r25, r1
     e9a:	09 f4       	brne	.+2      	; 0xe9e <DIO_enuSetPinDirection+0x72>
     e9c:	7c c0       	rjmp	.+248    	; 0xf96 <DIO_enuSetPinDirection+0x16a>
     e9e:	a3 c0       	rjmp	.+326    	; 0xfe6 <DIO_enuSetPinDirection+0x1ba>
		{
		case DIO_PORTA:
			DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);             //Mask bit == Clear Bit
     ea0:	aa e3       	ldi	r26, 0x3A	; 58
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	ea e3       	ldi	r30, 0x3A	; 58
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	48 2f       	mov	r20, r24
     eac:	8b 81       	ldd	r24, Y+3	; 0x03
     eae:	28 2f       	mov	r18, r24
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <DIO_enuSetPinDirection+0x90>
     eb8:	88 0f       	add	r24, r24
     eba:	99 1f       	adc	r25, r25
     ebc:	2a 95       	dec	r18
     ebe:	e2 f7       	brpl	.-8      	; 0xeb8 <DIO_enuSetPinDirection+0x8c>
     ec0:	80 95       	com	r24
     ec2:	84 23       	and	r24, r20
     ec4:	8c 93       	st	X, r24
			DDRA |=  (Copy_u8Value << Copy_u8PinID); //Write new value
     ec6:	aa e3       	ldi	r26, 0x3A	; 58
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	ea e3       	ldi	r30, 0x3A	; 58
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	80 81       	ld	r24, Z
     ed0:	48 2f       	mov	r20, r24
     ed2:	8c 81       	ldd	r24, Y+4	; 0x04
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	88 2f       	mov	r24, r24
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	b9 01       	movw	r22, r18
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <DIO_enuSetPinDirection+0xba>
     ee2:	66 0f       	add	r22, r22
     ee4:	77 1f       	adc	r23, r23
     ee6:	8a 95       	dec	r24
     ee8:	e2 f7       	brpl	.-8      	; 0xee2 <DIO_enuSetPinDirection+0xb6>
     eea:	cb 01       	movw	r24, r22
     eec:	84 2b       	or	r24, r20
     eee:	8c 93       	st	X, r24
     ef0:	7a c0       	rjmp	.+244    	; 0xfe6 <DIO_enuSetPinDirection+0x1ba>
			 *      -> 101-0-1001 | 000-1-0000 (Write Value)
			 *      -> 101-1-1-1001 (Result)
			 */
			break;
		case DIO_PORTB:
			DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
     ef2:	a7 e3       	ldi	r26, 0x37	; 55
     ef4:	b0 e0       	ldi	r27, 0x00	; 0
     ef6:	e7 e3       	ldi	r30, 0x37	; 55
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	80 81       	ld	r24, Z
     efc:	48 2f       	mov	r20, r24
     efe:	8b 81       	ldd	r24, Y+3	; 0x03
     f00:	28 2f       	mov	r18, r24
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <DIO_enuSetPinDirection+0xe2>
     f0a:	88 0f       	add	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	2a 95       	dec	r18
     f10:	e2 f7       	brpl	.-8      	; 0xf0a <DIO_enuSetPinDirection+0xde>
     f12:	80 95       	com	r24
     f14:	84 23       	and	r24, r20
     f16:	8c 93       	st	X, r24
			DDRB |= (Copy_u8Value << Copy_u8PinID);
     f18:	a7 e3       	ldi	r26, 0x37	; 55
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e7 e3       	ldi	r30, 0x37	; 55
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	80 81       	ld	r24, Z
     f22:	48 2f       	mov	r20, r24
     f24:	8c 81       	ldd	r24, Y+4	; 0x04
     f26:	28 2f       	mov	r18, r24
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	8b 81       	ldd	r24, Y+3	; 0x03
     f2c:	88 2f       	mov	r24, r24
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	b9 01       	movw	r22, r18
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <DIO_enuSetPinDirection+0x10c>
     f34:	66 0f       	add	r22, r22
     f36:	77 1f       	adc	r23, r23
     f38:	8a 95       	dec	r24
     f3a:	e2 f7       	brpl	.-8      	; 0xf34 <DIO_enuSetPinDirection+0x108>
     f3c:	cb 01       	movw	r24, r22
     f3e:	84 2b       	or	r24, r20
     f40:	8c 93       	st	X, r24
     f42:	51 c0       	rjmp	.+162    	; 0xfe6 <DIO_enuSetPinDirection+0x1ba>
			break;
		case DIO_PORTC:
			DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
     f44:	a4 e3       	ldi	r26, 0x34	; 52
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	e4 e3       	ldi	r30, 0x34	; 52
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	48 2f       	mov	r20, r24
     f50:	8b 81       	ldd	r24, Y+3	; 0x03
     f52:	28 2f       	mov	r18, r24
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <DIO_enuSetPinDirection+0x134>
     f5c:	88 0f       	add	r24, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	2a 95       	dec	r18
     f62:	e2 f7       	brpl	.-8      	; 0xf5c <DIO_enuSetPinDirection+0x130>
     f64:	80 95       	com	r24
     f66:	84 23       	and	r24, r20
     f68:	8c 93       	st	X, r24
			DDRC |= (Copy_u8Value << Copy_u8PinID);
     f6a:	a4 e3       	ldi	r26, 0x34	; 52
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
     f6e:	e4 e3       	ldi	r30, 0x34	; 52
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	80 81       	ld	r24, Z
     f74:	48 2f       	mov	r20, r24
     f76:	8c 81       	ldd	r24, Y+4	; 0x04
     f78:	28 2f       	mov	r18, r24
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	8b 81       	ldd	r24, Y+3	; 0x03
     f7e:	88 2f       	mov	r24, r24
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	b9 01       	movw	r22, r18
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <DIO_enuSetPinDirection+0x15e>
     f86:	66 0f       	add	r22, r22
     f88:	77 1f       	adc	r23, r23
     f8a:	8a 95       	dec	r24
     f8c:	e2 f7       	brpl	.-8      	; 0xf86 <DIO_enuSetPinDirection+0x15a>
     f8e:	cb 01       	movw	r24, r22
     f90:	84 2b       	or	r24, r20
     f92:	8c 93       	st	X, r24
     f94:	28 c0       	rjmp	.+80     	; 0xfe6 <DIO_enuSetPinDirection+0x1ba>
			break;
		case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
     f96:	a1 e3       	ldi	r26, 0x31	; 49
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	e1 e3       	ldi	r30, 0x31	; 49
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	80 81       	ld	r24, Z
     fa0:	48 2f       	mov	r20, r24
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	28 2f       	mov	r18, r24
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <DIO_enuSetPinDirection+0x186>
     fae:	88 0f       	add	r24, r24
     fb0:	99 1f       	adc	r25, r25
     fb2:	2a 95       	dec	r18
     fb4:	e2 f7       	brpl	.-8      	; 0xfae <DIO_enuSetPinDirection+0x182>
     fb6:	80 95       	com	r24
     fb8:	84 23       	and	r24, r20
     fba:	8c 93       	st	X, r24
			DDRD |= (Copy_u8Value << Copy_u8PinID);
     fbc:	a1 e3       	ldi	r26, 0x31	; 49
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e1 e3       	ldi	r30, 0x31	; 49
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	48 2f       	mov	r20, r24
     fc8:	8c 81       	ldd	r24, Y+4	; 0x04
     fca:	28 2f       	mov	r18, r24
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	8b 81       	ldd	r24, Y+3	; 0x03
     fd0:	88 2f       	mov	r24, r24
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	b9 01       	movw	r22, r18
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <DIO_enuSetPinDirection+0x1b0>
     fd8:	66 0f       	add	r22, r22
     fda:	77 1f       	adc	r23, r23
     fdc:	8a 95       	dec	r24
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <DIO_enuSetPinDirection+0x1ac>
     fe0:	cb 01       	movw	r24, r22
     fe2:	84 2b       	or	r24, r20
     fe4:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	89 83       	std	Y+1, r24	; 0x01
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <DIO_enuSetPinDirection+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     fec:	83 e0       	ldi	r24, 0x03	; 3
     fee:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
}
     ff2:	26 96       	adiw	r28, 0x06	; 6
     ff4:	0f b6       	in	r0, 0x3f	; 63
     ff6:	f8 94       	cli
     ff8:	de bf       	out	0x3e, r29	; 62
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	cd bf       	out	0x3d, r28	; 61
     ffe:	cf 91       	pop	r28
    1000:	df 91       	pop	r29
    1002:	08 95       	ret

00001004 <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
    1004:	df 93       	push	r29
    1006:	cf 93       	push	r28
    1008:	00 d0       	rcall	.+0      	; 0x100a <DIO_enuSetPinValue+0x6>
    100a:	00 d0       	rcall	.+0      	; 0x100c <DIO_enuSetPinValue+0x8>
    100c:	00 d0       	rcall	.+0      	; 0x100e <DIO_enuSetPinValue+0xa>
    100e:	cd b7       	in	r28, 0x3d	; 61
    1010:	de b7       	in	r29, 0x3e	; 62
    1012:	8a 83       	std	Y+2, r24	; 0x02
    1014:	6b 83       	std	Y+3, r22	; 0x03
    1016:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    1018:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) && (Copy_u8Value <= OUTPUT))
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	84 30       	cpi	r24, 0x04	; 4
    101e:	08 f0       	brcs	.+2      	; 0x1022 <DIO_enuSetPinValue+0x1e>
    1020:	d1 c0       	rjmp	.+418    	; 0x11c4 <DIO_enuSetPinValue+0x1c0>
    1022:	8b 81       	ldd	r24, Y+3	; 0x03
    1024:	88 30       	cpi	r24, 0x08	; 8
    1026:	08 f0       	brcs	.+2      	; 0x102a <DIO_enuSetPinValue+0x26>
    1028:	cd c0       	rjmp	.+410    	; 0x11c4 <DIO_enuSetPinValue+0x1c0>
    102a:	8c 81       	ldd	r24, Y+4	; 0x04
    102c:	82 30       	cpi	r24, 0x02	; 2
    102e:	08 f0       	brcs	.+2      	; 0x1032 <DIO_enuSetPinValue+0x2e>
    1030:	c9 c0       	rjmp	.+402    	; 0x11c4 <DIO_enuSetPinValue+0x1c0>
	{
		switch(Copy_u8PortID)
    1032:	8a 81       	ldd	r24, Y+2	; 0x02
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	3e 83       	std	Y+6, r19	; 0x06
    103a:	2d 83       	std	Y+5, r18	; 0x05
    103c:	6d 81       	ldd	r22, Y+5	; 0x05
    103e:	7e 81       	ldd	r23, Y+6	; 0x06
    1040:	61 30       	cpi	r22, 0x01	; 1
    1042:	71 05       	cpc	r23, r1
    1044:	09 f4       	brne	.+2      	; 0x1048 <DIO_enuSetPinValue+0x44>
    1046:	41 c0       	rjmp	.+130    	; 0x10ca <DIO_enuSetPinValue+0xc6>
    1048:	8d 81       	ldd	r24, Y+5	; 0x05
    104a:	9e 81       	ldd	r25, Y+6	; 0x06
    104c:	82 30       	cpi	r24, 0x02	; 2
    104e:	91 05       	cpc	r25, r1
    1050:	34 f4       	brge	.+12     	; 0x105e <DIO_enuSetPinValue+0x5a>
    1052:	2d 81       	ldd	r18, Y+5	; 0x05
    1054:	3e 81       	ldd	r19, Y+6	; 0x06
    1056:	21 15       	cp	r18, r1
    1058:	31 05       	cpc	r19, r1
    105a:	71 f0       	breq	.+28     	; 0x1078 <DIO_enuSetPinValue+0x74>
    105c:	b0 c0       	rjmp	.+352    	; 0x11be <DIO_enuSetPinValue+0x1ba>
    105e:	6d 81       	ldd	r22, Y+5	; 0x05
    1060:	7e 81       	ldd	r23, Y+6	; 0x06
    1062:	62 30       	cpi	r22, 0x02	; 2
    1064:	71 05       	cpc	r23, r1
    1066:	09 f4       	brne	.+2      	; 0x106a <DIO_enuSetPinValue+0x66>
    1068:	59 c0       	rjmp	.+178    	; 0x111c <DIO_enuSetPinValue+0x118>
    106a:	8d 81       	ldd	r24, Y+5	; 0x05
    106c:	9e 81       	ldd	r25, Y+6	; 0x06
    106e:	83 30       	cpi	r24, 0x03	; 3
    1070:	91 05       	cpc	r25, r1
    1072:	09 f4       	brne	.+2      	; 0x1076 <DIO_enuSetPinValue+0x72>
    1074:	7c c0       	rjmp	.+248    	; 0x116e <DIO_enuSetPinValue+0x16a>
    1076:	a3 c0       	rjmp	.+326    	; 0x11be <DIO_enuSetPinValue+0x1ba>
		{
		case DIO_PORTA:
			PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);             //Mask bit == Clear Bit
    1078:	ab e3       	ldi	r26, 0x3B	; 59
    107a:	b0 e0       	ldi	r27, 0x00	; 0
    107c:	eb e3       	ldi	r30, 0x3B	; 59
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	80 81       	ld	r24, Z
    1082:	48 2f       	mov	r20, r24
    1084:	8b 81       	ldd	r24, Y+3	; 0x03
    1086:	28 2f       	mov	r18, r24
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <DIO_enuSetPinValue+0x90>
    1090:	88 0f       	add	r24, r24
    1092:	99 1f       	adc	r25, r25
    1094:	2a 95       	dec	r18
    1096:	e2 f7       	brpl	.-8      	; 0x1090 <DIO_enuSetPinValue+0x8c>
    1098:	80 95       	com	r24
    109a:	84 23       	and	r24, r20
    109c:	8c 93       	st	X, r24
			PORTA |=  (Copy_u8Value << Copy_u8PinID); //Write new value
    109e:	ab e3       	ldi	r26, 0x3B	; 59
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	eb e3       	ldi	r30, 0x3B	; 59
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	80 81       	ld	r24, Z
    10a8:	48 2f       	mov	r20, r24
    10aa:	8c 81       	ldd	r24, Y+4	; 0x04
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	88 2f       	mov	r24, r24
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	b9 01       	movw	r22, r18
    10b8:	02 c0       	rjmp	.+4      	; 0x10be <DIO_enuSetPinValue+0xba>
    10ba:	66 0f       	add	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	8a 95       	dec	r24
    10c0:	e2 f7       	brpl	.-8      	; 0x10ba <DIO_enuSetPinValue+0xb6>
    10c2:	cb 01       	movw	r24, r22
    10c4:	84 2b       	or	r24, r20
    10c6:	8c 93       	st	X, r24
    10c8:	7a c0       	rjmp	.+244    	; 0x11be <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTB:
			PORTB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    10ca:	a8 e3       	ldi	r26, 0x38	; 56
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	e8 e3       	ldi	r30, 0x38	; 56
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	80 81       	ld	r24, Z
    10d4:	48 2f       	mov	r20, r24
    10d6:	8b 81       	ldd	r24, Y+3	; 0x03
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	02 c0       	rjmp	.+4      	; 0x10e6 <DIO_enuSetPinValue+0xe2>
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	2a 95       	dec	r18
    10e8:	e2 f7       	brpl	.-8      	; 0x10e2 <DIO_enuSetPinValue+0xde>
    10ea:	80 95       	com	r24
    10ec:	84 23       	and	r24, r20
    10ee:	8c 93       	st	X, r24
			PORTB |= (Copy_u8Value << Copy_u8PinID);
    10f0:	a8 e3       	ldi	r26, 0x38	; 56
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	e8 e3       	ldi	r30, 0x38	; 56
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	48 2f       	mov	r20, r24
    10fc:	8c 81       	ldd	r24, Y+4	; 0x04
    10fe:	28 2f       	mov	r18, r24
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	8b 81       	ldd	r24, Y+3	; 0x03
    1104:	88 2f       	mov	r24, r24
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	b9 01       	movw	r22, r18
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <DIO_enuSetPinValue+0x10c>
    110c:	66 0f       	add	r22, r22
    110e:	77 1f       	adc	r23, r23
    1110:	8a 95       	dec	r24
    1112:	e2 f7       	brpl	.-8      	; 0x110c <DIO_enuSetPinValue+0x108>
    1114:	cb 01       	movw	r24, r22
    1116:	84 2b       	or	r24, r20
    1118:	8c 93       	st	X, r24
    111a:	51 c0       	rjmp	.+162    	; 0x11be <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTC:
			PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    111c:	a5 e3       	ldi	r26, 0x35	; 53
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	e5 e3       	ldi	r30, 0x35	; 53
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	48 2f       	mov	r20, r24
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	28 2f       	mov	r18, r24
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <DIO_enuSetPinValue+0x134>
    1134:	88 0f       	add	r24, r24
    1136:	99 1f       	adc	r25, r25
    1138:	2a 95       	dec	r18
    113a:	e2 f7       	brpl	.-8      	; 0x1134 <DIO_enuSetPinValue+0x130>
    113c:	80 95       	com	r24
    113e:	84 23       	and	r24, r20
    1140:	8c 93       	st	X, r24
			PORTC |= (Copy_u8Value << Copy_u8PinID);
    1142:	a5 e3       	ldi	r26, 0x35	; 53
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	e5 e3       	ldi	r30, 0x35	; 53
    1148:	f0 e0       	ldi	r31, 0x00	; 0
    114a:	80 81       	ld	r24, Z
    114c:	48 2f       	mov	r20, r24
    114e:	8c 81       	ldd	r24, Y+4	; 0x04
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	8b 81       	ldd	r24, Y+3	; 0x03
    1156:	88 2f       	mov	r24, r24
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	b9 01       	movw	r22, r18
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <DIO_enuSetPinValue+0x15e>
    115e:	66 0f       	add	r22, r22
    1160:	77 1f       	adc	r23, r23
    1162:	8a 95       	dec	r24
    1164:	e2 f7       	brpl	.-8      	; 0x115e <DIO_enuSetPinValue+0x15a>
    1166:	cb 01       	movw	r24, r22
    1168:	84 2b       	or	r24, r20
    116a:	8c 93       	st	X, r24
    116c:	28 c0       	rjmp	.+80     	; 0x11be <DIO_enuSetPinValue+0x1ba>
			break;
		case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    116e:	a2 e3       	ldi	r26, 0x32	; 50
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e2 e3       	ldi	r30, 0x32	; 50
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	48 2f       	mov	r20, r24
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	02 c0       	rjmp	.+4      	; 0x118a <DIO_enuSetPinValue+0x186>
    1186:	88 0f       	add	r24, r24
    1188:	99 1f       	adc	r25, r25
    118a:	2a 95       	dec	r18
    118c:	e2 f7       	brpl	.-8      	; 0x1186 <DIO_enuSetPinValue+0x182>
    118e:	80 95       	com	r24
    1190:	84 23       	and	r24, r20
    1192:	8c 93       	st	X, r24
			PORTD |= (Copy_u8Value << Copy_u8PinID);
    1194:	a2 e3       	ldi	r26, 0x32	; 50
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e2 e3       	ldi	r30, 0x32	; 50
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	48 2f       	mov	r20, r24
    11a0:	8c 81       	ldd	r24, Y+4	; 0x04
    11a2:	28 2f       	mov	r18, r24
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	8b 81       	ldd	r24, Y+3	; 0x03
    11a8:	88 2f       	mov	r24, r24
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	b9 01       	movw	r22, r18
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <DIO_enuSetPinValue+0x1b0>
    11b0:	66 0f       	add	r22, r22
    11b2:	77 1f       	adc	r23, r23
    11b4:	8a 95       	dec	r24
    11b6:	e2 f7       	brpl	.-8      	; 0x11b0 <DIO_enuSetPinValue+0x1ac>
    11b8:	cb 01       	movw	r24, r22
    11ba:	84 2b       	or	r24, r20
    11bc:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    11be:	81 e0       	ldi	r24, 0x01	; 1
    11c0:	89 83       	std	Y+1, r24	; 0x01
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <DIO_enuSetPinValue+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    11c4:	83 e0       	ldi	r24, 0x03	; 3
    11c6:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
}
    11ca:	26 96       	adiw	r28, 0x06	; 6
    11cc:	0f b6       	in	r0, 0x3f	; 63
    11ce:	f8 94       	cli
    11d0:	de bf       	out	0x3e, r29	; 62
    11d2:	0f be       	out	0x3f, r0	; 63
    11d4:	cd bf       	out	0x3d, r28	; 61
    11d6:	cf 91       	pop	r28
    11d8:	df 91       	pop	r29
    11da:	08 95       	ret

000011dc <DIO_enuTogPinValue>:

ES_t DIO_enuTogPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID)
{
    11dc:	df 93       	push	r29
    11de:	cf 93       	push	r28
    11e0:	00 d0       	rcall	.+0      	; 0x11e2 <DIO_enuTogPinValue+0x6>
    11e2:	00 d0       	rcall	.+0      	; 0x11e4 <DIO_enuTogPinValue+0x8>
    11e4:	0f 92       	push	r0
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	8a 83       	std	Y+2, r24	; 0x02
    11ec:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    11ee:	19 82       	std	Y+1, r1	; 0x01

	/* Check range */
	if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7))
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	84 30       	cpi	r24, 0x04	; 4
    11f4:	08 f0       	brcs	.+2      	; 0x11f8 <DIO_enuTogPinValue+0x1c>
    11f6:	75 c0       	rjmp	.+234    	; 0x12e2 <DIO_enuTogPinValue+0x106>
    11f8:	8b 81       	ldd	r24, Y+3	; 0x03
    11fa:	88 30       	cpi	r24, 0x08	; 8
    11fc:	08 f0       	brcs	.+2      	; 0x1200 <DIO_enuTogPinValue+0x24>
    11fe:	71 c0       	rjmp	.+226    	; 0x12e2 <DIO_enuTogPinValue+0x106>
	{
		switch(Copy_u8PortID)
    1200:	8a 81       	ldd	r24, Y+2	; 0x02
    1202:	28 2f       	mov	r18, r24
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	3d 83       	std	Y+5, r19	; 0x05
    1208:	2c 83       	std	Y+4, r18	; 0x04
    120a:	8c 81       	ldd	r24, Y+4	; 0x04
    120c:	9d 81       	ldd	r25, Y+5	; 0x05
    120e:	81 30       	cpi	r24, 0x01	; 1
    1210:	91 05       	cpc	r25, r1
    1212:	49 f1       	breq	.+82     	; 0x1266 <DIO_enuTogPinValue+0x8a>
    1214:	2c 81       	ldd	r18, Y+4	; 0x04
    1216:	3d 81       	ldd	r19, Y+5	; 0x05
    1218:	22 30       	cpi	r18, 0x02	; 2
    121a:	31 05       	cpc	r19, r1
    121c:	2c f4       	brge	.+10     	; 0x1228 <DIO_enuTogPinValue+0x4c>
    121e:	8c 81       	ldd	r24, Y+4	; 0x04
    1220:	9d 81       	ldd	r25, Y+5	; 0x05
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	61 f0       	breq	.+24     	; 0x123e <DIO_enuTogPinValue+0x62>
    1226:	5a c0       	rjmp	.+180    	; 0x12dc <DIO_enuTogPinValue+0x100>
    1228:	2c 81       	ldd	r18, Y+4	; 0x04
    122a:	3d 81       	ldd	r19, Y+5	; 0x05
    122c:	22 30       	cpi	r18, 0x02	; 2
    122e:	31 05       	cpc	r19, r1
    1230:	71 f1       	breq	.+92     	; 0x128e <DIO_enuTogPinValue+0xb2>
    1232:	8c 81       	ldd	r24, Y+4	; 0x04
    1234:	9d 81       	ldd	r25, Y+5	; 0x05
    1236:	83 30       	cpi	r24, 0x03	; 3
    1238:	91 05       	cpc	r25, r1
    123a:	e9 f1       	breq	.+122    	; 0x12b6 <DIO_enuTogPinValue+0xda>
    123c:	4f c0       	rjmp	.+158    	; 0x12dc <DIO_enuTogPinValue+0x100>
		{
		case DIO_PORTA:
			PORTA ^=  (DIO_MASK_BIT << Copy_u8PinID);
    123e:	ab e3       	ldi	r26, 0x3B	; 59
    1240:	b0 e0       	ldi	r27, 0x00	; 0
    1242:	eb e3       	ldi	r30, 0x3B	; 59
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	80 81       	ld	r24, Z
    1248:	48 2f       	mov	r20, r24
    124a:	8b 81       	ldd	r24, Y+3	; 0x03
    124c:	28 2f       	mov	r18, r24
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	02 2e       	mov	r0, r18
    1256:	02 c0       	rjmp	.+4      	; 0x125c <DIO_enuTogPinValue+0x80>
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	0a 94       	dec	r0
    125e:	e2 f7       	brpl	.-8      	; 0x1258 <DIO_enuTogPinValue+0x7c>
    1260:	84 27       	eor	r24, r20
    1262:	8c 93       	st	X, r24
    1264:	3b c0       	rjmp	.+118    	; 0x12dc <DIO_enuTogPinValue+0x100>
			 *       -> 000-1-0000
			 *       -> 101-0-1001
			 * */
			break;
		case DIO_PORTB:
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
    1266:	a8 e3       	ldi	r26, 0x38	; 56
    1268:	b0 e0       	ldi	r27, 0x00	; 0
    126a:	e8 e3       	ldi	r30, 0x38	; 56
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	80 81       	ld	r24, Z
    1270:	48 2f       	mov	r20, r24
    1272:	8b 81       	ldd	r24, Y+3	; 0x03
    1274:	28 2f       	mov	r18, r24
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	02 2e       	mov	r0, r18
    127e:	02 c0       	rjmp	.+4      	; 0x1284 <DIO_enuTogPinValue+0xa8>
    1280:	88 0f       	add	r24, r24
    1282:	99 1f       	adc	r25, r25
    1284:	0a 94       	dec	r0
    1286:	e2 f7       	brpl	.-8      	; 0x1280 <DIO_enuTogPinValue+0xa4>
    1288:	84 27       	eor	r24, r20
    128a:	8c 93       	st	X, r24
    128c:	27 c0       	rjmp	.+78     	; 0x12dc <DIO_enuTogPinValue+0x100>
			break;
		case DIO_PORTC:
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
    128e:	a5 e3       	ldi	r26, 0x35	; 53
    1290:	b0 e0       	ldi	r27, 0x00	; 0
    1292:	e5 e3       	ldi	r30, 0x35	; 53
    1294:	f0 e0       	ldi	r31, 0x00	; 0
    1296:	80 81       	ld	r24, Z
    1298:	48 2f       	mov	r20, r24
    129a:	8b 81       	ldd	r24, Y+3	; 0x03
    129c:	28 2f       	mov	r18, r24
    129e:	30 e0       	ldi	r19, 0x00	; 0
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	02 2e       	mov	r0, r18
    12a6:	02 c0       	rjmp	.+4      	; 0x12ac <DIO_enuTogPinValue+0xd0>
    12a8:	88 0f       	add	r24, r24
    12aa:	99 1f       	adc	r25, r25
    12ac:	0a 94       	dec	r0
    12ae:	e2 f7       	brpl	.-8      	; 0x12a8 <DIO_enuTogPinValue+0xcc>
    12b0:	84 27       	eor	r24, r20
    12b2:	8c 93       	st	X, r24
    12b4:	13 c0       	rjmp	.+38     	; 0x12dc <DIO_enuTogPinValue+0x100>
			break;
		case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
    12b6:	a2 e3       	ldi	r26, 0x32	; 50
    12b8:	b0 e0       	ldi	r27, 0x00	; 0
    12ba:	e2 e3       	ldi	r30, 0x32	; 50
    12bc:	f0 e0       	ldi	r31, 0x00	; 0
    12be:	80 81       	ld	r24, Z
    12c0:	48 2f       	mov	r20, r24
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	28 2f       	mov	r18, r24
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	02 2e       	mov	r0, r18
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <DIO_enuTogPinValue+0xf8>
    12d0:	88 0f       	add	r24, r24
    12d2:	99 1f       	adc	r25, r25
    12d4:	0a 94       	dec	r0
    12d6:	e2 f7       	brpl	.-8      	; 0x12d0 <DIO_enuTogPinValue+0xf4>
    12d8:	84 27       	eor	r24, r20
    12da:	8c 93       	st	X, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	89 83       	std	Y+1, r24	; 0x01
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <DIO_enuTogPinValue+0x10a>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    12e2:	83 e0       	ldi	r24, 0x03	; 3
    12e4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    12e6:	89 81       	ldd	r24, Y+1	; 0x01
}
    12e8:	0f 90       	pop	r0
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	0f 90       	pop	r0
    12f0:	0f 90       	pop	r0
    12f2:	cf 91       	pop	r28
    12f4:	df 91       	pop	r29
    12f6:	08 95       	ret

000012f8 <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 * Copy_pu8Value)
{
    12f8:	df 93       	push	r29
    12fa:	cf 93       	push	r28
    12fc:	cd b7       	in	r28, 0x3d	; 61
    12fe:	de b7       	in	r29, 0x3e	; 62
    1300:	27 97       	sbiw	r28, 0x07	; 7
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	f8 94       	cli
    1306:	de bf       	out	0x3e, r29	; 62
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	cd bf       	out	0x3d, r28	; 61
    130c:	8a 83       	std	Y+2, r24	; 0x02
    130e:	6b 83       	std	Y+3, r22	; 0x03
    1310:	5d 83       	std	Y+5, r21	; 0x05
    1312:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    1314:	19 82       	std	Y+1, r1	; 0x01

	/* Check if wild pointer */
	if(Copy_pu8Value != NULL)
    1316:	8c 81       	ldd	r24, Y+4	; 0x04
    1318:	9d 81       	ldd	r25, Y+5	; 0x05
    131a:	00 97       	sbiw	r24, 0x00	; 0
    131c:	09 f4       	brne	.+2      	; 0x1320 <DIO_enuGetPinValue+0x28>
    131e:	7e c0       	rjmp	.+252    	; 0x141c <DIO_enuGetPinValue+0x124>
	{
		/* Check Range */
		if((Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7))
    1320:	8a 81       	ldd	r24, Y+2	; 0x02
    1322:	84 30       	cpi	r24, 0x04	; 4
    1324:	08 f0       	brcs	.+2      	; 0x1328 <DIO_enuGetPinValue+0x30>
    1326:	77 c0       	rjmp	.+238    	; 0x1416 <DIO_enuGetPinValue+0x11e>
    1328:	8b 81       	ldd	r24, Y+3	; 0x03
    132a:	88 30       	cpi	r24, 0x08	; 8
    132c:	08 f0       	brcs	.+2      	; 0x1330 <DIO_enuGetPinValue+0x38>
    132e:	73 c0       	rjmp	.+230    	; 0x1416 <DIO_enuGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
    1330:	8a 81       	ldd	r24, Y+2	; 0x02
    1332:	28 2f       	mov	r18, r24
    1334:	30 e0       	ldi	r19, 0x00	; 0
    1336:	3f 83       	std	Y+7, r19	; 0x07
    1338:	2e 83       	std	Y+6, r18	; 0x06
    133a:	4e 81       	ldd	r20, Y+6	; 0x06
    133c:	5f 81       	ldd	r21, Y+7	; 0x07
    133e:	41 30       	cpi	r20, 0x01	; 1
    1340:	51 05       	cpc	r21, r1
    1342:	59 f1       	breq	.+86     	; 0x139a <DIO_enuGetPinValue+0xa2>
    1344:	8e 81       	ldd	r24, Y+6	; 0x06
    1346:	9f 81       	ldd	r25, Y+7	; 0x07
    1348:	82 30       	cpi	r24, 0x02	; 2
    134a:	91 05       	cpc	r25, r1
    134c:	34 f4       	brge	.+12     	; 0x135a <DIO_enuGetPinValue+0x62>
    134e:	2e 81       	ldd	r18, Y+6	; 0x06
    1350:	3f 81       	ldd	r19, Y+7	; 0x07
    1352:	21 15       	cp	r18, r1
    1354:	31 05       	cpc	r19, r1
    1356:	69 f0       	breq	.+26     	; 0x1372 <DIO_enuGetPinValue+0x7a>
    1358:	5b c0       	rjmp	.+182    	; 0x1410 <DIO_enuGetPinValue+0x118>
    135a:	4e 81       	ldd	r20, Y+6	; 0x06
    135c:	5f 81       	ldd	r21, Y+7	; 0x07
    135e:	42 30       	cpi	r20, 0x02	; 2
    1360:	51 05       	cpc	r21, r1
    1362:	79 f1       	breq	.+94     	; 0x13c2 <DIO_enuGetPinValue+0xca>
    1364:	8e 81       	ldd	r24, Y+6	; 0x06
    1366:	9f 81       	ldd	r25, Y+7	; 0x07
    1368:	83 30       	cpi	r24, 0x03	; 3
    136a:	91 05       	cpc	r25, r1
    136c:	09 f4       	brne	.+2      	; 0x1370 <DIO_enuGetPinValue+0x78>
    136e:	3d c0       	rjmp	.+122    	; 0x13ea <DIO_enuGetPinValue+0xf2>
    1370:	4f c0       	rjmp	.+158    	; 0x1410 <DIO_enuGetPinValue+0x118>
			{
			case DIO_PORTA:
				*Copy_pu8Value = ((PINA >> Copy_u8PinID) & DIO_MASK_BIT);
    1372:	e9 e3       	ldi	r30, 0x39	; 57
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	80 81       	ld	r24, Z
    1378:	28 2f       	mov	r18, r24
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	8b 81       	ldd	r24, Y+3	; 0x03
    137e:	88 2f       	mov	r24, r24
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	a9 01       	movw	r20, r18
    1384:	02 c0       	rjmp	.+4      	; 0x138a <DIO_enuGetPinValue+0x92>
    1386:	55 95       	asr	r21
    1388:	47 95       	ror	r20
    138a:	8a 95       	dec	r24
    138c:	e2 f7       	brpl	.-8      	; 0x1386 <DIO_enuGetPinValue+0x8e>
    138e:	ca 01       	movw	r24, r20
    1390:	81 70       	andi	r24, 0x01	; 1
    1392:	ec 81       	ldd	r30, Y+4	; 0x04
    1394:	fd 81       	ldd	r31, Y+5	; 0x05
    1396:	80 83       	st	Z, r24
    1398:	3b c0       	rjmp	.+118    	; 0x1410 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTB:
				*Copy_pu8Value = ((PINB >> Copy_u8PinID) & DIO_MASK_BIT);
    139a:	e6 e3       	ldi	r30, 0x36	; 54
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	80 81       	ld	r24, Z
    13a0:	28 2f       	mov	r18, r24
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	88 2f       	mov	r24, r24
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	a9 01       	movw	r20, r18
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <DIO_enuGetPinValue+0xba>
    13ae:	55 95       	asr	r21
    13b0:	47 95       	ror	r20
    13b2:	8a 95       	dec	r24
    13b4:	e2 f7       	brpl	.-8      	; 0x13ae <DIO_enuGetPinValue+0xb6>
    13b6:	ca 01       	movw	r24, r20
    13b8:	81 70       	andi	r24, 0x01	; 1
    13ba:	ec 81       	ldd	r30, Y+4	; 0x04
    13bc:	fd 81       	ldd	r31, Y+5	; 0x05
    13be:	80 83       	st	Z, r24
    13c0:	27 c0       	rjmp	.+78     	; 0x1410 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTC:
				*Copy_pu8Value = ((PINC >> Copy_u8PinID) & DIO_MASK_BIT);
    13c2:	e3 e3       	ldi	r30, 0x33	; 51
    13c4:	f0 e0       	ldi	r31, 0x00	; 0
    13c6:	80 81       	ld	r24, Z
    13c8:	28 2f       	mov	r18, r24
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	8b 81       	ldd	r24, Y+3	; 0x03
    13ce:	88 2f       	mov	r24, r24
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	a9 01       	movw	r20, r18
    13d4:	02 c0       	rjmp	.+4      	; 0x13da <DIO_enuGetPinValue+0xe2>
    13d6:	55 95       	asr	r21
    13d8:	47 95       	ror	r20
    13da:	8a 95       	dec	r24
    13dc:	e2 f7       	brpl	.-8      	; 0x13d6 <DIO_enuGetPinValue+0xde>
    13de:	ca 01       	movw	r24, r20
    13e0:	81 70       	andi	r24, 0x01	; 1
    13e2:	ec 81       	ldd	r30, Y+4	; 0x04
    13e4:	fd 81       	ldd	r31, Y+5	; 0x05
    13e6:	80 83       	st	Z, r24
    13e8:	13 c0       	rjmp	.+38     	; 0x1410 <DIO_enuGetPinValue+0x118>
				break;
			case DIO_PORTD:
				*Copy_pu8Value = ((PIND >> Copy_u8PinID) & DIO_MASK_BIT);
    13ea:	e0 e3       	ldi	r30, 0x30	; 48
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	80 81       	ld	r24, Z
    13f0:	28 2f       	mov	r18, r24
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	8b 81       	ldd	r24, Y+3	; 0x03
    13f6:	88 2f       	mov	r24, r24
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	a9 01       	movw	r20, r18
    13fc:	02 c0       	rjmp	.+4      	; 0x1402 <DIO_enuGetPinValue+0x10a>
    13fe:	55 95       	asr	r21
    1400:	47 95       	ror	r20
    1402:	8a 95       	dec	r24
    1404:	e2 f7       	brpl	.-8      	; 0x13fe <DIO_enuGetPinValue+0x106>
    1406:	ca 01       	movw	r24, r20
    1408:	81 70       	andi	r24, 0x01	; 1
    140a:	ec 81       	ldd	r30, Y+4	; 0x04
    140c:	fd 81       	ldd	r31, Y+5	; 0x05
    140e:	80 83       	st	Z, r24
				break;
			}
			Local_enuErrorState = ES_OK;
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	89 83       	std	Y+1, r24	; 0x01
    1414:	05 c0       	rjmp	.+10     	; 0x1420 <DIO_enuGetPinValue+0x128>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    1416:	83 e0       	ldi	r24, 0x03	; 3
    1418:	89 83       	std	Y+1, r24	; 0x01
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <DIO_enuGetPinValue+0x128>
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    141c:	82 e0       	ldi	r24, 0x02	; 2
    141e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    1420:	89 81       	ldd	r24, Y+1	; 0x01
}
    1422:	27 96       	adiw	r28, 0x07	; 7
    1424:	0f b6       	in	r0, 0x3f	; 63
    1426:	f8 94       	cli
    1428:	de bf       	out	0x3e, r29	; 62
    142a:	0f be       	out	0x3f, r0	; 63
    142c:	cd bf       	out	0x3d, r28	; 61
    142e:	cf 91       	pop	r28
    1430:	df 91       	pop	r29
    1432:	08 95       	ret

00001434 <Switch_enuInit>:
#include "../../LIB/STD_TYPES.h"
#include "../../LIB/ERROR_STATE.h"
#include "../../MCAL/DIO/DIO_int.h"

ES_t Switch_enuInit(SW_t * Copy_pAstrSwitches)
{
    1434:	df 93       	push	r29
    1436:	cf 93       	push	r28
    1438:	00 d0       	rcall	.+0      	; 0x143a <Switch_enuInit+0x6>
    143a:	00 d0       	rcall	.+0      	; 0x143c <Switch_enuInit+0x8>
    143c:	cd b7       	in	r28, 0x3d	; 61
    143e:	de b7       	in	r29, 0x3e	; 62
    1440:	9c 83       	std	Y+4, r25	; 0x04
    1442:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    1444:	1a 82       	std	Y+2, r1	; 0x02

	if(Copy_pAstrSwitches != NULL)
    1446:	8b 81       	ldd	r24, Y+3	; 0x03
    1448:	9c 81       	ldd	r25, Y+4	; 0x04
    144a:	00 97       	sbiw	r24, 0x00	; 0
    144c:	09 f4       	brne	.+2      	; 0x1450 <Switch_enuInit+0x1c>
    144e:	5d c0       	rjmp	.+186    	; 0x150a <Switch_enuInit+0xd6>
	{
		u8 Local_u8Iterator = 0;
    1450:	19 82       	std	Y+1, r1	; 0x01

		for(Local_u8Iterator = 0; Local_u8Iterator < SW_NUM; Local_u8Iterator++)
    1452:	19 82       	std	Y+1, r1	; 0x01
    1454:	55 c0       	rjmp	.+170    	; 0x1500 <Switch_enuInit+0xcc>
		{
			Local_enuErrorState = DIO_enuSetPinDirection(Copy_pAstrSwitches[Local_u8Iterator].SW_u8PortID,
    1456:	89 81       	ldd	r24, Y+1	; 0x01
    1458:	28 2f       	mov	r18, r24
    145a:	30 e0       	ldi	r19, 0x00	; 0
    145c:	c9 01       	movw	r24, r18
    145e:	88 0f       	add	r24, r24
    1460:	99 1f       	adc	r25, r25
    1462:	28 0f       	add	r18, r24
    1464:	39 1f       	adc	r19, r25
    1466:	8b 81       	ldd	r24, Y+3	; 0x03
    1468:	9c 81       	ldd	r25, Y+4	; 0x04
    146a:	fc 01       	movw	r30, r24
    146c:	e2 0f       	add	r30, r18
    146e:	f3 1f       	adc	r31, r19
    1470:	40 81       	ld	r20, Z
    1472:	89 81       	ldd	r24, Y+1	; 0x01
    1474:	28 2f       	mov	r18, r24
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	c9 01       	movw	r24, r18
    147a:	88 0f       	add	r24, r24
    147c:	99 1f       	adc	r25, r25
    147e:	28 0f       	add	r18, r24
    1480:	39 1f       	adc	r19, r25
    1482:	8b 81       	ldd	r24, Y+3	; 0x03
    1484:	9c 81       	ldd	r25, Y+4	; 0x04
    1486:	fc 01       	movw	r30, r24
    1488:	e2 0f       	add	r30, r18
    148a:	f3 1f       	adc	r31, r19
    148c:	91 81       	ldd	r25, Z+1	; 0x01
    148e:	84 2f       	mov	r24, r20
    1490:	69 2f       	mov	r22, r25
    1492:	40 e0       	ldi	r20, 0x00	; 0
    1494:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    1498:	8a 83       	std	Y+2, r24	; 0x02
								   	   	   	   	   	     Copy_pAstrSwitches[Local_u8Iterator].SW_u8PinID,
														 DIO_u8INPUT);
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pAstrSwitches[Local_u8Iterator].SW_u8PortID,
    149a:	89 81       	ldd	r24, Y+1	; 0x01
    149c:	28 2f       	mov	r18, r24
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	c9 01       	movw	r24, r18
    14a2:	88 0f       	add	r24, r24
    14a4:	99 1f       	adc	r25, r25
    14a6:	28 0f       	add	r18, r24
    14a8:	39 1f       	adc	r19, r25
    14aa:	8b 81       	ldd	r24, Y+3	; 0x03
    14ac:	9c 81       	ldd	r25, Y+4	; 0x04
    14ae:	fc 01       	movw	r30, r24
    14b0:	e2 0f       	add	r30, r18
    14b2:	f3 1f       	adc	r31, r19
    14b4:	50 81       	ld	r21, Z
    14b6:	89 81       	ldd	r24, Y+1	; 0x01
    14b8:	28 2f       	mov	r18, r24
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	c9 01       	movw	r24, r18
    14be:	88 0f       	add	r24, r24
    14c0:	99 1f       	adc	r25, r25
    14c2:	28 0f       	add	r18, r24
    14c4:	39 1f       	adc	r19, r25
    14c6:	8b 81       	ldd	r24, Y+3	; 0x03
    14c8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ca:	fc 01       	movw	r30, r24
    14cc:	e2 0f       	add	r30, r18
    14ce:	f3 1f       	adc	r31, r19
    14d0:	41 81       	ldd	r20, Z+1	; 0x01
    14d2:	89 81       	ldd	r24, Y+1	; 0x01
    14d4:	28 2f       	mov	r18, r24
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	c9 01       	movw	r24, r18
    14da:	88 0f       	add	r24, r24
    14dc:	99 1f       	adc	r25, r25
    14de:	28 0f       	add	r18, r24
    14e0:	39 1f       	adc	r19, r25
    14e2:	8b 81       	ldd	r24, Y+3	; 0x03
    14e4:	9c 81       	ldd	r25, Y+4	; 0x04
    14e6:	fc 01       	movw	r30, r24
    14e8:	e2 0f       	add	r30, r18
    14ea:	f3 1f       	adc	r31, r19
    14ec:	92 81       	ldd	r25, Z+2	; 0x02
    14ee:	85 2f       	mov	r24, r21
    14f0:	64 2f       	mov	r22, r20
    14f2:	49 2f       	mov	r20, r25
    14f4:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    14f8:	8a 83       	std	Y+2, r24	; 0x02

	if(Copy_pAstrSwitches != NULL)
	{
		u8 Local_u8Iterator = 0;

		for(Local_u8Iterator = 0; Local_u8Iterator < SW_NUM; Local_u8Iterator++)
    14fa:	89 81       	ldd	r24, Y+1	; 0x01
    14fc:	8f 5f       	subi	r24, 0xFF	; 255
    14fe:	89 83       	std	Y+1, r24	; 0x01
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	83 30       	cpi	r24, 0x03	; 3
    1504:	08 f4       	brcc	.+2      	; 0x1508 <Switch_enuInit+0xd4>
    1506:	a7 cf       	rjmp	.-178    	; 0x1456 <Switch_enuInit+0x22>
    1508:	02 c0       	rjmp	.+4      	; 0x150e <Switch_enuInit+0xda>
		}

	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    150a:	82 e0       	ldi	r24, 0x02	; 2
    150c:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enuErrorState;
    150e:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1510:	0f 90       	pop	r0
    1512:	0f 90       	pop	r0
    1514:	0f 90       	pop	r0
    1516:	0f 90       	pop	r0
    1518:	cf 91       	pop	r28
    151a:	df 91       	pop	r29
    151c:	08 95       	ret

0000151e <Switch_enuGetState>:

ES_t Switch_enuGetState(SW_t * Copy_pstrSwitches, u8 * Copy_pu8SwState)
{
    151e:	df 93       	push	r29
    1520:	cf 93       	push	r28
    1522:	00 d0       	rcall	.+0      	; 0x1524 <Switch_enuGetState+0x6>
    1524:	00 d0       	rcall	.+0      	; 0x1526 <Switch_enuGetState+0x8>
    1526:	0f 92       	push	r0
    1528:	cd b7       	in	r28, 0x3d	; 61
    152a:	de b7       	in	r29, 0x3e	; 62
    152c:	9b 83       	std	Y+3, r25	; 0x03
    152e:	8a 83       	std	Y+2, r24	; 0x02
    1530:	7d 83       	std	Y+5, r23	; 0x05
    1532:	6c 83       	std	Y+4, r22	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    1534:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_pstrSwitches != NULL && Copy_pu8SwState != NULL)
    1536:	8a 81       	ldd	r24, Y+2	; 0x02
    1538:	9b 81       	ldd	r25, Y+3	; 0x03
    153a:	00 97       	sbiw	r24, 0x00	; 0
    153c:	91 f0       	breq	.+36     	; 0x1562 <Switch_enuGetState+0x44>
    153e:	8c 81       	ldd	r24, Y+4	; 0x04
    1540:	9d 81       	ldd	r25, Y+5	; 0x05
    1542:	00 97       	sbiw	r24, 0x00	; 0
    1544:	71 f0       	breq	.+28     	; 0x1562 <Switch_enuGetState+0x44>
	{
		Local_enuErrorState = DIO_enuGetPinValue(Copy_pstrSwitches->SW_u8PortID,
    1546:	ea 81       	ldd	r30, Y+2	; 0x02
    1548:	fb 81       	ldd	r31, Y+3	; 0x03
    154a:	80 81       	ld	r24, Z
    154c:	ea 81       	ldd	r30, Y+2	; 0x02
    154e:	fb 81       	ldd	r31, Y+3	; 0x03
    1550:	91 81       	ldd	r25, Z+1	; 0x01
    1552:	2c 81       	ldd	r18, Y+4	; 0x04
    1554:	3d 81       	ldd	r19, Y+5	; 0x05
    1556:	69 2f       	mov	r22, r25
    1558:	a9 01       	movw	r20, r18
    155a:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <DIO_enuGetPinValue>
    155e:	89 83       	std	Y+1, r24	; 0x01
    1560:	02 c0       	rjmp	.+4      	; 0x1566 <Switch_enuGetState+0x48>
												 Copy_pstrSwitches->SW_u8PinID,
												 Copy_pu8SwState);
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    1562:	82 e0       	ldi	r24, 0x02	; 2
    1564:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    1566:	89 81       	ldd	r24, Y+1	; 0x01
}
    1568:	0f 90       	pop	r0
    156a:	0f 90       	pop	r0
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	cf 91       	pop	r28
    1574:	df 91       	pop	r29
    1576:	08 95       	ret

00001578 <SSDLT_enuInit>:
extern SEG_t SSD_AstrSegConfig[SEG_NUM];



ES_t SSDLT_enuInit(SEG_t * Copy_pstrSegConfig)
{
    1578:	df 93       	push	r29
    157a:	cf 93       	push	r28
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	2a 97       	sbiw	r28, 0x0a	; 10
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	99 87       	std	Y+9, r25	; 0x09
    158e:	88 87       	std	Y+8, r24	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    1590:	1f 82       	std	Y+7, r1	; 0x07

	u8 Local_u8Iterator = 0;
    1592:	1e 82       	std	Y+6, r1	; 0x06
	u8 Local_u8LastBit  = 0;
    1594:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check  = 0;
    1596:	19 82       	std	Y+1, r1	; 0x01
    1598:	1a 82       	std	Y+2, r1	; 0x02
    159a:	1b 82       	std	Y+3, r1	; 0x03
    159c:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_pstrSegConfig != NULL)
    159e:	88 85       	ldd	r24, Y+8	; 0x08
    15a0:	99 85       	ldd	r25, Y+9	; 0x09
    15a2:	00 97       	sbiw	r24, 0x00	; 0
    15a4:	09 f4       	brne	.+2      	; 0x15a8 <SSDLT_enuInit+0x30>
    15a6:	35 c3       	rjmp	.+1642   	; 0x1c12 <SSDLT_enuInit+0x69a>
	{
		for(Local_u8Iterator = 0; Local_u8Iterator < SEG_NUM; Local_u8Iterator++)
    15a8:	1e 82       	std	Y+6, r1	; 0x06
    15aa:	2e c3       	rjmp	.+1628   	; 0x1c08 <SSDLT_enuInit+0x690>
		{
			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8APort,
    15ac:	8e 81       	ldd	r24, Y+6	; 0x06
    15ae:	48 2f       	mov	r20, r24
    15b0:	50 e0       	ldi	r21, 0x00	; 0
    15b2:	ca 01       	movw	r24, r20
    15b4:	88 0f       	add	r24, r24
    15b6:	99 1f       	adc	r25, r25
    15b8:	9c 01       	movw	r18, r24
    15ba:	22 0f       	add	r18, r18
    15bc:	33 1f       	adc	r19, r19
    15be:	22 0f       	add	r18, r18
    15c0:	33 1f       	adc	r19, r19
    15c2:	22 0f       	add	r18, r18
    15c4:	33 1f       	adc	r19, r19
    15c6:	82 0f       	add	r24, r18
    15c8:	93 1f       	adc	r25, r19
    15ca:	9c 01       	movw	r18, r24
    15cc:	24 0f       	add	r18, r20
    15ce:	35 1f       	adc	r19, r21
    15d0:	88 85       	ldd	r24, Y+8	; 0x08
    15d2:	99 85       	ldd	r25, Y+9	; 0x09
    15d4:	fc 01       	movw	r30, r24
    15d6:	e2 0f       	add	r30, r18
    15d8:	f3 1f       	adc	r31, r19
    15da:	60 81       	ld	r22, Z
    15dc:	8e 81       	ldd	r24, Y+6	; 0x06
    15de:	48 2f       	mov	r20, r24
    15e0:	50 e0       	ldi	r21, 0x00	; 0
    15e2:	ca 01       	movw	r24, r20
    15e4:	88 0f       	add	r24, r24
    15e6:	99 1f       	adc	r25, r25
    15e8:	9c 01       	movw	r18, r24
    15ea:	22 0f       	add	r18, r18
    15ec:	33 1f       	adc	r19, r19
    15ee:	22 0f       	add	r18, r18
    15f0:	33 1f       	adc	r19, r19
    15f2:	22 0f       	add	r18, r18
    15f4:	33 1f       	adc	r19, r19
    15f6:	82 0f       	add	r24, r18
    15f8:	93 1f       	adc	r25, r19
    15fa:	9c 01       	movw	r18, r24
    15fc:	24 0f       	add	r18, r20
    15fe:	35 1f       	adc	r19, r21
    1600:	88 85       	ldd	r24, Y+8	; 0x08
    1602:	99 85       	ldd	r25, Y+9	; 0x09
    1604:	fc 01       	movw	r30, r24
    1606:	e2 0f       	add	r30, r18
    1608:	f3 1f       	adc	r31, r19
    160a:	91 81       	ldd	r25, Z+1	; 0x01
    160c:	86 2f       	mov	r24, r22
    160e:	69 2f       	mov	r22, r25
    1610:	41 e0       	ldi	r20, 0x01	; 1
    1612:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    1616:	28 2f       	mov	r18, r24
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	40 e0       	ldi	r20, 0x00	; 0
    161c:	50 e0       	ldi	r21, 0x00	; 0
    161e:	89 81       	ldd	r24, Y+1	; 0x01
    1620:	9a 81       	ldd	r25, Y+2	; 0x02
    1622:	ab 81       	ldd	r26, Y+3	; 0x03
    1624:	bc 81       	ldd	r27, Y+4	; 0x04
    1626:	82 2b       	or	r24, r18
    1628:	93 2b       	or	r25, r19
    162a:	a4 2b       	or	r26, r20
    162c:	b5 2b       	or	r27, r21
    162e:	89 83       	std	Y+1, r24	; 0x01
    1630:	9a 83       	std	Y+2, r25	; 0x02
    1632:	ab 83       	std	Y+3, r26	; 0x03
    1634:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8APin, DIO_u8OUTPUT) << 0);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8BPort,
    1636:	8e 81       	ldd	r24, Y+6	; 0x06
    1638:	48 2f       	mov	r20, r24
    163a:	50 e0       	ldi	r21, 0x00	; 0
    163c:	ca 01       	movw	r24, r20
    163e:	88 0f       	add	r24, r24
    1640:	99 1f       	adc	r25, r25
    1642:	9c 01       	movw	r18, r24
    1644:	22 0f       	add	r18, r18
    1646:	33 1f       	adc	r19, r19
    1648:	22 0f       	add	r18, r18
    164a:	33 1f       	adc	r19, r19
    164c:	22 0f       	add	r18, r18
    164e:	33 1f       	adc	r19, r19
    1650:	82 0f       	add	r24, r18
    1652:	93 1f       	adc	r25, r19
    1654:	9c 01       	movw	r18, r24
    1656:	24 0f       	add	r18, r20
    1658:	35 1f       	adc	r19, r21
    165a:	88 85       	ldd	r24, Y+8	; 0x08
    165c:	99 85       	ldd	r25, Y+9	; 0x09
    165e:	fc 01       	movw	r30, r24
    1660:	e2 0f       	add	r30, r18
    1662:	f3 1f       	adc	r31, r19
    1664:	62 81       	ldd	r22, Z+2	; 0x02
    1666:	8e 81       	ldd	r24, Y+6	; 0x06
    1668:	48 2f       	mov	r20, r24
    166a:	50 e0       	ldi	r21, 0x00	; 0
    166c:	ca 01       	movw	r24, r20
    166e:	88 0f       	add	r24, r24
    1670:	99 1f       	adc	r25, r25
    1672:	9c 01       	movw	r18, r24
    1674:	22 0f       	add	r18, r18
    1676:	33 1f       	adc	r19, r19
    1678:	22 0f       	add	r18, r18
    167a:	33 1f       	adc	r19, r19
    167c:	22 0f       	add	r18, r18
    167e:	33 1f       	adc	r19, r19
    1680:	82 0f       	add	r24, r18
    1682:	93 1f       	adc	r25, r19
    1684:	9c 01       	movw	r18, r24
    1686:	24 0f       	add	r18, r20
    1688:	35 1f       	adc	r19, r21
    168a:	88 85       	ldd	r24, Y+8	; 0x08
    168c:	99 85       	ldd	r25, Y+9	; 0x09
    168e:	fc 01       	movw	r30, r24
    1690:	e2 0f       	add	r30, r18
    1692:	f3 1f       	adc	r31, r19
    1694:	93 81       	ldd	r25, Z+3	; 0x03
    1696:	86 2f       	mov	r24, r22
    1698:	69 2f       	mov	r22, r25
    169a:	41 e0       	ldi	r20, 0x01	; 1
    169c:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    16a0:	88 2f       	mov	r24, r24
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	88 0f       	add	r24, r24
    16a6:	99 1f       	adc	r25, r25
    16a8:	88 0f       	add	r24, r24
    16aa:	99 1f       	adc	r25, r25
    16ac:	88 0f       	add	r24, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	9c 01       	movw	r18, r24
    16b2:	44 27       	eor	r20, r20
    16b4:	37 fd       	sbrc	r19, 7
    16b6:	40 95       	com	r20
    16b8:	54 2f       	mov	r21, r20
    16ba:	89 81       	ldd	r24, Y+1	; 0x01
    16bc:	9a 81       	ldd	r25, Y+2	; 0x02
    16be:	ab 81       	ldd	r26, Y+3	; 0x03
    16c0:	bc 81       	ldd	r27, Y+4	; 0x04
    16c2:	82 2b       	or	r24, r18
    16c4:	93 2b       	or	r25, r19
    16c6:	a4 2b       	or	r26, r20
    16c8:	b5 2b       	or	r27, r21
    16ca:	89 83       	std	Y+1, r24	; 0x01
    16cc:	9a 83       	std	Y+2, r25	; 0x02
    16ce:	ab 83       	std	Y+3, r26	; 0x03
    16d0:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8BPin, DIO_u8OUTPUT) << 3);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CPort,
    16d2:	8e 81       	ldd	r24, Y+6	; 0x06
    16d4:	48 2f       	mov	r20, r24
    16d6:	50 e0       	ldi	r21, 0x00	; 0
    16d8:	ca 01       	movw	r24, r20
    16da:	88 0f       	add	r24, r24
    16dc:	99 1f       	adc	r25, r25
    16de:	9c 01       	movw	r18, r24
    16e0:	22 0f       	add	r18, r18
    16e2:	33 1f       	adc	r19, r19
    16e4:	22 0f       	add	r18, r18
    16e6:	33 1f       	adc	r19, r19
    16e8:	22 0f       	add	r18, r18
    16ea:	33 1f       	adc	r19, r19
    16ec:	82 0f       	add	r24, r18
    16ee:	93 1f       	adc	r25, r19
    16f0:	9c 01       	movw	r18, r24
    16f2:	24 0f       	add	r18, r20
    16f4:	35 1f       	adc	r19, r21
    16f6:	88 85       	ldd	r24, Y+8	; 0x08
    16f8:	99 85       	ldd	r25, Y+9	; 0x09
    16fa:	fc 01       	movw	r30, r24
    16fc:	e2 0f       	add	r30, r18
    16fe:	f3 1f       	adc	r31, r19
    1700:	64 81       	ldd	r22, Z+4	; 0x04
    1702:	8e 81       	ldd	r24, Y+6	; 0x06
    1704:	48 2f       	mov	r20, r24
    1706:	50 e0       	ldi	r21, 0x00	; 0
    1708:	ca 01       	movw	r24, r20
    170a:	88 0f       	add	r24, r24
    170c:	99 1f       	adc	r25, r25
    170e:	9c 01       	movw	r18, r24
    1710:	22 0f       	add	r18, r18
    1712:	33 1f       	adc	r19, r19
    1714:	22 0f       	add	r18, r18
    1716:	33 1f       	adc	r19, r19
    1718:	22 0f       	add	r18, r18
    171a:	33 1f       	adc	r19, r19
    171c:	82 0f       	add	r24, r18
    171e:	93 1f       	adc	r25, r19
    1720:	9c 01       	movw	r18, r24
    1722:	24 0f       	add	r18, r20
    1724:	35 1f       	adc	r19, r21
    1726:	88 85       	ldd	r24, Y+8	; 0x08
    1728:	99 85       	ldd	r25, Y+9	; 0x09
    172a:	fc 01       	movw	r30, r24
    172c:	e2 0f       	add	r30, r18
    172e:	f3 1f       	adc	r31, r19
    1730:	95 81       	ldd	r25, Z+5	; 0x05
    1732:	86 2f       	mov	r24, r22
    1734:	69 2f       	mov	r22, r25
    1736:	41 e0       	ldi	r20, 0x01	; 1
    1738:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    173c:	88 2f       	mov	r24, r24
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	00 24       	eor	r0, r0
    1742:	96 95       	lsr	r25
    1744:	87 95       	ror	r24
    1746:	07 94       	ror	r0
    1748:	96 95       	lsr	r25
    174a:	87 95       	ror	r24
    174c:	07 94       	ror	r0
    174e:	98 2f       	mov	r25, r24
    1750:	80 2d       	mov	r24, r0
    1752:	9c 01       	movw	r18, r24
    1754:	44 27       	eor	r20, r20
    1756:	37 fd       	sbrc	r19, 7
    1758:	40 95       	com	r20
    175a:	54 2f       	mov	r21, r20
    175c:	89 81       	ldd	r24, Y+1	; 0x01
    175e:	9a 81       	ldd	r25, Y+2	; 0x02
    1760:	ab 81       	ldd	r26, Y+3	; 0x03
    1762:	bc 81       	ldd	r27, Y+4	; 0x04
    1764:	82 2b       	or	r24, r18
    1766:	93 2b       	or	r25, r19
    1768:	a4 2b       	or	r26, r20
    176a:	b5 2b       	or	r27, r21
    176c:	89 83       	std	Y+1, r24	; 0x01
    176e:	9a 83       	std	Y+2, r25	; 0x02
    1770:	ab 83       	std	Y+3, r26	; 0x03
    1772:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CPin, DIO_u8OUTPUT) << 6);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DPort,
    1774:	8e 81       	ldd	r24, Y+6	; 0x06
    1776:	48 2f       	mov	r20, r24
    1778:	50 e0       	ldi	r21, 0x00	; 0
    177a:	ca 01       	movw	r24, r20
    177c:	88 0f       	add	r24, r24
    177e:	99 1f       	adc	r25, r25
    1780:	9c 01       	movw	r18, r24
    1782:	22 0f       	add	r18, r18
    1784:	33 1f       	adc	r19, r19
    1786:	22 0f       	add	r18, r18
    1788:	33 1f       	adc	r19, r19
    178a:	22 0f       	add	r18, r18
    178c:	33 1f       	adc	r19, r19
    178e:	82 0f       	add	r24, r18
    1790:	93 1f       	adc	r25, r19
    1792:	9c 01       	movw	r18, r24
    1794:	24 0f       	add	r18, r20
    1796:	35 1f       	adc	r19, r21
    1798:	88 85       	ldd	r24, Y+8	; 0x08
    179a:	99 85       	ldd	r25, Y+9	; 0x09
    179c:	fc 01       	movw	r30, r24
    179e:	e2 0f       	add	r30, r18
    17a0:	f3 1f       	adc	r31, r19
    17a2:	66 81       	ldd	r22, Z+6	; 0x06
    17a4:	8e 81       	ldd	r24, Y+6	; 0x06
    17a6:	48 2f       	mov	r20, r24
    17a8:	50 e0       	ldi	r21, 0x00	; 0
    17aa:	ca 01       	movw	r24, r20
    17ac:	88 0f       	add	r24, r24
    17ae:	99 1f       	adc	r25, r25
    17b0:	9c 01       	movw	r18, r24
    17b2:	22 0f       	add	r18, r18
    17b4:	33 1f       	adc	r19, r19
    17b6:	22 0f       	add	r18, r18
    17b8:	33 1f       	adc	r19, r19
    17ba:	22 0f       	add	r18, r18
    17bc:	33 1f       	adc	r19, r19
    17be:	82 0f       	add	r24, r18
    17c0:	93 1f       	adc	r25, r19
    17c2:	9c 01       	movw	r18, r24
    17c4:	24 0f       	add	r18, r20
    17c6:	35 1f       	adc	r19, r21
    17c8:	88 85       	ldd	r24, Y+8	; 0x08
    17ca:	99 85       	ldd	r25, Y+9	; 0x09
    17cc:	fc 01       	movw	r30, r24
    17ce:	e2 0f       	add	r30, r18
    17d0:	f3 1f       	adc	r31, r19
    17d2:	97 81       	ldd	r25, Z+7	; 0x07
    17d4:	86 2f       	mov	r24, r22
    17d6:	69 2f       	mov	r22, r25
    17d8:	41 e0       	ldi	r20, 0x01	; 1
    17da:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    17de:	88 2f       	mov	r24, r24
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	98 2f       	mov	r25, r24
    17e4:	88 27       	eor	r24, r24
    17e6:	99 0f       	add	r25, r25
    17e8:	9c 01       	movw	r18, r24
    17ea:	44 27       	eor	r20, r20
    17ec:	37 fd       	sbrc	r19, 7
    17ee:	40 95       	com	r20
    17f0:	54 2f       	mov	r21, r20
    17f2:	89 81       	ldd	r24, Y+1	; 0x01
    17f4:	9a 81       	ldd	r25, Y+2	; 0x02
    17f6:	ab 81       	ldd	r26, Y+3	; 0x03
    17f8:	bc 81       	ldd	r27, Y+4	; 0x04
    17fa:	82 2b       	or	r24, r18
    17fc:	93 2b       	or	r25, r19
    17fe:	a4 2b       	or	r26, r20
    1800:	b5 2b       	or	r27, r21
    1802:	89 83       	std	Y+1, r24	; 0x01
    1804:	9a 83       	std	Y+2, r25	; 0x02
    1806:	ab 83       	std	Y+3, r26	; 0x03
    1808:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DPin, DIO_u8OUTPUT) << 9);

			Local_u32Check |= (DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8EPort,
    180a:	8e 81       	ldd	r24, Y+6	; 0x06
    180c:	48 2f       	mov	r20, r24
    180e:	50 e0       	ldi	r21, 0x00	; 0
    1810:	ca 01       	movw	r24, r20
    1812:	88 0f       	add	r24, r24
    1814:	99 1f       	adc	r25, r25
    1816:	9c 01       	movw	r18, r24
    1818:	22 0f       	add	r18, r18
    181a:	33 1f       	adc	r19, r19
    181c:	22 0f       	add	r18, r18
    181e:	33 1f       	adc	r19, r19
    1820:	22 0f       	add	r18, r18
    1822:	33 1f       	adc	r19, r19
    1824:	82 0f       	add	r24, r18
    1826:	93 1f       	adc	r25, r19
    1828:	9c 01       	movw	r18, r24
    182a:	24 0f       	add	r18, r20
    182c:	35 1f       	adc	r19, r21
    182e:	88 85       	ldd	r24, Y+8	; 0x08
    1830:	99 85       	ldd	r25, Y+9	; 0x09
    1832:	fc 01       	movw	r30, r24
    1834:	e2 0f       	add	r30, r18
    1836:	f3 1f       	adc	r31, r19
    1838:	60 85       	ldd	r22, Z+8	; 0x08
    183a:	8e 81       	ldd	r24, Y+6	; 0x06
    183c:	48 2f       	mov	r20, r24
    183e:	50 e0       	ldi	r21, 0x00	; 0
    1840:	ca 01       	movw	r24, r20
    1842:	88 0f       	add	r24, r24
    1844:	99 1f       	adc	r25, r25
    1846:	9c 01       	movw	r18, r24
    1848:	22 0f       	add	r18, r18
    184a:	33 1f       	adc	r19, r19
    184c:	22 0f       	add	r18, r18
    184e:	33 1f       	adc	r19, r19
    1850:	22 0f       	add	r18, r18
    1852:	33 1f       	adc	r19, r19
    1854:	82 0f       	add	r24, r18
    1856:	93 1f       	adc	r25, r19
    1858:	9c 01       	movw	r18, r24
    185a:	24 0f       	add	r18, r20
    185c:	35 1f       	adc	r19, r21
    185e:	88 85       	ldd	r24, Y+8	; 0x08
    1860:	99 85       	ldd	r25, Y+9	; 0x09
    1862:	fc 01       	movw	r30, r24
    1864:	e2 0f       	add	r30, r18
    1866:	f3 1f       	adc	r31, r19
    1868:	91 85       	ldd	r25, Z+9	; 0x09
    186a:	86 2f       	mov	r24, r22
    186c:	69 2f       	mov	r22, r25
    186e:	41 e0       	ldi	r20, 0x01	; 1
    1870:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    1874:	88 2f       	mov	r24, r24
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	98 2f       	mov	r25, r24
    187a:	88 27       	eor	r24, r24
    187c:	92 95       	swap	r25
    187e:	90 7f       	andi	r25, 0xF0	; 240
    1880:	9c 01       	movw	r18, r24
    1882:	44 27       	eor	r20, r20
    1884:	37 fd       	sbrc	r19, 7
    1886:	40 95       	com	r20
    1888:	54 2f       	mov	r21, r20
    188a:	89 81       	ldd	r24, Y+1	; 0x01
    188c:	9a 81       	ldd	r25, Y+2	; 0x02
    188e:	ab 81       	ldd	r26, Y+3	; 0x03
    1890:	bc 81       	ldd	r27, Y+4	; 0x04
    1892:	82 2b       	or	r24, r18
    1894:	93 2b       	or	r25, r19
    1896:	a4 2b       	or	r26, r20
    1898:	b5 2b       	or	r27, r21
    189a:	89 83       	std	Y+1, r24	; 0x01
    189c:	9a 83       	std	Y+2, r25	; 0x02
    189e:	ab 83       	std	Y+3, r26	; 0x03
    18a0:	bc 83       	std	Y+4, r27	; 0x04
													  Copy_pstrSegConfig[Local_u8Iterator].SEG_u8EPin, DIO_u8OUTPUT) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8FPort,
    18a2:	8e 81       	ldd	r24, Y+6	; 0x06
    18a4:	48 2f       	mov	r20, r24
    18a6:	50 e0       	ldi	r21, 0x00	; 0
    18a8:	ca 01       	movw	r24, r20
    18aa:	88 0f       	add	r24, r24
    18ac:	99 1f       	adc	r25, r25
    18ae:	9c 01       	movw	r18, r24
    18b0:	22 0f       	add	r18, r18
    18b2:	33 1f       	adc	r19, r19
    18b4:	22 0f       	add	r18, r18
    18b6:	33 1f       	adc	r19, r19
    18b8:	22 0f       	add	r18, r18
    18ba:	33 1f       	adc	r19, r19
    18bc:	82 0f       	add	r24, r18
    18be:	93 1f       	adc	r25, r19
    18c0:	9c 01       	movw	r18, r24
    18c2:	24 0f       	add	r18, r20
    18c4:	35 1f       	adc	r19, r21
    18c6:	88 85       	ldd	r24, Y+8	; 0x08
    18c8:	99 85       	ldd	r25, Y+9	; 0x09
    18ca:	fc 01       	movw	r30, r24
    18cc:	e2 0f       	add	r30, r18
    18ce:	f3 1f       	adc	r31, r19
    18d0:	62 85       	ldd	r22, Z+10	; 0x0a
    18d2:	8e 81       	ldd	r24, Y+6	; 0x06
    18d4:	48 2f       	mov	r20, r24
    18d6:	50 e0       	ldi	r21, 0x00	; 0
    18d8:	ca 01       	movw	r24, r20
    18da:	88 0f       	add	r24, r24
    18dc:	99 1f       	adc	r25, r25
    18de:	9c 01       	movw	r18, r24
    18e0:	22 0f       	add	r18, r18
    18e2:	33 1f       	adc	r19, r19
    18e4:	22 0f       	add	r18, r18
    18e6:	33 1f       	adc	r19, r19
    18e8:	22 0f       	add	r18, r18
    18ea:	33 1f       	adc	r19, r19
    18ec:	82 0f       	add	r24, r18
    18ee:	93 1f       	adc	r25, r19
    18f0:	9c 01       	movw	r18, r24
    18f2:	24 0f       	add	r18, r20
    18f4:	35 1f       	adc	r19, r21
    18f6:	88 85       	ldd	r24, Y+8	; 0x08
    18f8:	99 85       	ldd	r25, Y+9	; 0x09
    18fa:	fc 01       	movw	r30, r24
    18fc:	e2 0f       	add	r30, r18
    18fe:	f3 1f       	adc	r31, r19
    1900:	93 85       	ldd	r25, Z+11	; 0x0b
    1902:	86 2f       	mov	r24, r22
    1904:	69 2f       	mov	r22, r25
    1906:	41 e0       	ldi	r20, 0x01	; 1
    1908:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    190c:	88 2f       	mov	r24, r24
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	a0 e0       	ldi	r26, 0x00	; 0
    1912:	b0 e0       	ldi	r27, 0x00	; 0
    1914:	9c 01       	movw	r18, r24
    1916:	ad 01       	movw	r20, r26
    1918:	01 2e       	mov	r0, r17
    191a:	1f e0       	ldi	r17, 0x0F	; 15
    191c:	22 0f       	add	r18, r18
    191e:	33 1f       	adc	r19, r19
    1920:	44 1f       	adc	r20, r20
    1922:	55 1f       	adc	r21, r21
    1924:	1a 95       	dec	r17
    1926:	d1 f7       	brne	.-12     	; 0x191c <SSDLT_enuInit+0x3a4>
    1928:	10 2d       	mov	r17, r0
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	9a 81       	ldd	r25, Y+2	; 0x02
    192e:	ab 81       	ldd	r26, Y+3	; 0x03
    1930:	bc 81       	ldd	r27, Y+4	; 0x04
    1932:	82 2b       	or	r24, r18
    1934:	93 2b       	or	r25, r19
    1936:	a4 2b       	or	r26, r20
    1938:	b5 2b       	or	r27, r21
    193a:	89 83       	std	Y+1, r24	; 0x01
    193c:	9a 83       	std	Y+2, r25	; 0x02
    193e:	ab 83       	std	Y+3, r26	; 0x03
    1940:	bc 83       	std	Y+4, r27	; 0x04
													 Copy_pstrSegConfig[Local_u8Iterator].SEG_u8FPin, DIO_u8OUTPUT)) << 15);

			Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8GPort,
    1942:	8e 81       	ldd	r24, Y+6	; 0x06
    1944:	48 2f       	mov	r20, r24
    1946:	50 e0       	ldi	r21, 0x00	; 0
    1948:	ca 01       	movw	r24, r20
    194a:	88 0f       	add	r24, r24
    194c:	99 1f       	adc	r25, r25
    194e:	9c 01       	movw	r18, r24
    1950:	22 0f       	add	r18, r18
    1952:	33 1f       	adc	r19, r19
    1954:	22 0f       	add	r18, r18
    1956:	33 1f       	adc	r19, r19
    1958:	22 0f       	add	r18, r18
    195a:	33 1f       	adc	r19, r19
    195c:	82 0f       	add	r24, r18
    195e:	93 1f       	adc	r25, r19
    1960:	9c 01       	movw	r18, r24
    1962:	24 0f       	add	r18, r20
    1964:	35 1f       	adc	r19, r21
    1966:	88 85       	ldd	r24, Y+8	; 0x08
    1968:	99 85       	ldd	r25, Y+9	; 0x09
    196a:	fc 01       	movw	r30, r24
    196c:	e2 0f       	add	r30, r18
    196e:	f3 1f       	adc	r31, r19
    1970:	64 85       	ldd	r22, Z+12	; 0x0c
    1972:	8e 81       	ldd	r24, Y+6	; 0x06
    1974:	48 2f       	mov	r20, r24
    1976:	50 e0       	ldi	r21, 0x00	; 0
    1978:	ca 01       	movw	r24, r20
    197a:	88 0f       	add	r24, r24
    197c:	99 1f       	adc	r25, r25
    197e:	9c 01       	movw	r18, r24
    1980:	22 0f       	add	r18, r18
    1982:	33 1f       	adc	r19, r19
    1984:	22 0f       	add	r18, r18
    1986:	33 1f       	adc	r19, r19
    1988:	22 0f       	add	r18, r18
    198a:	33 1f       	adc	r19, r19
    198c:	82 0f       	add	r24, r18
    198e:	93 1f       	adc	r25, r19
    1990:	9c 01       	movw	r18, r24
    1992:	24 0f       	add	r18, r20
    1994:	35 1f       	adc	r19, r21
    1996:	88 85       	ldd	r24, Y+8	; 0x08
    1998:	99 85       	ldd	r25, Y+9	; 0x09
    199a:	fc 01       	movw	r30, r24
    199c:	e2 0f       	add	r30, r18
    199e:	f3 1f       	adc	r31, r19
    19a0:	95 85       	ldd	r25, Z+13	; 0x0d
    19a2:	86 2f       	mov	r24, r22
    19a4:	69 2f       	mov	r22, r25
    19a6:	41 e0       	ldi	r20, 0x01	; 1
    19a8:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    19ac:	88 2f       	mov	r24, r24
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	a0 e0       	ldi	r26, 0x00	; 0
    19b2:	b0 e0       	ldi	r27, 0x00	; 0
    19b4:	9c 01       	movw	r18, r24
    19b6:	ad 01       	movw	r20, r26
    19b8:	01 2e       	mov	r0, r17
    19ba:	12 e1       	ldi	r17, 0x12	; 18
    19bc:	22 0f       	add	r18, r18
    19be:	33 1f       	adc	r19, r19
    19c0:	44 1f       	adc	r20, r20
    19c2:	55 1f       	adc	r21, r21
    19c4:	1a 95       	dec	r17
    19c6:	d1 f7       	brne	.-12     	; 0x19bc <SSDLT_enuInit+0x444>
    19c8:	10 2d       	mov	r17, r0
    19ca:	89 81       	ldd	r24, Y+1	; 0x01
    19cc:	9a 81       	ldd	r25, Y+2	; 0x02
    19ce:	ab 81       	ldd	r26, Y+3	; 0x03
    19d0:	bc 81       	ldd	r27, Y+4	; 0x04
    19d2:	82 2b       	or	r24, r18
    19d4:	93 2b       	or	r25, r19
    19d6:	a4 2b       	or	r26, r20
    19d8:	b5 2b       	or	r27, r21
    19da:	89 83       	std	Y+1, r24	; 0x01
    19dc:	9a 83       	std	Y+2, r25	; 0x02
    19de:	ab 83       	std	Y+3, r26	; 0x03
    19e0:	bc 83       	std	Y+4, r27	; 0x04
													 Copy_pstrSegConfig[Local_u8Iterator].SEG_u8GPin, DIO_u8OUTPUT)) << 18);
			Local_u8LastBit = 21;
    19e2:	85 e1       	ldi	r24, 0x15	; 21
    19e4:	8d 83       	std	Y+5, r24	; 0x05

			if(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Port != NOT_CONNECTED ||
    19e6:	8e 81       	ldd	r24, Y+6	; 0x06
    19e8:	48 2f       	mov	r20, r24
    19ea:	50 e0       	ldi	r21, 0x00	; 0
    19ec:	ca 01       	movw	r24, r20
    19ee:	88 0f       	add	r24, r24
    19f0:	99 1f       	adc	r25, r25
    19f2:	9c 01       	movw	r18, r24
    19f4:	22 0f       	add	r18, r18
    19f6:	33 1f       	adc	r19, r19
    19f8:	22 0f       	add	r18, r18
    19fa:	33 1f       	adc	r19, r19
    19fc:	22 0f       	add	r18, r18
    19fe:	33 1f       	adc	r19, r19
    1a00:	82 0f       	add	r24, r18
    1a02:	93 1f       	adc	r25, r19
    1a04:	9c 01       	movw	r18, r24
    1a06:	24 0f       	add	r18, r20
    1a08:	35 1f       	adc	r19, r21
    1a0a:	88 85       	ldd	r24, Y+8	; 0x08
    1a0c:	99 85       	ldd	r25, Y+9	; 0x09
    1a0e:	fc 01       	movw	r30, r24
    1a10:	e2 0f       	add	r30, r18
    1a12:	f3 1f       	adc	r31, r19
    1a14:	86 85       	ldd	r24, Z+14	; 0x0e
    1a16:	82 30       	cpi	r24, 0x02	; 2
    1a18:	d9 f4       	brne	.+54     	; 0x1a50 <SSDLT_enuInit+0x4d8>
    1a1a:	8e 81       	ldd	r24, Y+6	; 0x06
    1a1c:	48 2f       	mov	r20, r24
    1a1e:	50 e0       	ldi	r21, 0x00	; 0
    1a20:	ca 01       	movw	r24, r20
    1a22:	88 0f       	add	r24, r24
    1a24:	99 1f       	adc	r25, r25
    1a26:	9c 01       	movw	r18, r24
    1a28:	22 0f       	add	r18, r18
    1a2a:	33 1f       	adc	r19, r19
    1a2c:	22 0f       	add	r18, r18
    1a2e:	33 1f       	adc	r19, r19
    1a30:	22 0f       	add	r18, r18
    1a32:	33 1f       	adc	r19, r19
    1a34:	82 0f       	add	r24, r18
    1a36:	93 1f       	adc	r25, r19
    1a38:	9c 01       	movw	r18, r24
    1a3a:	24 0f       	add	r18, r20
    1a3c:	35 1f       	adc	r19, r21
    1a3e:	88 85       	ldd	r24, Y+8	; 0x08
    1a40:	99 85       	ldd	r25, Y+9	; 0x09
    1a42:	fc 01       	movw	r30, r24
    1a44:	e2 0f       	add	r30, r18
    1a46:	f3 1f       	adc	r31, r19
    1a48:	87 85       	ldd	r24, Z+15	; 0x0f
    1a4a:	82 30       	cpi	r24, 0x02	; 2
    1a4c:	09 f4       	brne	.+2      	; 0x1a50 <SSDLT_enuInit+0x4d8>
    1a4e:	52 c0       	rjmp	.+164    	; 0x1af4 <SSDLT_enuInit+0x57c>
			   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Pin != NOT_CONNECTED)
			{
				Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Port,
    1a50:	8e 81       	ldd	r24, Y+6	; 0x06
    1a52:	48 2f       	mov	r20, r24
    1a54:	50 e0       	ldi	r21, 0x00	; 0
    1a56:	ca 01       	movw	r24, r20
    1a58:	88 0f       	add	r24, r24
    1a5a:	99 1f       	adc	r25, r25
    1a5c:	9c 01       	movw	r18, r24
    1a5e:	22 0f       	add	r18, r18
    1a60:	33 1f       	adc	r19, r19
    1a62:	22 0f       	add	r18, r18
    1a64:	33 1f       	adc	r19, r19
    1a66:	22 0f       	add	r18, r18
    1a68:	33 1f       	adc	r19, r19
    1a6a:	82 0f       	add	r24, r18
    1a6c:	93 1f       	adc	r25, r19
    1a6e:	9c 01       	movw	r18, r24
    1a70:	24 0f       	add	r18, r20
    1a72:	35 1f       	adc	r19, r21
    1a74:	88 85       	ldd	r24, Y+8	; 0x08
    1a76:	99 85       	ldd	r25, Y+9	; 0x09
    1a78:	fc 01       	movw	r30, r24
    1a7a:	e2 0f       	add	r30, r18
    1a7c:	f3 1f       	adc	r31, r19
    1a7e:	66 85       	ldd	r22, Z+14	; 0x0e
    1a80:	8e 81       	ldd	r24, Y+6	; 0x06
    1a82:	48 2f       	mov	r20, r24
    1a84:	50 e0       	ldi	r21, 0x00	; 0
    1a86:	ca 01       	movw	r24, r20
    1a88:	88 0f       	add	r24, r24
    1a8a:	99 1f       	adc	r25, r25
    1a8c:	9c 01       	movw	r18, r24
    1a8e:	22 0f       	add	r18, r18
    1a90:	33 1f       	adc	r19, r19
    1a92:	22 0f       	add	r18, r18
    1a94:	33 1f       	adc	r19, r19
    1a96:	22 0f       	add	r18, r18
    1a98:	33 1f       	adc	r19, r19
    1a9a:	82 0f       	add	r24, r18
    1a9c:	93 1f       	adc	r25, r19
    1a9e:	9c 01       	movw	r18, r24
    1aa0:	24 0f       	add	r18, r20
    1aa2:	35 1f       	adc	r19, r21
    1aa4:	88 85       	ldd	r24, Y+8	; 0x08
    1aa6:	99 85       	ldd	r25, Y+9	; 0x09
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	e2 0f       	add	r30, r18
    1aac:	f3 1f       	adc	r31, r19
    1aae:	97 85       	ldd	r25, Z+15	; 0x0f
    1ab0:	86 2f       	mov	r24, r22
    1ab2:	69 2f       	mov	r22, r25
    1ab4:	41 e0       	ldi	r20, 0x01	; 1
    1ab6:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    1aba:	28 2f       	mov	r18, r24
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	40 e0       	ldi	r20, 0x00	; 0
    1ac0:	50 e0       	ldi	r21, 0x00	; 0
    1ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac4:	88 2f       	mov	r24, r24
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	04 c0       	rjmp	.+8      	; 0x1ad2 <SSDLT_enuInit+0x55a>
    1aca:	22 0f       	add	r18, r18
    1acc:	33 1f       	adc	r19, r19
    1ace:	44 1f       	adc	r20, r20
    1ad0:	55 1f       	adc	r21, r21
    1ad2:	8a 95       	dec	r24
    1ad4:	d2 f7       	brpl	.-12     	; 0x1aca <SSDLT_enuInit+0x552>
    1ad6:	89 81       	ldd	r24, Y+1	; 0x01
    1ad8:	9a 81       	ldd	r25, Y+2	; 0x02
    1ada:	ab 81       	ldd	r26, Y+3	; 0x03
    1adc:	bc 81       	ldd	r27, Y+4	; 0x04
    1ade:	82 2b       	or	r24, r18
    1ae0:	93 2b       	or	r25, r19
    1ae2:	a4 2b       	or	r26, r20
    1ae4:	b5 2b       	or	r27, r21
    1ae6:	89 83       	std	Y+1, r24	; 0x01
    1ae8:	9a 83       	std	Y+2, r25	; 0x02
    1aea:	ab 83       	std	Y+3, r26	; 0x03
    1aec:	bc 83       	std	Y+4, r27	; 0x04
												   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8CMN_Pin, DIO_u8OUTPUT) << Local_u8LastBit));
				Local_u8LastBit += 3;
    1aee:	8d 81       	ldd	r24, Y+5	; 0x05
    1af0:	8d 5f       	subi	r24, 0xFD	; 253
    1af2:	8d 83       	std	Y+5, r24	; 0x05
			}

			if(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Port != NOT_CONNECTED ||
    1af4:	8e 81       	ldd	r24, Y+6	; 0x06
    1af6:	48 2f       	mov	r20, r24
    1af8:	50 e0       	ldi	r21, 0x00	; 0
    1afa:	ca 01       	movw	r24, r20
    1afc:	88 0f       	add	r24, r24
    1afe:	99 1f       	adc	r25, r25
    1b00:	9c 01       	movw	r18, r24
    1b02:	22 0f       	add	r18, r18
    1b04:	33 1f       	adc	r19, r19
    1b06:	22 0f       	add	r18, r18
    1b08:	33 1f       	adc	r19, r19
    1b0a:	22 0f       	add	r18, r18
    1b0c:	33 1f       	adc	r19, r19
    1b0e:	82 0f       	add	r24, r18
    1b10:	93 1f       	adc	r25, r19
    1b12:	9c 01       	movw	r18, r24
    1b14:	24 0f       	add	r18, r20
    1b16:	35 1f       	adc	r19, r21
    1b18:	88 85       	ldd	r24, Y+8	; 0x08
    1b1a:	99 85       	ldd	r25, Y+9	; 0x09
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	e2 0f       	add	r30, r18
    1b20:	f3 1f       	adc	r31, r19
    1b22:	80 89       	ldd	r24, Z+16	; 0x10
    1b24:	82 30       	cpi	r24, 0x02	; 2
    1b26:	d9 f4       	brne	.+54     	; 0x1b5e <SSDLT_enuInit+0x5e6>
    1b28:	8e 81       	ldd	r24, Y+6	; 0x06
    1b2a:	48 2f       	mov	r20, r24
    1b2c:	50 e0       	ldi	r21, 0x00	; 0
    1b2e:	ca 01       	movw	r24, r20
    1b30:	88 0f       	add	r24, r24
    1b32:	99 1f       	adc	r25, r25
    1b34:	9c 01       	movw	r18, r24
    1b36:	22 0f       	add	r18, r18
    1b38:	33 1f       	adc	r19, r19
    1b3a:	22 0f       	add	r18, r18
    1b3c:	33 1f       	adc	r19, r19
    1b3e:	22 0f       	add	r18, r18
    1b40:	33 1f       	adc	r19, r19
    1b42:	82 0f       	add	r24, r18
    1b44:	93 1f       	adc	r25, r19
    1b46:	9c 01       	movw	r18, r24
    1b48:	24 0f       	add	r18, r20
    1b4a:	35 1f       	adc	r19, r21
    1b4c:	88 85       	ldd	r24, Y+8	; 0x08
    1b4e:	99 85       	ldd	r25, Y+9	; 0x09
    1b50:	fc 01       	movw	r30, r24
    1b52:	e2 0f       	add	r30, r18
    1b54:	f3 1f       	adc	r31, r19
    1b56:	81 89       	ldd	r24, Z+17	; 0x11
    1b58:	82 30       	cpi	r24, 0x02	; 2
    1b5a:	09 f4       	brne	.+2      	; 0x1b5e <SSDLT_enuInit+0x5e6>
    1b5c:	52 c0       	rjmp	.+164    	; 0x1c02 <SSDLT_enuInit+0x68a>
			   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Pin != NOT_CONNECTED)
			{
				Local_u32Check |= (((u32)DIO_enuSetPinDirection(Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Port,
    1b5e:	8e 81       	ldd	r24, Y+6	; 0x06
    1b60:	48 2f       	mov	r20, r24
    1b62:	50 e0       	ldi	r21, 0x00	; 0
    1b64:	ca 01       	movw	r24, r20
    1b66:	88 0f       	add	r24, r24
    1b68:	99 1f       	adc	r25, r25
    1b6a:	9c 01       	movw	r18, r24
    1b6c:	22 0f       	add	r18, r18
    1b6e:	33 1f       	adc	r19, r19
    1b70:	22 0f       	add	r18, r18
    1b72:	33 1f       	adc	r19, r19
    1b74:	22 0f       	add	r18, r18
    1b76:	33 1f       	adc	r19, r19
    1b78:	82 0f       	add	r24, r18
    1b7a:	93 1f       	adc	r25, r19
    1b7c:	9c 01       	movw	r18, r24
    1b7e:	24 0f       	add	r18, r20
    1b80:	35 1f       	adc	r19, r21
    1b82:	88 85       	ldd	r24, Y+8	; 0x08
    1b84:	99 85       	ldd	r25, Y+9	; 0x09
    1b86:	fc 01       	movw	r30, r24
    1b88:	e2 0f       	add	r30, r18
    1b8a:	f3 1f       	adc	r31, r19
    1b8c:	60 89       	ldd	r22, Z+16	; 0x10
    1b8e:	8e 81       	ldd	r24, Y+6	; 0x06
    1b90:	48 2f       	mov	r20, r24
    1b92:	50 e0       	ldi	r21, 0x00	; 0
    1b94:	ca 01       	movw	r24, r20
    1b96:	88 0f       	add	r24, r24
    1b98:	99 1f       	adc	r25, r25
    1b9a:	9c 01       	movw	r18, r24
    1b9c:	22 0f       	add	r18, r18
    1b9e:	33 1f       	adc	r19, r19
    1ba0:	22 0f       	add	r18, r18
    1ba2:	33 1f       	adc	r19, r19
    1ba4:	22 0f       	add	r18, r18
    1ba6:	33 1f       	adc	r19, r19
    1ba8:	82 0f       	add	r24, r18
    1baa:	93 1f       	adc	r25, r19
    1bac:	9c 01       	movw	r18, r24
    1bae:	24 0f       	add	r18, r20
    1bb0:	35 1f       	adc	r19, r21
    1bb2:	88 85       	ldd	r24, Y+8	; 0x08
    1bb4:	99 85       	ldd	r25, Y+9	; 0x09
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	e2 0f       	add	r30, r18
    1bba:	f3 1f       	adc	r31, r19
    1bbc:	91 89       	ldd	r25, Z+17	; 0x11
    1bbe:	86 2f       	mov	r24, r22
    1bc0:	69 2f       	mov	r22, r25
    1bc2:	41 e0       	ldi	r20, 0x01	; 1
    1bc4:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    1bc8:	28 2f       	mov	r18, r24
    1bca:	30 e0       	ldi	r19, 0x00	; 0
    1bcc:	40 e0       	ldi	r20, 0x00	; 0
    1bce:	50 e0       	ldi	r21, 0x00	; 0
    1bd0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bd2:	88 2f       	mov	r24, r24
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	04 c0       	rjmp	.+8      	; 0x1be0 <SSDLT_enuInit+0x668>
    1bd8:	22 0f       	add	r18, r18
    1bda:	33 1f       	adc	r19, r19
    1bdc:	44 1f       	adc	r20, r20
    1bde:	55 1f       	adc	r21, r21
    1be0:	8a 95       	dec	r24
    1be2:	d2 f7       	brpl	.-12     	; 0x1bd8 <SSDLT_enuInit+0x660>
    1be4:	89 81       	ldd	r24, Y+1	; 0x01
    1be6:	9a 81       	ldd	r25, Y+2	; 0x02
    1be8:	ab 81       	ldd	r26, Y+3	; 0x03
    1bea:	bc 81       	ldd	r27, Y+4	; 0x04
    1bec:	82 2b       	or	r24, r18
    1bee:	93 2b       	or	r25, r19
    1bf0:	a4 2b       	or	r26, r20
    1bf2:	b5 2b       	or	r27, r21
    1bf4:	89 83       	std	Y+1, r24	; 0x01
    1bf6:	9a 83       	std	Y+2, r25	; 0x02
    1bf8:	ab 83       	std	Y+3, r26	; 0x03
    1bfa:	bc 83       	std	Y+4, r27	; 0x04
												   Copy_pstrSegConfig[Local_u8Iterator].SEG_u8DOT_Pin, DIO_u8OUTPUT) << Local_u8LastBit));
				Local_u8LastBit += 3;
    1bfc:	8d 81       	ldd	r24, Y+5	; 0x05
    1bfe:	8d 5f       	subi	r24, 0xFD	; 253
    1c00:	8d 83       	std	Y+5, r24	; 0x05
	u8 Local_u8LastBit  = 0;
	u32 Local_u32Check  = 0;

	if(Copy_pstrSegConfig != NULL)
	{
		for(Local_u8Iterator = 0; Local_u8Iterator < SEG_NUM; Local_u8Iterator++)
    1c02:	8e 81       	ldd	r24, Y+6	; 0x06
    1c04:	8f 5f       	subi	r24, 0xFF	; 255
    1c06:	8e 83       	std	Y+6, r24	; 0x06
    1c08:	8e 81       	ldd	r24, Y+6	; 0x06
    1c0a:	82 30       	cpi	r24, 0x02	; 2
    1c0c:	08 f4       	brcc	.+2      	; 0x1c10 <SSDLT_enuInit+0x698>
    1c0e:	ce cc       	rjmp	.-1636   	; 0x15ac <SSDLT_enuInit+0x34>
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <SSDLT_enuInit+0x69e>

		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    1c12:	82 e0       	ldi	r24, 0x02	; 2
    1c14:	8f 83       	std	Y+7, r24	; 0x07
	}


	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    1c16:	1e 82       	std	Y+6, r1	; 0x06
    1c18:	1e c0       	rjmp	.+60     	; 0x1c56 <SSDLT_enuInit+0x6de>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    1c1a:	8e 81       	ldd	r24, Y+6	; 0x06
    1c1c:	28 2f       	mov	r18, r24
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	89 81       	ldd	r24, Y+1	; 0x01
    1c22:	9a 81       	ldd	r25, Y+2	; 0x02
    1c24:	ab 81       	ldd	r26, Y+3	; 0x03
    1c26:	bc 81       	ldd	r27, Y+4	; 0x04
    1c28:	02 2e       	mov	r0, r18
    1c2a:	04 c0       	rjmp	.+8      	; 0x1c34 <SSDLT_enuInit+0x6bc>
    1c2c:	b6 95       	lsr	r27
    1c2e:	a7 95       	ror	r26
    1c30:	97 95       	ror	r25
    1c32:	87 95       	ror	r24
    1c34:	0a 94       	dec	r0
    1c36:	d2 f7       	brpl	.-12     	; 0x1c2c <SSDLT_enuInit+0x6b4>
    1c38:	87 70       	andi	r24, 0x07	; 7
    1c3a:	90 70       	andi	r25, 0x00	; 0
    1c3c:	a0 70       	andi	r26, 0x00	; 0
    1c3e:	b0 70       	andi	r27, 0x00	; 0
    1c40:	81 30       	cpi	r24, 0x01	; 1
    1c42:	91 05       	cpc	r25, r1
    1c44:	a1 05       	cpc	r26, r1
    1c46:	b1 05       	cpc	r27, r1
    1c48:	19 f0       	breq	.+6      	; 0x1c50 <SSDLT_enuInit+0x6d8>
		{
			return Local_enuErrorState;
    1c4a:	8f 81       	ldd	r24, Y+7	; 0x07
    1c4c:	8a 87       	std	Y+10, r24	; 0x0a
    1c4e:	0b c0       	rjmp	.+22     	; 0x1c66 <SSDLT_enuInit+0x6ee>
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}


	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    1c50:	8e 81       	ldd	r24, Y+6	; 0x06
    1c52:	8d 5f       	subi	r24, 0xFD	; 253
    1c54:	8e 83       	std	Y+6, r24	; 0x06
    1c56:	9e 81       	ldd	r25, Y+6	; 0x06
    1c58:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5a:	98 17       	cp	r25, r24
    1c5c:	f0 f2       	brcs	.-68     	; 0x1c1a <SSDLT_enuInit+0x6a2>
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
		{
			return Local_enuErrorState;
		}
	}
	Local_enuErrorState = ES_OK;
    1c5e:	81 e0       	ldi	r24, 0x01	; 1
    1c60:	8f 83       	std	Y+7, r24	; 0x07

	return Local_enuErrorState;
    1c62:	8f 81       	ldd	r24, Y+7	; 0x07
    1c64:	8a 87       	std	Y+10, r24	; 0x0a
    1c66:	8a 85       	ldd	r24, Y+10	; 0x0a
}
    1c68:	2a 96       	adiw	r28, 0x0a	; 10
    1c6a:	0f b6       	in	r0, 0x3f	; 63
    1c6c:	f8 94       	cli
    1c6e:	de bf       	out	0x3e, r29	; 62
    1c70:	0f be       	out	0x3f, r0	; 63
    1c72:	cd bf       	out	0x3d, r28	; 61
    1c74:	cf 91       	pop	r28
    1c76:	df 91       	pop	r29
    1c78:	08 95       	ret

00001c7a <SSDLT_enuDisplayNum>:

ES_t SSDLT_enuDisplayNum(u8 Copy_u8SegID, u8 Copy_u8Number)
{
    1c7a:	df 93       	push	r29
    1c7c:	cf 93       	push	r28
    1c7e:	cd b7       	in	r28, 0x3d	; 61
    1c80:	de b7       	in	r29, 0x3e	; 62
    1c82:	6e 97       	sbiw	r28, 0x1e	; 30
    1c84:	0f b6       	in	r0, 0x3f	; 63
    1c86:	f8 94       	cli
    1c88:	de bf       	out	0x3e, r29	; 62
    1c8a:	0f be       	out	0x3f, r0	; 63
    1c8c:	cd bf       	out	0x3d, r28	; 61
    1c8e:	8f 83       	std	Y+7, r24	; 0x07
    1c90:	68 87       	std	Y+8, r22	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    1c92:	1e 82       	std	Y+6, r1	; 0x06

	u8 Local_u8Iterator = 0;
    1c94:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = 0;
    1c96:	19 82       	std	Y+1, r1	; 0x01
    1c98:	1a 82       	std	Y+2, r1	; 0x02
    1c9a:	1b 82       	std	Y+3, r1	; 0x03
    1c9c:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_u8Number < 10 && Copy_u8SegID < SEG_NUM)
    1c9e:	88 85       	ldd	r24, Y+8	; 0x08
    1ca0:	8a 30       	cpi	r24, 0x0A	; 10
    1ca2:	08 f0       	brcs	.+2      	; 0x1ca6 <SSDLT_enuDisplayNum+0x2c>
    1ca4:	f6 c4       	rjmp	.+2540   	; 0x2692 <SSDLT_enuDisplayNum+0xa18>
    1ca6:	8f 81       	ldd	r24, Y+7	; 0x07
    1ca8:	82 30       	cpi	r24, 0x02	; 2
    1caa:	08 f0       	brcs	.+2      	; 0x1cae <SSDLT_enuDisplayNum+0x34>
    1cac:	f2 c4       	rjmp	.+2532   	; 0x2692 <SSDLT_enuDisplayNum+0xa18>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    1cae:	8f 81       	ldd	r24, Y+7	; 0x07
    1cb0:	48 2f       	mov	r20, r24
    1cb2:	50 e0       	ldi	r21, 0x00	; 0
    1cb4:	ca 01       	movw	r24, r20
    1cb6:	88 0f       	add	r24, r24
    1cb8:	99 1f       	adc	r25, r25
    1cba:	9c 01       	movw	r18, r24
    1cbc:	22 0f       	add	r18, r18
    1cbe:	33 1f       	adc	r19, r19
    1cc0:	22 0f       	add	r18, r18
    1cc2:	33 1f       	adc	r19, r19
    1cc4:	22 0f       	add	r18, r18
    1cc6:	33 1f       	adc	r19, r19
    1cc8:	82 0f       	add	r24, r18
    1cca:	93 1f       	adc	r25, r19
    1ccc:	84 0f       	add	r24, r20
    1cce:	95 1f       	adc	r25, r21
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	e3 57       	subi	r30, 0x73	; 115
    1cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd6:	80 81       	ld	r24, Z
    1cd8:	81 30       	cpi	r24, 0x01	; 1
    1cda:	09 f0       	breq	.+2      	; 0x1cde <SSDLT_enuDisplayNum+0x64>
    1cdc:	40 c2       	rjmp	.+1152   	; 0x215e <SSDLT_enuDisplayNum+0x4e4>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    1cde:	8f 81       	ldd	r24, Y+7	; 0x07
    1ce0:	48 2f       	mov	r20, r24
    1ce2:	50 e0       	ldi	r21, 0x00	; 0
    1ce4:	ca 01       	movw	r24, r20
    1ce6:	88 0f       	add	r24, r24
    1ce8:	99 1f       	adc	r25, r25
    1cea:	9c 01       	movw	r18, r24
    1cec:	22 0f       	add	r18, r18
    1cee:	33 1f       	adc	r19, r19
    1cf0:	22 0f       	add	r18, r18
    1cf2:	33 1f       	adc	r19, r19
    1cf4:	22 0f       	add	r18, r18
    1cf6:	33 1f       	adc	r19, r19
    1cf8:	82 0f       	add	r24, r18
    1cfa:	93 1f       	adc	r25, r19
    1cfc:	84 0f       	add	r24, r20
    1cfe:	95 1f       	adc	r25, r21
    1d00:	fc 01       	movw	r30, r24
    1d02:	e5 58       	subi	r30, 0x85	; 133
    1d04:	ff 4f       	sbci	r31, 0xFF	; 255
    1d06:	60 81       	ld	r22, Z
    1d08:	8f 81       	ldd	r24, Y+7	; 0x07
    1d0a:	48 2f       	mov	r20, r24
    1d0c:	50 e0       	ldi	r21, 0x00	; 0
    1d0e:	ca 01       	movw	r24, r20
    1d10:	88 0f       	add	r24, r24
    1d12:	99 1f       	adc	r25, r25
    1d14:	9c 01       	movw	r18, r24
    1d16:	22 0f       	add	r18, r18
    1d18:	33 1f       	adc	r19, r19
    1d1a:	22 0f       	add	r18, r18
    1d1c:	33 1f       	adc	r19, r19
    1d1e:	22 0f       	add	r18, r18
    1d20:	33 1f       	adc	r19, r19
    1d22:	82 0f       	add	r24, r18
    1d24:	93 1f       	adc	r25, r19
    1d26:	84 0f       	add	r24, r20
    1d28:	95 1f       	adc	r25, r21
    1d2a:	fc 01       	movw	r30, r24
    1d2c:	e4 58       	subi	r30, 0x84	; 132
    1d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d30:	20 81       	ld	r18, Z
    1d32:	88 85       	ldd	r24, Y+8	; 0x08
    1d34:	88 2f       	mov	r24, r24
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	fc 01       	movw	r30, r24
    1d3a:	ef 55       	subi	r30, 0x5F	; 95
    1d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3e:	80 81       	ld	r24, Z
    1d40:	98 2f       	mov	r25, r24
    1d42:	91 70       	andi	r25, 0x01	; 1
    1d44:	86 2f       	mov	r24, r22
    1d46:	62 2f       	mov	r22, r18
    1d48:	49 2f       	mov	r20, r25
    1d4a:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    1d4e:	28 2f       	mov	r18, r24
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	40 e0       	ldi	r20, 0x00	; 0
    1d54:	50 e0       	ldi	r21, 0x00	; 0
    1d56:	89 81       	ldd	r24, Y+1	; 0x01
    1d58:	9a 81       	ldd	r25, Y+2	; 0x02
    1d5a:	ab 81       	ldd	r26, Y+3	; 0x03
    1d5c:	bc 81       	ldd	r27, Y+4	; 0x04
    1d5e:	82 2b       	or	r24, r18
    1d60:	93 2b       	or	r25, r19
    1d62:	a4 2b       	or	r26, r20
    1d64:	b5 2b       	or	r27, r21
    1d66:	89 83       	std	Y+1, r24	; 0x01
    1d68:	9a 83       	std	Y+2, r25	; 0x02
    1d6a:	ab 83       	std	Y+3, r26	; 0x03
    1d6c:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>0) & 1)) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    1d6e:	8f 81       	ldd	r24, Y+7	; 0x07
    1d70:	48 2f       	mov	r20, r24
    1d72:	50 e0       	ldi	r21, 0x00	; 0
    1d74:	ca 01       	movw	r24, r20
    1d76:	88 0f       	add	r24, r24
    1d78:	99 1f       	adc	r25, r25
    1d7a:	9c 01       	movw	r18, r24
    1d7c:	22 0f       	add	r18, r18
    1d7e:	33 1f       	adc	r19, r19
    1d80:	22 0f       	add	r18, r18
    1d82:	33 1f       	adc	r19, r19
    1d84:	22 0f       	add	r18, r18
    1d86:	33 1f       	adc	r19, r19
    1d88:	82 0f       	add	r24, r18
    1d8a:	93 1f       	adc	r25, r19
    1d8c:	84 0f       	add	r24, r20
    1d8e:	95 1f       	adc	r25, r21
    1d90:	fc 01       	movw	r30, r24
    1d92:	e3 58       	subi	r30, 0x83	; 131
    1d94:	ff 4f       	sbci	r31, 0xFF	; 255
    1d96:	60 81       	ld	r22, Z
    1d98:	8f 81       	ldd	r24, Y+7	; 0x07
    1d9a:	48 2f       	mov	r20, r24
    1d9c:	50 e0       	ldi	r21, 0x00	; 0
    1d9e:	ca 01       	movw	r24, r20
    1da0:	88 0f       	add	r24, r24
    1da2:	99 1f       	adc	r25, r25
    1da4:	9c 01       	movw	r18, r24
    1da6:	22 0f       	add	r18, r18
    1da8:	33 1f       	adc	r19, r19
    1daa:	22 0f       	add	r18, r18
    1dac:	33 1f       	adc	r19, r19
    1dae:	22 0f       	add	r18, r18
    1db0:	33 1f       	adc	r19, r19
    1db2:	82 0f       	add	r24, r18
    1db4:	93 1f       	adc	r25, r19
    1db6:	84 0f       	add	r24, r20
    1db8:	95 1f       	adc	r25, r21
    1dba:	fc 01       	movw	r30, r24
    1dbc:	e2 58       	subi	r30, 0x82	; 130
    1dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc0:	20 81       	ld	r18, Z
    1dc2:	88 85       	ldd	r24, Y+8	; 0x08
    1dc4:	88 2f       	mov	r24, r24
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	fc 01       	movw	r30, r24
    1dca:	ef 55       	subi	r30, 0x5F	; 95
    1dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dce:	80 81       	ld	r24, Z
    1dd0:	86 95       	lsr	r24
    1dd2:	98 2f       	mov	r25, r24
    1dd4:	91 70       	andi	r25, 0x01	; 1
    1dd6:	86 2f       	mov	r24, r22
    1dd8:	62 2f       	mov	r22, r18
    1dda:	49 2f       	mov	r20, r25
    1ddc:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    1de0:	88 2f       	mov	r24, r24
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	88 0f       	add	r24, r24
    1de6:	99 1f       	adc	r25, r25
    1de8:	88 0f       	add	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	88 0f       	add	r24, r24
    1dee:	99 1f       	adc	r25, r25
    1df0:	9c 01       	movw	r18, r24
    1df2:	44 27       	eor	r20, r20
    1df4:	37 fd       	sbrc	r19, 7
    1df6:	40 95       	com	r20
    1df8:	54 2f       	mov	r21, r20
    1dfa:	89 81       	ldd	r24, Y+1	; 0x01
    1dfc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dfe:	ab 81       	ldd	r26, Y+3	; 0x03
    1e00:	bc 81       	ldd	r27, Y+4	; 0x04
    1e02:	82 2b       	or	r24, r18
    1e04:	93 2b       	or	r25, r19
    1e06:	a4 2b       	or	r26, r20
    1e08:	b5 2b       	or	r27, r21
    1e0a:	89 83       	std	Y+1, r24	; 0x01
    1e0c:	9a 83       	std	Y+2, r25	; 0x02
    1e0e:	ab 83       	std	Y+3, r26	; 0x03
    1e10:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>1) & 1)) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    1e12:	8f 81       	ldd	r24, Y+7	; 0x07
    1e14:	48 2f       	mov	r20, r24
    1e16:	50 e0       	ldi	r21, 0x00	; 0
    1e18:	ca 01       	movw	r24, r20
    1e1a:	88 0f       	add	r24, r24
    1e1c:	99 1f       	adc	r25, r25
    1e1e:	9c 01       	movw	r18, r24
    1e20:	22 0f       	add	r18, r18
    1e22:	33 1f       	adc	r19, r19
    1e24:	22 0f       	add	r18, r18
    1e26:	33 1f       	adc	r19, r19
    1e28:	22 0f       	add	r18, r18
    1e2a:	33 1f       	adc	r19, r19
    1e2c:	82 0f       	add	r24, r18
    1e2e:	93 1f       	adc	r25, r19
    1e30:	84 0f       	add	r24, r20
    1e32:	95 1f       	adc	r25, r21
    1e34:	fc 01       	movw	r30, r24
    1e36:	e1 58       	subi	r30, 0x81	; 129
    1e38:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3a:	60 81       	ld	r22, Z
    1e3c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e3e:	48 2f       	mov	r20, r24
    1e40:	50 e0       	ldi	r21, 0x00	; 0
    1e42:	ca 01       	movw	r24, r20
    1e44:	88 0f       	add	r24, r24
    1e46:	99 1f       	adc	r25, r25
    1e48:	9c 01       	movw	r18, r24
    1e4a:	22 0f       	add	r18, r18
    1e4c:	33 1f       	adc	r19, r19
    1e4e:	22 0f       	add	r18, r18
    1e50:	33 1f       	adc	r19, r19
    1e52:	22 0f       	add	r18, r18
    1e54:	33 1f       	adc	r19, r19
    1e56:	82 0f       	add	r24, r18
    1e58:	93 1f       	adc	r25, r19
    1e5a:	84 0f       	add	r24, r20
    1e5c:	95 1f       	adc	r25, r21
    1e5e:	fc 01       	movw	r30, r24
    1e60:	e0 58       	subi	r30, 0x80	; 128
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	20 81       	ld	r18, Z
    1e66:	88 85       	ldd	r24, Y+8	; 0x08
    1e68:	88 2f       	mov	r24, r24
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	fc 01       	movw	r30, r24
    1e6e:	ef 55       	subi	r30, 0x5F	; 95
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	80 81       	ld	r24, Z
    1e74:	86 95       	lsr	r24
    1e76:	86 95       	lsr	r24
    1e78:	98 2f       	mov	r25, r24
    1e7a:	91 70       	andi	r25, 0x01	; 1
    1e7c:	86 2f       	mov	r24, r22
    1e7e:	62 2f       	mov	r22, r18
    1e80:	49 2f       	mov	r20, r25
    1e82:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    1e86:	88 2f       	mov	r24, r24
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	00 24       	eor	r0, r0
    1e8c:	96 95       	lsr	r25
    1e8e:	87 95       	ror	r24
    1e90:	07 94       	ror	r0
    1e92:	96 95       	lsr	r25
    1e94:	87 95       	ror	r24
    1e96:	07 94       	ror	r0
    1e98:	98 2f       	mov	r25, r24
    1e9a:	80 2d       	mov	r24, r0
    1e9c:	9c 01       	movw	r18, r24
    1e9e:	44 27       	eor	r20, r20
    1ea0:	37 fd       	sbrc	r19, 7
    1ea2:	40 95       	com	r20
    1ea4:	54 2f       	mov	r21, r20
    1ea6:	89 81       	ldd	r24, Y+1	; 0x01
    1ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    1eaa:	ab 81       	ldd	r26, Y+3	; 0x03
    1eac:	bc 81       	ldd	r27, Y+4	; 0x04
    1eae:	82 2b       	or	r24, r18
    1eb0:	93 2b       	or	r25, r19
    1eb2:	a4 2b       	or	r26, r20
    1eb4:	b5 2b       	or	r27, r21
    1eb6:	89 83       	std	Y+1, r24	; 0x01
    1eb8:	9a 83       	std	Y+2, r25	; 0x02
    1eba:	ab 83       	std	Y+3, r26	; 0x03
    1ebc:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>2) & 1)) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    1ebe:	8f 81       	ldd	r24, Y+7	; 0x07
    1ec0:	48 2f       	mov	r20, r24
    1ec2:	50 e0       	ldi	r21, 0x00	; 0
    1ec4:	ca 01       	movw	r24, r20
    1ec6:	88 0f       	add	r24, r24
    1ec8:	99 1f       	adc	r25, r25
    1eca:	9c 01       	movw	r18, r24
    1ecc:	22 0f       	add	r18, r18
    1ece:	33 1f       	adc	r19, r19
    1ed0:	22 0f       	add	r18, r18
    1ed2:	33 1f       	adc	r19, r19
    1ed4:	22 0f       	add	r18, r18
    1ed6:	33 1f       	adc	r19, r19
    1ed8:	82 0f       	add	r24, r18
    1eda:	93 1f       	adc	r25, r19
    1edc:	84 0f       	add	r24, r20
    1ede:	95 1f       	adc	r25, r21
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	ef 57       	subi	r30, 0x7F	; 127
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	60 81       	ld	r22, Z
    1ee8:	8f 81       	ldd	r24, Y+7	; 0x07
    1eea:	48 2f       	mov	r20, r24
    1eec:	50 e0       	ldi	r21, 0x00	; 0
    1eee:	ca 01       	movw	r24, r20
    1ef0:	88 0f       	add	r24, r24
    1ef2:	99 1f       	adc	r25, r25
    1ef4:	9c 01       	movw	r18, r24
    1ef6:	22 0f       	add	r18, r18
    1ef8:	33 1f       	adc	r19, r19
    1efa:	22 0f       	add	r18, r18
    1efc:	33 1f       	adc	r19, r19
    1efe:	22 0f       	add	r18, r18
    1f00:	33 1f       	adc	r19, r19
    1f02:	82 0f       	add	r24, r18
    1f04:	93 1f       	adc	r25, r19
    1f06:	84 0f       	add	r24, r20
    1f08:	95 1f       	adc	r25, r21
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	ee 57       	subi	r30, 0x7E	; 126
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	20 81       	ld	r18, Z
    1f12:	88 85       	ldd	r24, Y+8	; 0x08
    1f14:	88 2f       	mov	r24, r24
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	fc 01       	movw	r30, r24
    1f1a:	ef 55       	subi	r30, 0x5F	; 95
    1f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1e:	80 81       	ld	r24, Z
    1f20:	86 95       	lsr	r24
    1f22:	86 95       	lsr	r24
    1f24:	86 95       	lsr	r24
    1f26:	98 2f       	mov	r25, r24
    1f28:	91 70       	andi	r25, 0x01	; 1
    1f2a:	86 2f       	mov	r24, r22
    1f2c:	62 2f       	mov	r22, r18
    1f2e:	49 2f       	mov	r20, r25
    1f30:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    1f34:	88 2f       	mov	r24, r24
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	98 2f       	mov	r25, r24
    1f3a:	88 27       	eor	r24, r24
    1f3c:	99 0f       	add	r25, r25
    1f3e:	9c 01       	movw	r18, r24
    1f40:	44 27       	eor	r20, r20
    1f42:	37 fd       	sbrc	r19, 7
    1f44:	40 95       	com	r20
    1f46:	54 2f       	mov	r21, r20
    1f48:	89 81       	ldd	r24, Y+1	; 0x01
    1f4a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f4c:	ab 81       	ldd	r26, Y+3	; 0x03
    1f4e:	bc 81       	ldd	r27, Y+4	; 0x04
    1f50:	82 2b       	or	r24, r18
    1f52:	93 2b       	or	r25, r19
    1f54:	a4 2b       	or	r26, r20
    1f56:	b5 2b       	or	r27, r21
    1f58:	89 83       	std	Y+1, r24	; 0x01
    1f5a:	9a 83       	std	Y+2, r25	; 0x02
    1f5c:	ab 83       	std	Y+3, r26	; 0x03
    1f5e:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>3) & 1)) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    1f60:	8f 81       	ldd	r24, Y+7	; 0x07
    1f62:	48 2f       	mov	r20, r24
    1f64:	50 e0       	ldi	r21, 0x00	; 0
    1f66:	ca 01       	movw	r24, r20
    1f68:	88 0f       	add	r24, r24
    1f6a:	99 1f       	adc	r25, r25
    1f6c:	9c 01       	movw	r18, r24
    1f6e:	22 0f       	add	r18, r18
    1f70:	33 1f       	adc	r19, r19
    1f72:	22 0f       	add	r18, r18
    1f74:	33 1f       	adc	r19, r19
    1f76:	22 0f       	add	r18, r18
    1f78:	33 1f       	adc	r19, r19
    1f7a:	82 0f       	add	r24, r18
    1f7c:	93 1f       	adc	r25, r19
    1f7e:	84 0f       	add	r24, r20
    1f80:	95 1f       	adc	r25, r21
    1f82:	fc 01       	movw	r30, r24
    1f84:	ed 57       	subi	r30, 0x7D	; 125
    1f86:	ff 4f       	sbci	r31, 0xFF	; 255
    1f88:	60 81       	ld	r22, Z
    1f8a:	8f 81       	ldd	r24, Y+7	; 0x07
    1f8c:	48 2f       	mov	r20, r24
    1f8e:	50 e0       	ldi	r21, 0x00	; 0
    1f90:	ca 01       	movw	r24, r20
    1f92:	88 0f       	add	r24, r24
    1f94:	99 1f       	adc	r25, r25
    1f96:	9c 01       	movw	r18, r24
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	22 0f       	add	r18, r18
    1f9e:	33 1f       	adc	r19, r19
    1fa0:	22 0f       	add	r18, r18
    1fa2:	33 1f       	adc	r19, r19
    1fa4:	82 0f       	add	r24, r18
    1fa6:	93 1f       	adc	r25, r19
    1fa8:	84 0f       	add	r24, r20
    1faa:	95 1f       	adc	r25, r21
    1fac:	fc 01       	movw	r30, r24
    1fae:	ec 57       	subi	r30, 0x7C	; 124
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	20 81       	ld	r18, Z
    1fb4:	88 85       	ldd	r24, Y+8	; 0x08
    1fb6:	88 2f       	mov	r24, r24
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	fc 01       	movw	r30, r24
    1fbc:	ef 55       	subi	r30, 0x5F	; 95
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	80 81       	ld	r24, Z
    1fc2:	82 95       	swap	r24
    1fc4:	8f 70       	andi	r24, 0x0F	; 15
    1fc6:	98 2f       	mov	r25, r24
    1fc8:	91 70       	andi	r25, 0x01	; 1
    1fca:	86 2f       	mov	r24, r22
    1fcc:	62 2f       	mov	r22, r18
    1fce:	49 2f       	mov	r20, r25
    1fd0:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    1fd4:	88 2f       	mov	r24, r24
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	98 2f       	mov	r25, r24
    1fda:	88 27       	eor	r24, r24
    1fdc:	92 95       	swap	r25
    1fde:	90 7f       	andi	r25, 0xF0	; 240
    1fe0:	9c 01       	movw	r18, r24
    1fe2:	44 27       	eor	r20, r20
    1fe4:	37 fd       	sbrc	r19, 7
    1fe6:	40 95       	com	r20
    1fe8:	54 2f       	mov	r21, r20
    1fea:	89 81       	ldd	r24, Y+1	; 0x01
    1fec:	9a 81       	ldd	r25, Y+2	; 0x02
    1fee:	ab 81       	ldd	r26, Y+3	; 0x03
    1ff0:	bc 81       	ldd	r27, Y+4	; 0x04
    1ff2:	82 2b       	or	r24, r18
    1ff4:	93 2b       	or	r25, r19
    1ff6:	a4 2b       	or	r26, r20
    1ff8:	b5 2b       	or	r27, r21
    1ffa:	89 83       	std	Y+1, r24	; 0x01
    1ffc:	9a 83       	std	Y+2, r25	; 0x02
    1ffe:	ab 83       	std	Y+3, r26	; 0x03
    2000:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>4) & 1)) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    2002:	8f 81       	ldd	r24, Y+7	; 0x07
    2004:	48 2f       	mov	r20, r24
    2006:	50 e0       	ldi	r21, 0x00	; 0
    2008:	ca 01       	movw	r24, r20
    200a:	88 0f       	add	r24, r24
    200c:	99 1f       	adc	r25, r25
    200e:	9c 01       	movw	r18, r24
    2010:	22 0f       	add	r18, r18
    2012:	33 1f       	adc	r19, r19
    2014:	22 0f       	add	r18, r18
    2016:	33 1f       	adc	r19, r19
    2018:	22 0f       	add	r18, r18
    201a:	33 1f       	adc	r19, r19
    201c:	82 0f       	add	r24, r18
    201e:	93 1f       	adc	r25, r19
    2020:	84 0f       	add	r24, r20
    2022:	95 1f       	adc	r25, r21
    2024:	fc 01       	movw	r30, r24
    2026:	eb 57       	subi	r30, 0x7B	; 123
    2028:	ff 4f       	sbci	r31, 0xFF	; 255
    202a:	60 81       	ld	r22, Z
    202c:	8f 81       	ldd	r24, Y+7	; 0x07
    202e:	48 2f       	mov	r20, r24
    2030:	50 e0       	ldi	r21, 0x00	; 0
    2032:	ca 01       	movw	r24, r20
    2034:	88 0f       	add	r24, r24
    2036:	99 1f       	adc	r25, r25
    2038:	9c 01       	movw	r18, r24
    203a:	22 0f       	add	r18, r18
    203c:	33 1f       	adc	r19, r19
    203e:	22 0f       	add	r18, r18
    2040:	33 1f       	adc	r19, r19
    2042:	22 0f       	add	r18, r18
    2044:	33 1f       	adc	r19, r19
    2046:	82 0f       	add	r24, r18
    2048:	93 1f       	adc	r25, r19
    204a:	84 0f       	add	r24, r20
    204c:	95 1f       	adc	r25, r21
    204e:	fc 01       	movw	r30, r24
    2050:	ea 57       	subi	r30, 0x7A	; 122
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	20 81       	ld	r18, Z
    2056:	88 85       	ldd	r24, Y+8	; 0x08
    2058:	88 2f       	mov	r24, r24
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	fc 01       	movw	r30, r24
    205e:	ef 55       	subi	r30, 0x5F	; 95
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	80 81       	ld	r24, Z
    2064:	82 95       	swap	r24
    2066:	86 95       	lsr	r24
    2068:	87 70       	andi	r24, 0x07	; 7
    206a:	98 2f       	mov	r25, r24
    206c:	91 70       	andi	r25, 0x01	; 1
    206e:	86 2f       	mov	r24, r22
    2070:	62 2f       	mov	r22, r18
    2072:	49 2f       	mov	r20, r25
    2074:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2078:	88 2f       	mov	r24, r24
    207a:	90 e0       	ldi	r25, 0x00	; 0
    207c:	a0 e0       	ldi	r26, 0x00	; 0
    207e:	b0 e0       	ldi	r27, 0x00	; 0
    2080:	9c 01       	movw	r18, r24
    2082:	ad 01       	movw	r20, r26
    2084:	01 2e       	mov	r0, r17
    2086:	1f e0       	ldi	r17, 0x0F	; 15
    2088:	22 0f       	add	r18, r18
    208a:	33 1f       	adc	r19, r19
    208c:	44 1f       	adc	r20, r20
    208e:	55 1f       	adc	r21, r21
    2090:	1a 95       	dec	r17
    2092:	d1 f7       	brne	.-12     	; 0x2088 <SSDLT_enuDisplayNum+0x40e>
    2094:	10 2d       	mov	r17, r0
    2096:	89 81       	ldd	r24, Y+1	; 0x01
    2098:	9a 81       	ldd	r25, Y+2	; 0x02
    209a:	ab 81       	ldd	r26, Y+3	; 0x03
    209c:	bc 81       	ldd	r27, Y+4	; 0x04
    209e:	82 2b       	or	r24, r18
    20a0:	93 2b       	or	r25, r19
    20a2:	a4 2b       	or	r26, r20
    20a4:	b5 2b       	or	r27, r21
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	9a 83       	std	Y+2, r25	; 0x02
    20aa:	ab 83       	std	Y+3, r26	; 0x03
    20ac:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>5) & 1)) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    20ae:	8f 81       	ldd	r24, Y+7	; 0x07
    20b0:	48 2f       	mov	r20, r24
    20b2:	50 e0       	ldi	r21, 0x00	; 0
    20b4:	ca 01       	movw	r24, r20
    20b6:	88 0f       	add	r24, r24
    20b8:	99 1f       	adc	r25, r25
    20ba:	9c 01       	movw	r18, r24
    20bc:	22 0f       	add	r18, r18
    20be:	33 1f       	adc	r19, r19
    20c0:	22 0f       	add	r18, r18
    20c2:	33 1f       	adc	r19, r19
    20c4:	22 0f       	add	r18, r18
    20c6:	33 1f       	adc	r19, r19
    20c8:	82 0f       	add	r24, r18
    20ca:	93 1f       	adc	r25, r19
    20cc:	84 0f       	add	r24, r20
    20ce:	95 1f       	adc	r25, r21
    20d0:	fc 01       	movw	r30, r24
    20d2:	e9 57       	subi	r30, 0x79	; 121
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	60 81       	ld	r22, Z
    20d8:	8f 81       	ldd	r24, Y+7	; 0x07
    20da:	48 2f       	mov	r20, r24
    20dc:	50 e0       	ldi	r21, 0x00	; 0
    20de:	ca 01       	movw	r24, r20
    20e0:	88 0f       	add	r24, r24
    20e2:	99 1f       	adc	r25, r25
    20e4:	9c 01       	movw	r18, r24
    20e6:	22 0f       	add	r18, r18
    20e8:	33 1f       	adc	r19, r19
    20ea:	22 0f       	add	r18, r18
    20ec:	33 1f       	adc	r19, r19
    20ee:	22 0f       	add	r18, r18
    20f0:	33 1f       	adc	r19, r19
    20f2:	82 0f       	add	r24, r18
    20f4:	93 1f       	adc	r25, r19
    20f6:	84 0f       	add	r24, r20
    20f8:	95 1f       	adc	r25, r21
    20fa:	fc 01       	movw	r30, r24
    20fc:	e8 57       	subi	r30, 0x78	; 120
    20fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2100:	20 81       	ld	r18, Z
    2102:	88 85       	ldd	r24, Y+8	; 0x08
    2104:	88 2f       	mov	r24, r24
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	fc 01       	movw	r30, r24
    210a:	ef 55       	subi	r30, 0x5F	; 95
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 81       	ld	r24, Z
    2110:	82 95       	swap	r24
    2112:	86 95       	lsr	r24
    2114:	86 95       	lsr	r24
    2116:	83 70       	andi	r24, 0x03	; 3
    2118:	98 2f       	mov	r25, r24
    211a:	91 70       	andi	r25, 0x01	; 1
    211c:	86 2f       	mov	r24, r22
    211e:	62 2f       	mov	r22, r18
    2120:	49 2f       	mov	r20, r25
    2122:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2126:	88 2f       	mov	r24, r24
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	a0 e0       	ldi	r26, 0x00	; 0
    212c:	b0 e0       	ldi	r27, 0x00	; 0
    212e:	9c 01       	movw	r18, r24
    2130:	ad 01       	movw	r20, r26
    2132:	01 2e       	mov	r0, r17
    2134:	12 e1       	ldi	r17, 0x12	; 18
    2136:	22 0f       	add	r18, r18
    2138:	33 1f       	adc	r19, r19
    213a:	44 1f       	adc	r20, r20
    213c:	55 1f       	adc	r21, r21
    213e:	1a 95       	dec	r17
    2140:	d1 f7       	brne	.-12     	; 0x2136 <SSDLT_enuDisplayNum+0x4bc>
    2142:	10 2d       	mov	r17, r0
    2144:	89 81       	ldd	r24, Y+1	; 0x01
    2146:	9a 81       	ldd	r25, Y+2	; 0x02
    2148:	ab 81       	ldd	r26, Y+3	; 0x03
    214a:	bc 81       	ldd	r27, Y+4	; 0x04
    214c:	82 2b       	or	r24, r18
    214e:	93 2b       	or	r25, r19
    2150:	a4 2b       	or	r26, r20
    2152:	b5 2b       	or	r27, r21
    2154:	89 83       	std	Y+1, r24	; 0x01
    2156:	9a 83       	std	Y+2, r25	; 0x02
    2158:	ab 83       	std	Y+3, r26	; 0x03
    215a:	bc 83       	std	Y+4, r27	; 0x04
    215c:	9c c2       	rjmp	.+1336   	; 0x2696 <SSDLT_enuDisplayNum+0xa1c>
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  ((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>6) & 1)) << 18));

		}
		else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    215e:	8f 81       	ldd	r24, Y+7	; 0x07
    2160:	48 2f       	mov	r20, r24
    2162:	50 e0       	ldi	r21, 0x00	; 0
    2164:	ca 01       	movw	r24, r20
    2166:	88 0f       	add	r24, r24
    2168:	99 1f       	adc	r25, r25
    216a:	9c 01       	movw	r18, r24
    216c:	22 0f       	add	r18, r18
    216e:	33 1f       	adc	r19, r19
    2170:	22 0f       	add	r18, r18
    2172:	33 1f       	adc	r19, r19
    2174:	22 0f       	add	r18, r18
    2176:	33 1f       	adc	r19, r19
    2178:	82 0f       	add	r24, r18
    217a:	93 1f       	adc	r25, r19
    217c:	84 0f       	add	r24, r20
    217e:	95 1f       	adc	r25, r21
    2180:	fc 01       	movw	r30, r24
    2182:	e3 57       	subi	r30, 0x73	; 115
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	80 81       	ld	r24, Z
    2188:	88 23       	and	r24, r24
    218a:	09 f0       	breq	.+2      	; 0x218e <SSDLT_enuDisplayNum+0x514>
    218c:	7f c2       	rjmp	.+1278   	; 0x268c <SSDLT_enuDisplayNum+0xa12>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    218e:	8f 81       	ldd	r24, Y+7	; 0x07
    2190:	48 2f       	mov	r20, r24
    2192:	50 e0       	ldi	r21, 0x00	; 0
    2194:	ca 01       	movw	r24, r20
    2196:	88 0f       	add	r24, r24
    2198:	99 1f       	adc	r25, r25
    219a:	9c 01       	movw	r18, r24
    219c:	22 0f       	add	r18, r18
    219e:	33 1f       	adc	r19, r19
    21a0:	22 0f       	add	r18, r18
    21a2:	33 1f       	adc	r19, r19
    21a4:	22 0f       	add	r18, r18
    21a6:	33 1f       	adc	r19, r19
    21a8:	82 0f       	add	r24, r18
    21aa:	93 1f       	adc	r25, r19
    21ac:	84 0f       	add	r24, r20
    21ae:	95 1f       	adc	r25, r21
    21b0:	fc 01       	movw	r30, r24
    21b2:	e5 58       	subi	r30, 0x85	; 133
    21b4:	ff 4f       	sbci	r31, 0xFF	; 255
    21b6:	80 81       	ld	r24, Z
    21b8:	8e 8f       	std	Y+30, r24	; 0x1e
    21ba:	8f 81       	ldd	r24, Y+7	; 0x07
    21bc:	48 2f       	mov	r20, r24
    21be:	50 e0       	ldi	r21, 0x00	; 0
    21c0:	ca 01       	movw	r24, r20
    21c2:	88 0f       	add	r24, r24
    21c4:	99 1f       	adc	r25, r25
    21c6:	9c 01       	movw	r18, r24
    21c8:	22 0f       	add	r18, r18
    21ca:	33 1f       	adc	r19, r19
    21cc:	22 0f       	add	r18, r18
    21ce:	33 1f       	adc	r19, r19
    21d0:	22 0f       	add	r18, r18
    21d2:	33 1f       	adc	r19, r19
    21d4:	82 0f       	add	r24, r18
    21d6:	93 1f       	adc	r25, r19
    21d8:	84 0f       	add	r24, r20
    21da:	95 1f       	adc	r25, r21
    21dc:	fc 01       	movw	r30, r24
    21de:	e4 58       	subi	r30, 0x84	; 132
    21e0:	ff 4f       	sbci	r31, 0xFF	; 255
    21e2:	80 81       	ld	r24, Z
    21e4:	8d 8f       	std	Y+29, r24	; 0x1d
    21e6:	88 85       	ldd	r24, Y+8	; 0x08
    21e8:	88 2f       	mov	r24, r24
    21ea:	90 e0       	ldi	r25, 0x00	; 0
    21ec:	fc 01       	movw	r30, r24
    21ee:	ef 55       	subi	r30, 0x5F	; 95
    21f0:	ff 4f       	sbci	r31, 0xFF	; 255
    21f2:	80 81       	ld	r24, Z
    21f4:	88 2f       	mov	r24, r24
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	81 70       	andi	r24, 0x01	; 1
    21fa:	90 70       	andi	r25, 0x00	; 0
    21fc:	1c 8e       	std	Y+28, r1	; 0x1c
    21fe:	00 97       	sbiw	r24, 0x00	; 0
    2200:	11 f4       	brne	.+4      	; 0x2206 <SSDLT_enuDisplayNum+0x58c>
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	8c 8f       	std	Y+28, r24	; 0x1c
    2206:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2208:	6d 8d       	ldd	r22, Y+29	; 0x1d
    220a:	4c 8d       	ldd	r20, Y+28	; 0x1c
    220c:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2210:	28 2f       	mov	r18, r24
    2212:	30 e0       	ldi	r19, 0x00	; 0
    2214:	40 e0       	ldi	r20, 0x00	; 0
    2216:	50 e0       	ldi	r21, 0x00	; 0
    2218:	89 81       	ldd	r24, Y+1	; 0x01
    221a:	9a 81       	ldd	r25, Y+2	; 0x02
    221c:	ab 81       	ldd	r26, Y+3	; 0x03
    221e:	bc 81       	ldd	r27, Y+4	; 0x04
    2220:	82 2b       	or	r24, r18
    2222:	93 2b       	or	r25, r19
    2224:	a4 2b       	or	r26, r20
    2226:	b5 2b       	or	r27, r21
    2228:	89 83       	std	Y+1, r24	; 0x01
    222a:	9a 83       	std	Y+2, r25	; 0x02
    222c:	ab 83       	std	Y+3, r26	; 0x03
    222e:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>0) & 1))) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    2230:	8f 81       	ldd	r24, Y+7	; 0x07
    2232:	48 2f       	mov	r20, r24
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	ca 01       	movw	r24, r20
    2238:	88 0f       	add	r24, r24
    223a:	99 1f       	adc	r25, r25
    223c:	9c 01       	movw	r18, r24
    223e:	22 0f       	add	r18, r18
    2240:	33 1f       	adc	r19, r19
    2242:	22 0f       	add	r18, r18
    2244:	33 1f       	adc	r19, r19
    2246:	22 0f       	add	r18, r18
    2248:	33 1f       	adc	r19, r19
    224a:	82 0f       	add	r24, r18
    224c:	93 1f       	adc	r25, r19
    224e:	84 0f       	add	r24, r20
    2250:	95 1f       	adc	r25, r21
    2252:	fc 01       	movw	r30, r24
    2254:	e3 58       	subi	r30, 0x83	; 131
    2256:	ff 4f       	sbci	r31, 0xFF	; 255
    2258:	80 81       	ld	r24, Z
    225a:	8b 8f       	std	Y+27, r24	; 0x1b
    225c:	8f 81       	ldd	r24, Y+7	; 0x07
    225e:	48 2f       	mov	r20, r24
    2260:	50 e0       	ldi	r21, 0x00	; 0
    2262:	ca 01       	movw	r24, r20
    2264:	88 0f       	add	r24, r24
    2266:	99 1f       	adc	r25, r25
    2268:	9c 01       	movw	r18, r24
    226a:	22 0f       	add	r18, r18
    226c:	33 1f       	adc	r19, r19
    226e:	22 0f       	add	r18, r18
    2270:	33 1f       	adc	r19, r19
    2272:	22 0f       	add	r18, r18
    2274:	33 1f       	adc	r19, r19
    2276:	82 0f       	add	r24, r18
    2278:	93 1f       	adc	r25, r19
    227a:	84 0f       	add	r24, r20
    227c:	95 1f       	adc	r25, r21
    227e:	fc 01       	movw	r30, r24
    2280:	e2 58       	subi	r30, 0x82	; 130
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	80 81       	ld	r24, Z
    2286:	8a 8f       	std	Y+26, r24	; 0x1a
    2288:	88 85       	ldd	r24, Y+8	; 0x08
    228a:	88 2f       	mov	r24, r24
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	fc 01       	movw	r30, r24
    2290:	ef 55       	subi	r30, 0x5F	; 95
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	80 81       	ld	r24, Z
    2296:	86 95       	lsr	r24
    2298:	88 2f       	mov	r24, r24
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	81 70       	andi	r24, 0x01	; 1
    229e:	90 70       	andi	r25, 0x00	; 0
    22a0:	19 8e       	std	Y+25, r1	; 0x19
    22a2:	00 97       	sbiw	r24, 0x00	; 0
    22a4:	11 f4       	brne	.+4      	; 0x22aa <SSDLT_enuDisplayNum+0x630>
    22a6:	81 e0       	ldi	r24, 0x01	; 1
    22a8:	89 8f       	std	Y+25, r24	; 0x19
    22aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22ac:	6a 8d       	ldd	r22, Y+26	; 0x1a
    22ae:	49 8d       	ldd	r20, Y+25	; 0x19
    22b0:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    22b4:	88 2f       	mov	r24, r24
    22b6:	90 e0       	ldi	r25, 0x00	; 0
    22b8:	88 0f       	add	r24, r24
    22ba:	99 1f       	adc	r25, r25
    22bc:	88 0f       	add	r24, r24
    22be:	99 1f       	adc	r25, r25
    22c0:	88 0f       	add	r24, r24
    22c2:	99 1f       	adc	r25, r25
    22c4:	9c 01       	movw	r18, r24
    22c6:	44 27       	eor	r20, r20
    22c8:	37 fd       	sbrc	r19, 7
    22ca:	40 95       	com	r20
    22cc:	54 2f       	mov	r21, r20
    22ce:	89 81       	ldd	r24, Y+1	; 0x01
    22d0:	9a 81       	ldd	r25, Y+2	; 0x02
    22d2:	ab 81       	ldd	r26, Y+3	; 0x03
    22d4:	bc 81       	ldd	r27, Y+4	; 0x04
    22d6:	82 2b       	or	r24, r18
    22d8:	93 2b       	or	r25, r19
    22da:	a4 2b       	or	r26, r20
    22dc:	b5 2b       	or	r27, r21
    22de:	89 83       	std	Y+1, r24	; 0x01
    22e0:	9a 83       	std	Y+2, r25	; 0x02
    22e2:	ab 83       	std	Y+3, r26	; 0x03
    22e4:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>1) & 1))) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    22e6:	8f 81       	ldd	r24, Y+7	; 0x07
    22e8:	48 2f       	mov	r20, r24
    22ea:	50 e0       	ldi	r21, 0x00	; 0
    22ec:	ca 01       	movw	r24, r20
    22ee:	88 0f       	add	r24, r24
    22f0:	99 1f       	adc	r25, r25
    22f2:	9c 01       	movw	r18, r24
    22f4:	22 0f       	add	r18, r18
    22f6:	33 1f       	adc	r19, r19
    22f8:	22 0f       	add	r18, r18
    22fa:	33 1f       	adc	r19, r19
    22fc:	22 0f       	add	r18, r18
    22fe:	33 1f       	adc	r19, r19
    2300:	82 0f       	add	r24, r18
    2302:	93 1f       	adc	r25, r19
    2304:	84 0f       	add	r24, r20
    2306:	95 1f       	adc	r25, r21
    2308:	fc 01       	movw	r30, r24
    230a:	e1 58       	subi	r30, 0x81	; 129
    230c:	ff 4f       	sbci	r31, 0xFF	; 255
    230e:	80 81       	ld	r24, Z
    2310:	88 8f       	std	Y+24, r24	; 0x18
    2312:	8f 81       	ldd	r24, Y+7	; 0x07
    2314:	48 2f       	mov	r20, r24
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	ca 01       	movw	r24, r20
    231a:	88 0f       	add	r24, r24
    231c:	99 1f       	adc	r25, r25
    231e:	9c 01       	movw	r18, r24
    2320:	22 0f       	add	r18, r18
    2322:	33 1f       	adc	r19, r19
    2324:	22 0f       	add	r18, r18
    2326:	33 1f       	adc	r19, r19
    2328:	22 0f       	add	r18, r18
    232a:	33 1f       	adc	r19, r19
    232c:	82 0f       	add	r24, r18
    232e:	93 1f       	adc	r25, r19
    2330:	84 0f       	add	r24, r20
    2332:	95 1f       	adc	r25, r21
    2334:	fc 01       	movw	r30, r24
    2336:	e0 58       	subi	r30, 0x80	; 128
    2338:	ff 4f       	sbci	r31, 0xFF	; 255
    233a:	80 81       	ld	r24, Z
    233c:	8f 8b       	std	Y+23, r24	; 0x17
    233e:	88 85       	ldd	r24, Y+8	; 0x08
    2340:	88 2f       	mov	r24, r24
    2342:	90 e0       	ldi	r25, 0x00	; 0
    2344:	fc 01       	movw	r30, r24
    2346:	ef 55       	subi	r30, 0x5F	; 95
    2348:	ff 4f       	sbci	r31, 0xFF	; 255
    234a:	80 81       	ld	r24, Z
    234c:	86 95       	lsr	r24
    234e:	86 95       	lsr	r24
    2350:	88 2f       	mov	r24, r24
    2352:	90 e0       	ldi	r25, 0x00	; 0
    2354:	81 70       	andi	r24, 0x01	; 1
    2356:	90 70       	andi	r25, 0x00	; 0
    2358:	1e 8a       	std	Y+22, r1	; 0x16
    235a:	00 97       	sbiw	r24, 0x00	; 0
    235c:	11 f4       	brne	.+4      	; 0x2362 <SSDLT_enuDisplayNum+0x6e8>
    235e:	81 e0       	ldi	r24, 0x01	; 1
    2360:	8e 8b       	std	Y+22, r24	; 0x16
    2362:	88 8d       	ldd	r24, Y+24	; 0x18
    2364:	6f 89       	ldd	r22, Y+23	; 0x17
    2366:	4e 89       	ldd	r20, Y+22	; 0x16
    2368:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    236c:	88 2f       	mov	r24, r24
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	00 24       	eor	r0, r0
    2372:	96 95       	lsr	r25
    2374:	87 95       	ror	r24
    2376:	07 94       	ror	r0
    2378:	96 95       	lsr	r25
    237a:	87 95       	ror	r24
    237c:	07 94       	ror	r0
    237e:	98 2f       	mov	r25, r24
    2380:	80 2d       	mov	r24, r0
    2382:	9c 01       	movw	r18, r24
    2384:	44 27       	eor	r20, r20
    2386:	37 fd       	sbrc	r19, 7
    2388:	40 95       	com	r20
    238a:	54 2f       	mov	r21, r20
    238c:	89 81       	ldd	r24, Y+1	; 0x01
    238e:	9a 81       	ldd	r25, Y+2	; 0x02
    2390:	ab 81       	ldd	r26, Y+3	; 0x03
    2392:	bc 81       	ldd	r27, Y+4	; 0x04
    2394:	82 2b       	or	r24, r18
    2396:	93 2b       	or	r25, r19
    2398:	a4 2b       	or	r26, r20
    239a:	b5 2b       	or	r27, r21
    239c:	89 83       	std	Y+1, r24	; 0x01
    239e:	9a 83       	std	Y+2, r25	; 0x02
    23a0:	ab 83       	std	Y+3, r26	; 0x03
    23a2:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>2) & 1))) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    23a4:	8f 81       	ldd	r24, Y+7	; 0x07
    23a6:	48 2f       	mov	r20, r24
    23a8:	50 e0       	ldi	r21, 0x00	; 0
    23aa:	ca 01       	movw	r24, r20
    23ac:	88 0f       	add	r24, r24
    23ae:	99 1f       	adc	r25, r25
    23b0:	9c 01       	movw	r18, r24
    23b2:	22 0f       	add	r18, r18
    23b4:	33 1f       	adc	r19, r19
    23b6:	22 0f       	add	r18, r18
    23b8:	33 1f       	adc	r19, r19
    23ba:	22 0f       	add	r18, r18
    23bc:	33 1f       	adc	r19, r19
    23be:	82 0f       	add	r24, r18
    23c0:	93 1f       	adc	r25, r19
    23c2:	84 0f       	add	r24, r20
    23c4:	95 1f       	adc	r25, r21
    23c6:	fc 01       	movw	r30, r24
    23c8:	ef 57       	subi	r30, 0x7F	; 127
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	80 81       	ld	r24, Z
    23ce:	8d 8b       	std	Y+21, r24	; 0x15
    23d0:	8f 81       	ldd	r24, Y+7	; 0x07
    23d2:	48 2f       	mov	r20, r24
    23d4:	50 e0       	ldi	r21, 0x00	; 0
    23d6:	ca 01       	movw	r24, r20
    23d8:	88 0f       	add	r24, r24
    23da:	99 1f       	adc	r25, r25
    23dc:	9c 01       	movw	r18, r24
    23de:	22 0f       	add	r18, r18
    23e0:	33 1f       	adc	r19, r19
    23e2:	22 0f       	add	r18, r18
    23e4:	33 1f       	adc	r19, r19
    23e6:	22 0f       	add	r18, r18
    23e8:	33 1f       	adc	r19, r19
    23ea:	82 0f       	add	r24, r18
    23ec:	93 1f       	adc	r25, r19
    23ee:	84 0f       	add	r24, r20
    23f0:	95 1f       	adc	r25, r21
    23f2:	fc 01       	movw	r30, r24
    23f4:	ee 57       	subi	r30, 0x7E	; 126
    23f6:	ff 4f       	sbci	r31, 0xFF	; 255
    23f8:	80 81       	ld	r24, Z
    23fa:	8c 8b       	std	Y+20, r24	; 0x14
    23fc:	88 85       	ldd	r24, Y+8	; 0x08
    23fe:	88 2f       	mov	r24, r24
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	fc 01       	movw	r30, r24
    2404:	ef 55       	subi	r30, 0x5F	; 95
    2406:	ff 4f       	sbci	r31, 0xFF	; 255
    2408:	80 81       	ld	r24, Z
    240a:	86 95       	lsr	r24
    240c:	86 95       	lsr	r24
    240e:	86 95       	lsr	r24
    2410:	88 2f       	mov	r24, r24
    2412:	90 e0       	ldi	r25, 0x00	; 0
    2414:	81 70       	andi	r24, 0x01	; 1
    2416:	90 70       	andi	r25, 0x00	; 0
    2418:	1b 8a       	std	Y+19, r1	; 0x13
    241a:	00 97       	sbiw	r24, 0x00	; 0
    241c:	11 f4       	brne	.+4      	; 0x2422 <SSDLT_enuDisplayNum+0x7a8>
    241e:	81 e0       	ldi	r24, 0x01	; 1
    2420:	8b 8b       	std	Y+19, r24	; 0x13
    2422:	8d 89       	ldd	r24, Y+21	; 0x15
    2424:	6c 89       	ldd	r22, Y+20	; 0x14
    2426:	4b 89       	ldd	r20, Y+19	; 0x13
    2428:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    242c:	88 2f       	mov	r24, r24
    242e:	90 e0       	ldi	r25, 0x00	; 0
    2430:	98 2f       	mov	r25, r24
    2432:	88 27       	eor	r24, r24
    2434:	99 0f       	add	r25, r25
    2436:	9c 01       	movw	r18, r24
    2438:	44 27       	eor	r20, r20
    243a:	37 fd       	sbrc	r19, 7
    243c:	40 95       	com	r20
    243e:	54 2f       	mov	r21, r20
    2440:	89 81       	ldd	r24, Y+1	; 0x01
    2442:	9a 81       	ldd	r25, Y+2	; 0x02
    2444:	ab 81       	ldd	r26, Y+3	; 0x03
    2446:	bc 81       	ldd	r27, Y+4	; 0x04
    2448:	82 2b       	or	r24, r18
    244a:	93 2b       	or	r25, r19
    244c:	a4 2b       	or	r26, r20
    244e:	b5 2b       	or	r27, r21
    2450:	89 83       	std	Y+1, r24	; 0x01
    2452:	9a 83       	std	Y+2, r25	; 0x02
    2454:	ab 83       	std	Y+3, r26	; 0x03
    2456:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>3) & 1))) << 9);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    2458:	8f 81       	ldd	r24, Y+7	; 0x07
    245a:	48 2f       	mov	r20, r24
    245c:	50 e0       	ldi	r21, 0x00	; 0
    245e:	ca 01       	movw	r24, r20
    2460:	88 0f       	add	r24, r24
    2462:	99 1f       	adc	r25, r25
    2464:	9c 01       	movw	r18, r24
    2466:	22 0f       	add	r18, r18
    2468:	33 1f       	adc	r19, r19
    246a:	22 0f       	add	r18, r18
    246c:	33 1f       	adc	r19, r19
    246e:	22 0f       	add	r18, r18
    2470:	33 1f       	adc	r19, r19
    2472:	82 0f       	add	r24, r18
    2474:	93 1f       	adc	r25, r19
    2476:	84 0f       	add	r24, r20
    2478:	95 1f       	adc	r25, r21
    247a:	fc 01       	movw	r30, r24
    247c:	ed 57       	subi	r30, 0x7D	; 125
    247e:	ff 4f       	sbci	r31, 0xFF	; 255
    2480:	80 81       	ld	r24, Z
    2482:	8a 8b       	std	Y+18, r24	; 0x12
    2484:	8f 81       	ldd	r24, Y+7	; 0x07
    2486:	48 2f       	mov	r20, r24
    2488:	50 e0       	ldi	r21, 0x00	; 0
    248a:	ca 01       	movw	r24, r20
    248c:	88 0f       	add	r24, r24
    248e:	99 1f       	adc	r25, r25
    2490:	9c 01       	movw	r18, r24
    2492:	22 0f       	add	r18, r18
    2494:	33 1f       	adc	r19, r19
    2496:	22 0f       	add	r18, r18
    2498:	33 1f       	adc	r19, r19
    249a:	22 0f       	add	r18, r18
    249c:	33 1f       	adc	r19, r19
    249e:	82 0f       	add	r24, r18
    24a0:	93 1f       	adc	r25, r19
    24a2:	84 0f       	add	r24, r20
    24a4:	95 1f       	adc	r25, r21
    24a6:	fc 01       	movw	r30, r24
    24a8:	ec 57       	subi	r30, 0x7C	; 124
    24aa:	ff 4f       	sbci	r31, 0xFF	; 255
    24ac:	80 81       	ld	r24, Z
    24ae:	89 8b       	std	Y+17, r24	; 0x11
    24b0:	88 85       	ldd	r24, Y+8	; 0x08
    24b2:	88 2f       	mov	r24, r24
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	fc 01       	movw	r30, r24
    24b8:	ef 55       	subi	r30, 0x5F	; 95
    24ba:	ff 4f       	sbci	r31, 0xFF	; 255
    24bc:	80 81       	ld	r24, Z
    24be:	82 95       	swap	r24
    24c0:	8f 70       	andi	r24, 0x0F	; 15
    24c2:	88 2f       	mov	r24, r24
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	81 70       	andi	r24, 0x01	; 1
    24c8:	90 70       	andi	r25, 0x00	; 0
    24ca:	18 8a       	std	Y+16, r1	; 0x10
    24cc:	00 97       	sbiw	r24, 0x00	; 0
    24ce:	11 f4       	brne	.+4      	; 0x24d4 <SSDLT_enuDisplayNum+0x85a>
    24d0:	81 e0       	ldi	r24, 0x01	; 1
    24d2:	88 8b       	std	Y+16, r24	; 0x10
    24d4:	8a 89       	ldd	r24, Y+18	; 0x12
    24d6:	69 89       	ldd	r22, Y+17	; 0x11
    24d8:	48 89       	ldd	r20, Y+16	; 0x10
    24da:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    24de:	88 2f       	mov	r24, r24
    24e0:	90 e0       	ldi	r25, 0x00	; 0
    24e2:	98 2f       	mov	r25, r24
    24e4:	88 27       	eor	r24, r24
    24e6:	92 95       	swap	r25
    24e8:	90 7f       	andi	r25, 0xF0	; 240
    24ea:	9c 01       	movw	r18, r24
    24ec:	44 27       	eor	r20, r20
    24ee:	37 fd       	sbrc	r19, 7
    24f0:	40 95       	com	r20
    24f2:	54 2f       	mov	r21, r20
    24f4:	89 81       	ldd	r24, Y+1	; 0x01
    24f6:	9a 81       	ldd	r25, Y+2	; 0x02
    24f8:	ab 81       	ldd	r26, Y+3	; 0x03
    24fa:	bc 81       	ldd	r27, Y+4	; 0x04
    24fc:	82 2b       	or	r24, r18
    24fe:	93 2b       	or	r25, r19
    2500:	a4 2b       	or	r26, r20
    2502:	b5 2b       	or	r27, r21
    2504:	89 83       	std	Y+1, r24	; 0x01
    2506:	9a 83       	std	Y+2, r25	; 0x02
    2508:	ab 83       	std	Y+3, r26	; 0x03
    250a:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>4) & 1))) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    250c:	8f 81       	ldd	r24, Y+7	; 0x07
    250e:	48 2f       	mov	r20, r24
    2510:	50 e0       	ldi	r21, 0x00	; 0
    2512:	ca 01       	movw	r24, r20
    2514:	88 0f       	add	r24, r24
    2516:	99 1f       	adc	r25, r25
    2518:	9c 01       	movw	r18, r24
    251a:	22 0f       	add	r18, r18
    251c:	33 1f       	adc	r19, r19
    251e:	22 0f       	add	r18, r18
    2520:	33 1f       	adc	r19, r19
    2522:	22 0f       	add	r18, r18
    2524:	33 1f       	adc	r19, r19
    2526:	82 0f       	add	r24, r18
    2528:	93 1f       	adc	r25, r19
    252a:	84 0f       	add	r24, r20
    252c:	95 1f       	adc	r25, r21
    252e:	fc 01       	movw	r30, r24
    2530:	eb 57       	subi	r30, 0x7B	; 123
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	80 81       	ld	r24, Z
    2536:	8f 87       	std	Y+15, r24	; 0x0f
    2538:	8f 81       	ldd	r24, Y+7	; 0x07
    253a:	48 2f       	mov	r20, r24
    253c:	50 e0       	ldi	r21, 0x00	; 0
    253e:	ca 01       	movw	r24, r20
    2540:	88 0f       	add	r24, r24
    2542:	99 1f       	adc	r25, r25
    2544:	9c 01       	movw	r18, r24
    2546:	22 0f       	add	r18, r18
    2548:	33 1f       	adc	r19, r19
    254a:	22 0f       	add	r18, r18
    254c:	33 1f       	adc	r19, r19
    254e:	22 0f       	add	r18, r18
    2550:	33 1f       	adc	r19, r19
    2552:	82 0f       	add	r24, r18
    2554:	93 1f       	adc	r25, r19
    2556:	84 0f       	add	r24, r20
    2558:	95 1f       	adc	r25, r21
    255a:	fc 01       	movw	r30, r24
    255c:	ea 57       	subi	r30, 0x7A	; 122
    255e:	ff 4f       	sbci	r31, 0xFF	; 255
    2560:	80 81       	ld	r24, Z
    2562:	8e 87       	std	Y+14, r24	; 0x0e
    2564:	88 85       	ldd	r24, Y+8	; 0x08
    2566:	88 2f       	mov	r24, r24
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	fc 01       	movw	r30, r24
    256c:	ef 55       	subi	r30, 0x5F	; 95
    256e:	ff 4f       	sbci	r31, 0xFF	; 255
    2570:	80 81       	ld	r24, Z
    2572:	82 95       	swap	r24
    2574:	86 95       	lsr	r24
    2576:	87 70       	andi	r24, 0x07	; 7
    2578:	88 2f       	mov	r24, r24
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	81 70       	andi	r24, 0x01	; 1
    257e:	90 70       	andi	r25, 0x00	; 0
    2580:	1d 86       	std	Y+13, r1	; 0x0d
    2582:	00 97       	sbiw	r24, 0x00	; 0
    2584:	11 f4       	brne	.+4      	; 0x258a <SSDLT_enuDisplayNum+0x910>
    2586:	81 e0       	ldi	r24, 0x01	; 1
    2588:	8d 87       	std	Y+13, r24	; 0x0d
    258a:	8f 85       	ldd	r24, Y+15	; 0x0f
    258c:	6e 85       	ldd	r22, Y+14	; 0x0e
    258e:	4d 85       	ldd	r20, Y+13	; 0x0d
    2590:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2594:	88 2f       	mov	r24, r24
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	a0 e0       	ldi	r26, 0x00	; 0
    259a:	b0 e0       	ldi	r27, 0x00	; 0
    259c:	9c 01       	movw	r18, r24
    259e:	ad 01       	movw	r20, r26
    25a0:	01 2e       	mov	r0, r17
    25a2:	1f e0       	ldi	r17, 0x0F	; 15
    25a4:	22 0f       	add	r18, r18
    25a6:	33 1f       	adc	r19, r19
    25a8:	44 1f       	adc	r20, r20
    25aa:	55 1f       	adc	r21, r21
    25ac:	1a 95       	dec	r17
    25ae:	d1 f7       	brne	.-12     	; 0x25a4 <SSDLT_enuDisplayNum+0x92a>
    25b0:	10 2d       	mov	r17, r0
    25b2:	89 81       	ldd	r24, Y+1	; 0x01
    25b4:	9a 81       	ldd	r25, Y+2	; 0x02
    25b6:	ab 81       	ldd	r26, Y+3	; 0x03
    25b8:	bc 81       	ldd	r27, Y+4	; 0x04
    25ba:	82 2b       	or	r24, r18
    25bc:	93 2b       	or	r25, r19
    25be:	a4 2b       	or	r26, r20
    25c0:	b5 2b       	or	r27, r21
    25c2:	89 83       	std	Y+1, r24	; 0x01
    25c4:	9a 83       	std	Y+2, r25	; 0x02
    25c6:	ab 83       	std	Y+3, r26	; 0x03
    25c8:	bc 83       	std	Y+4, r27	; 0x04
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>5) & 1))) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    25ca:	8f 81       	ldd	r24, Y+7	; 0x07
    25cc:	48 2f       	mov	r20, r24
    25ce:	50 e0       	ldi	r21, 0x00	; 0
    25d0:	ca 01       	movw	r24, r20
    25d2:	88 0f       	add	r24, r24
    25d4:	99 1f       	adc	r25, r25
    25d6:	9c 01       	movw	r18, r24
    25d8:	22 0f       	add	r18, r18
    25da:	33 1f       	adc	r19, r19
    25dc:	22 0f       	add	r18, r18
    25de:	33 1f       	adc	r19, r19
    25e0:	22 0f       	add	r18, r18
    25e2:	33 1f       	adc	r19, r19
    25e4:	82 0f       	add	r24, r18
    25e6:	93 1f       	adc	r25, r19
    25e8:	84 0f       	add	r24, r20
    25ea:	95 1f       	adc	r25, r21
    25ec:	fc 01       	movw	r30, r24
    25ee:	e9 57       	subi	r30, 0x79	; 121
    25f0:	ff 4f       	sbci	r31, 0xFF	; 255
    25f2:	80 81       	ld	r24, Z
    25f4:	8c 87       	std	Y+12, r24	; 0x0c
    25f6:	8f 81       	ldd	r24, Y+7	; 0x07
    25f8:	48 2f       	mov	r20, r24
    25fa:	50 e0       	ldi	r21, 0x00	; 0
    25fc:	ca 01       	movw	r24, r20
    25fe:	88 0f       	add	r24, r24
    2600:	99 1f       	adc	r25, r25
    2602:	9c 01       	movw	r18, r24
    2604:	22 0f       	add	r18, r18
    2606:	33 1f       	adc	r19, r19
    2608:	22 0f       	add	r18, r18
    260a:	33 1f       	adc	r19, r19
    260c:	22 0f       	add	r18, r18
    260e:	33 1f       	adc	r19, r19
    2610:	82 0f       	add	r24, r18
    2612:	93 1f       	adc	r25, r19
    2614:	84 0f       	add	r24, r20
    2616:	95 1f       	adc	r25, r21
    2618:	fc 01       	movw	r30, r24
    261a:	e8 57       	subi	r30, 0x78	; 120
    261c:	ff 4f       	sbci	r31, 0xFF	; 255
    261e:	80 81       	ld	r24, Z
    2620:	8b 87       	std	Y+11, r24	; 0x0b
    2622:	88 85       	ldd	r24, Y+8	; 0x08
    2624:	88 2f       	mov	r24, r24
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	fc 01       	movw	r30, r24
    262a:	ef 55       	subi	r30, 0x5F	; 95
    262c:	ff 4f       	sbci	r31, 0xFF	; 255
    262e:	80 81       	ld	r24, Z
    2630:	82 95       	swap	r24
    2632:	86 95       	lsr	r24
    2634:	86 95       	lsr	r24
    2636:	83 70       	andi	r24, 0x03	; 3
    2638:	88 2f       	mov	r24, r24
    263a:	90 e0       	ldi	r25, 0x00	; 0
    263c:	81 70       	andi	r24, 0x01	; 1
    263e:	90 70       	andi	r25, 0x00	; 0
    2640:	1a 86       	std	Y+10, r1	; 0x0a
    2642:	00 97       	sbiw	r24, 0x00	; 0
    2644:	11 f4       	brne	.+4      	; 0x264a <SSDLT_enuDisplayNum+0x9d0>
    2646:	81 e0       	ldi	r24, 0x01	; 1
    2648:	8a 87       	std	Y+10, r24	; 0x0a
    264a:	8c 85       	ldd	r24, Y+12	; 0x0c
    264c:	6b 85       	ldd	r22, Y+11	; 0x0b
    264e:	4a 85       	ldd	r20, Y+10	; 0x0a
    2650:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2654:	88 2f       	mov	r24, r24
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	a0 e0       	ldi	r26, 0x00	; 0
    265a:	b0 e0       	ldi	r27, 0x00	; 0
    265c:	9c 01       	movw	r18, r24
    265e:	ad 01       	movw	r20, r26
    2660:	01 2e       	mov	r0, r17
    2662:	12 e1       	ldi	r17, 0x12	; 18
    2664:	22 0f       	add	r18, r18
    2666:	33 1f       	adc	r19, r19
    2668:	44 1f       	adc	r20, r20
    266a:	55 1f       	adc	r21, r21
    266c:	1a 95       	dec	r17
    266e:	d1 f7       	brne	.-12     	; 0x2664 <SSDLT_enuDisplayNum+0x9ea>
    2670:	10 2d       	mov	r17, r0
    2672:	89 81       	ldd	r24, Y+1	; 0x01
    2674:	9a 81       	ldd	r25, Y+2	; 0x02
    2676:	ab 81       	ldd	r26, Y+3	; 0x03
    2678:	bc 81       	ldd	r27, Y+4	; 0x04
    267a:	82 2b       	or	r24, r18
    267c:	93 2b       	or	r25, r19
    267e:	a4 2b       	or	r26, r20
    2680:	b5 2b       	or	r27, r21
    2682:	89 83       	std	Y+1, r24	; 0x01
    2684:	9a 83       	std	Y+2, r25	; 0x02
    2686:	ab 83       	std	Y+3, r26	; 0x03
    2688:	bc 83       	std	Y+4, r27	; 0x04
    268a:	05 c0       	rjmp	.+10     	; 0x2696 <SSDLT_enuDisplayNum+0xa1c>
							   SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
							   (!((SSDLT_Au8ComCathodeNumDisplay[Copy_u8Number]>>6) & 1))) << 18));
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    268c:	83 e0       	ldi	r24, 0x03	; 3
    268e:	8e 83       	std	Y+6, r24	; 0x06
    2690:	02 c0       	rjmp	.+4      	; 0x2696 <SSDLT_enuDisplayNum+0xa1c>
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2692:	83 e0       	ldi	r24, 0x03	; 3
    2694:	8e 83       	std	Y+6, r24	; 0x06
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    2696:	1d 82       	std	Y+5, r1	; 0x05
    2698:	1e c0       	rjmp	.+60     	; 0x26d6 <SSDLT_enuDisplayNum+0xa5c>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    269a:	8d 81       	ldd	r24, Y+5	; 0x05
    269c:	28 2f       	mov	r18, r24
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	89 81       	ldd	r24, Y+1	; 0x01
    26a2:	9a 81       	ldd	r25, Y+2	; 0x02
    26a4:	ab 81       	ldd	r26, Y+3	; 0x03
    26a6:	bc 81       	ldd	r27, Y+4	; 0x04
    26a8:	02 2e       	mov	r0, r18
    26aa:	04 c0       	rjmp	.+8      	; 0x26b4 <SSDLT_enuDisplayNum+0xa3a>
    26ac:	b6 95       	lsr	r27
    26ae:	a7 95       	ror	r26
    26b0:	97 95       	ror	r25
    26b2:	87 95       	ror	r24
    26b4:	0a 94       	dec	r0
    26b6:	d2 f7       	brpl	.-12     	; 0x26ac <SSDLT_enuDisplayNum+0xa32>
    26b8:	87 70       	andi	r24, 0x07	; 7
    26ba:	90 70       	andi	r25, 0x00	; 0
    26bc:	a0 70       	andi	r26, 0x00	; 0
    26be:	b0 70       	andi	r27, 0x00	; 0
    26c0:	81 30       	cpi	r24, 0x01	; 1
    26c2:	91 05       	cpc	r25, r1
    26c4:	a1 05       	cpc	r26, r1
    26c6:	b1 05       	cpc	r27, r1
    26c8:	19 f0       	breq	.+6      	; 0x26d0 <SSDLT_enuDisplayNum+0xa56>
		{
			return Local_enuErrorState;
    26ca:	8e 81       	ldd	r24, Y+6	; 0x06
    26cc:	89 87       	std	Y+9, r24	; 0x09
    26ce:	0a c0       	rjmp	.+20     	; 0x26e4 <SSDLT_enuDisplayNum+0xa6a>
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    26d0:	8d 81       	ldd	r24, Y+5	; 0x05
    26d2:	8d 5f       	subi	r24, 0xFD	; 253
    26d4:	8d 83       	std	Y+5, r24	; 0x05
    26d6:	8d 81       	ldd	r24, Y+5	; 0x05
    26d8:	85 31       	cpi	r24, 0x15	; 21
    26da:	f8 f2       	brcs	.-66     	; 0x269a <SSDLT_enuDisplayNum+0xa20>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    26e0:	8e 81       	ldd	r24, Y+6	; 0x06
    26e2:	89 87       	std	Y+9, r24	; 0x09
    26e4:	89 85       	ldd	r24, Y+9	; 0x09
}
    26e6:	6e 96       	adiw	r28, 0x1e	; 30
    26e8:	0f b6       	in	r0, 0x3f	; 63
    26ea:	f8 94       	cli
    26ec:	de bf       	out	0x3e, r29	; 62
    26ee:	0f be       	out	0x3f, r0	; 63
    26f0:	cd bf       	out	0x3d, r28	; 61
    26f2:	cf 91       	pop	r28
    26f4:	df 91       	pop	r29
    26f6:	08 95       	ret

000026f8 <SSDLT_enuEnableCommon>:

ES_t SSDLT_enuEnableCommon(u8 Copy_u8SegID)
{
    26f8:	df 93       	push	r29
    26fa:	cf 93       	push	r28
    26fc:	00 d0       	rcall	.+0      	; 0x26fe <SSDLT_enuEnableCommon+0x6>
    26fe:	cd b7       	in	r28, 0x3d	; 61
    2700:	de b7       	in	r29, 0x3e	; 62
    2702:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2704:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2706:	8a 81       	ldd	r24, Y+2	; 0x02
    2708:	82 30       	cpi	r24, 0x02	; 2
    270a:	08 f0       	brcs	.+2      	; 0x270e <SSDLT_enuEnableCommon+0x16>
    270c:	c2 c0       	rjmp	.+388    	; 0x2892 <SSDLT_enuEnableCommon+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port != NOT_CONNECTED ||
    270e:	8a 81       	ldd	r24, Y+2	; 0x02
    2710:	48 2f       	mov	r20, r24
    2712:	50 e0       	ldi	r21, 0x00	; 0
    2714:	ca 01       	movw	r24, r20
    2716:	88 0f       	add	r24, r24
    2718:	99 1f       	adc	r25, r25
    271a:	9c 01       	movw	r18, r24
    271c:	22 0f       	add	r18, r18
    271e:	33 1f       	adc	r19, r19
    2720:	22 0f       	add	r18, r18
    2722:	33 1f       	adc	r19, r19
    2724:	22 0f       	add	r18, r18
    2726:	33 1f       	adc	r19, r19
    2728:	82 0f       	add	r24, r18
    272a:	93 1f       	adc	r25, r19
    272c:	84 0f       	add	r24, r20
    272e:	95 1f       	adc	r25, r21
    2730:	fc 01       	movw	r30, r24
    2732:	e7 57       	subi	r30, 0x77	; 119
    2734:	ff 4f       	sbci	r31, 0xFF	; 255
    2736:	80 81       	ld	r24, Z
    2738:	82 30       	cpi	r24, 0x02	; 2
    273a:	c1 f4       	brne	.+48     	; 0x276c <SSDLT_enuEnableCommon+0x74>
    273c:	8a 81       	ldd	r24, Y+2	; 0x02
    273e:	48 2f       	mov	r20, r24
    2740:	50 e0       	ldi	r21, 0x00	; 0
    2742:	ca 01       	movw	r24, r20
    2744:	88 0f       	add	r24, r24
    2746:	99 1f       	adc	r25, r25
    2748:	9c 01       	movw	r18, r24
    274a:	22 0f       	add	r18, r18
    274c:	33 1f       	adc	r19, r19
    274e:	22 0f       	add	r18, r18
    2750:	33 1f       	adc	r19, r19
    2752:	22 0f       	add	r18, r18
    2754:	33 1f       	adc	r19, r19
    2756:	82 0f       	add	r24, r18
    2758:	93 1f       	adc	r25, r19
    275a:	84 0f       	add	r24, r20
    275c:	95 1f       	adc	r25, r21
    275e:	fc 01       	movw	r30, r24
    2760:	e6 57       	subi	r30, 0x76	; 118
    2762:	ff 4f       	sbci	r31, 0xFF	; 255
    2764:	80 81       	ld	r24, Z
    2766:	82 30       	cpi	r24, 0x02	; 2
    2768:	09 f4       	brne	.+2      	; 0x276c <SSDLT_enuEnableCommon+0x74>
    276a:	95 c0       	rjmp	.+298    	; 0x2896 <SSDLT_enuEnableCommon+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    276c:	8a 81       	ldd	r24, Y+2	; 0x02
    276e:	48 2f       	mov	r20, r24
    2770:	50 e0       	ldi	r21, 0x00	; 0
    2772:	ca 01       	movw	r24, r20
    2774:	88 0f       	add	r24, r24
    2776:	99 1f       	adc	r25, r25
    2778:	9c 01       	movw	r18, r24
    277a:	22 0f       	add	r18, r18
    277c:	33 1f       	adc	r19, r19
    277e:	22 0f       	add	r18, r18
    2780:	33 1f       	adc	r19, r19
    2782:	22 0f       	add	r18, r18
    2784:	33 1f       	adc	r19, r19
    2786:	82 0f       	add	r24, r18
    2788:	93 1f       	adc	r25, r19
    278a:	84 0f       	add	r24, r20
    278c:	95 1f       	adc	r25, r21
    278e:	fc 01       	movw	r30, r24
    2790:	e3 57       	subi	r30, 0x73	; 115
    2792:	ff 4f       	sbci	r31, 0xFF	; 255
    2794:	80 81       	ld	r24, Z
    2796:	81 30       	cpi	r24, 0x01	; 1
    2798:	89 f5       	brne	.+98     	; 0x27fc <SSDLT_enuEnableCommon+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    279a:	8a 81       	ldd	r24, Y+2	; 0x02
    279c:	48 2f       	mov	r20, r24
    279e:	50 e0       	ldi	r21, 0x00	; 0
    27a0:	ca 01       	movw	r24, r20
    27a2:	88 0f       	add	r24, r24
    27a4:	99 1f       	adc	r25, r25
    27a6:	9c 01       	movw	r18, r24
    27a8:	22 0f       	add	r18, r18
    27aa:	33 1f       	adc	r19, r19
    27ac:	22 0f       	add	r18, r18
    27ae:	33 1f       	adc	r19, r19
    27b0:	22 0f       	add	r18, r18
    27b2:	33 1f       	adc	r19, r19
    27b4:	82 0f       	add	r24, r18
    27b6:	93 1f       	adc	r25, r19
    27b8:	84 0f       	add	r24, r20
    27ba:	95 1f       	adc	r25, r21
    27bc:	fc 01       	movw	r30, r24
    27be:	e7 57       	subi	r30, 0x77	; 119
    27c0:	ff 4f       	sbci	r31, 0xFF	; 255
    27c2:	60 81       	ld	r22, Z
    27c4:	8a 81       	ldd	r24, Y+2	; 0x02
    27c6:	48 2f       	mov	r20, r24
    27c8:	50 e0       	ldi	r21, 0x00	; 0
    27ca:	ca 01       	movw	r24, r20
    27cc:	88 0f       	add	r24, r24
    27ce:	99 1f       	adc	r25, r25
    27d0:	9c 01       	movw	r18, r24
    27d2:	22 0f       	add	r18, r18
    27d4:	33 1f       	adc	r19, r19
    27d6:	22 0f       	add	r18, r18
    27d8:	33 1f       	adc	r19, r19
    27da:	22 0f       	add	r18, r18
    27dc:	33 1f       	adc	r19, r19
    27de:	82 0f       	add	r24, r18
    27e0:	93 1f       	adc	r25, r19
    27e2:	84 0f       	add	r24, r20
    27e4:	95 1f       	adc	r25, r21
    27e6:	fc 01       	movw	r30, r24
    27e8:	e6 57       	subi	r30, 0x76	; 118
    27ea:	ff 4f       	sbci	r31, 0xFF	; 255
    27ec:	90 81       	ld	r25, Z
    27ee:	86 2f       	mov	r24, r22
    27f0:	69 2f       	mov	r22, r25
    27f2:	40 e0       	ldi	r20, 0x00	; 0
    27f4:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    27f8:	89 83       	std	Y+1, r24	; 0x01
    27fa:	4d c0       	rjmp	.+154    	; 0x2896 <SSDLT_enuEnableCommon+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8LOW);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    27fc:	8a 81       	ldd	r24, Y+2	; 0x02
    27fe:	48 2f       	mov	r20, r24
    2800:	50 e0       	ldi	r21, 0x00	; 0
    2802:	ca 01       	movw	r24, r20
    2804:	88 0f       	add	r24, r24
    2806:	99 1f       	adc	r25, r25
    2808:	9c 01       	movw	r18, r24
    280a:	22 0f       	add	r18, r18
    280c:	33 1f       	adc	r19, r19
    280e:	22 0f       	add	r18, r18
    2810:	33 1f       	adc	r19, r19
    2812:	22 0f       	add	r18, r18
    2814:	33 1f       	adc	r19, r19
    2816:	82 0f       	add	r24, r18
    2818:	93 1f       	adc	r25, r19
    281a:	84 0f       	add	r24, r20
    281c:	95 1f       	adc	r25, r21
    281e:	fc 01       	movw	r30, r24
    2820:	e3 57       	subi	r30, 0x73	; 115
    2822:	ff 4f       	sbci	r31, 0xFF	; 255
    2824:	80 81       	ld	r24, Z
    2826:	88 23       	and	r24, r24
    2828:	89 f5       	brne	.+98     	; 0x288c <SSDLT_enuEnableCommon+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    282a:	8a 81       	ldd	r24, Y+2	; 0x02
    282c:	48 2f       	mov	r20, r24
    282e:	50 e0       	ldi	r21, 0x00	; 0
    2830:	ca 01       	movw	r24, r20
    2832:	88 0f       	add	r24, r24
    2834:	99 1f       	adc	r25, r25
    2836:	9c 01       	movw	r18, r24
    2838:	22 0f       	add	r18, r18
    283a:	33 1f       	adc	r19, r19
    283c:	22 0f       	add	r18, r18
    283e:	33 1f       	adc	r19, r19
    2840:	22 0f       	add	r18, r18
    2842:	33 1f       	adc	r19, r19
    2844:	82 0f       	add	r24, r18
    2846:	93 1f       	adc	r25, r19
    2848:	84 0f       	add	r24, r20
    284a:	95 1f       	adc	r25, r21
    284c:	fc 01       	movw	r30, r24
    284e:	e7 57       	subi	r30, 0x77	; 119
    2850:	ff 4f       	sbci	r31, 0xFF	; 255
    2852:	60 81       	ld	r22, Z
    2854:	8a 81       	ldd	r24, Y+2	; 0x02
    2856:	48 2f       	mov	r20, r24
    2858:	50 e0       	ldi	r21, 0x00	; 0
    285a:	ca 01       	movw	r24, r20
    285c:	88 0f       	add	r24, r24
    285e:	99 1f       	adc	r25, r25
    2860:	9c 01       	movw	r18, r24
    2862:	22 0f       	add	r18, r18
    2864:	33 1f       	adc	r19, r19
    2866:	22 0f       	add	r18, r18
    2868:	33 1f       	adc	r19, r19
    286a:	22 0f       	add	r18, r18
    286c:	33 1f       	adc	r19, r19
    286e:	82 0f       	add	r24, r18
    2870:	93 1f       	adc	r25, r19
    2872:	84 0f       	add	r24, r20
    2874:	95 1f       	adc	r25, r21
    2876:	fc 01       	movw	r30, r24
    2878:	e6 57       	subi	r30, 0x76	; 118
    287a:	ff 4f       	sbci	r31, 0xFF	; 255
    287c:	90 81       	ld	r25, Z
    287e:	86 2f       	mov	r24, r22
    2880:	69 2f       	mov	r22, r25
    2882:	41 e0       	ldi	r20, 0x01	; 1
    2884:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2888:	89 83       	std	Y+1, r24	; 0x01
    288a:	05 c0       	rjmp	.+10     	; 0x2896 <SSDLT_enuEnableCommon+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8HIGH);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    288c:	83 e0       	ldi	r24, 0x03	; 3
    288e:	89 83       	std	Y+1, r24	; 0x01
    2890:	02 c0       	rjmp	.+4      	; 0x2896 <SSDLT_enuEnableCommon+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2892:	83 e0       	ldi	r24, 0x03	; 3
    2894:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2896:	89 81       	ldd	r24, Y+1	; 0x01
}
    2898:	0f 90       	pop	r0
    289a:	0f 90       	pop	r0
    289c:	cf 91       	pop	r28
    289e:	df 91       	pop	r29
    28a0:	08 95       	ret

000028a2 <SSDLT_enuDisableCommon>:

ES_t SSDLT_enuDisableCommon(u8 Copy_u8SegID)
{
    28a2:	df 93       	push	r29
    28a4:	cf 93       	push	r28
    28a6:	00 d0       	rcall	.+0      	; 0x28a8 <SSDLT_enuDisableCommon+0x6>
    28a8:	cd b7       	in	r28, 0x3d	; 61
    28aa:	de b7       	in	r29, 0x3e	; 62
    28ac:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    28ae:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    28b0:	8a 81       	ldd	r24, Y+2	; 0x02
    28b2:	82 30       	cpi	r24, 0x02	; 2
    28b4:	08 f0       	brcs	.+2      	; 0x28b8 <SSDLT_enuDisableCommon+0x16>
    28b6:	c2 c0       	rjmp	.+388    	; 0x2a3c <SSDLT_enuDisableCommon+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port != NOT_CONNECTED ||
    28b8:	8a 81       	ldd	r24, Y+2	; 0x02
    28ba:	48 2f       	mov	r20, r24
    28bc:	50 e0       	ldi	r21, 0x00	; 0
    28be:	ca 01       	movw	r24, r20
    28c0:	88 0f       	add	r24, r24
    28c2:	99 1f       	adc	r25, r25
    28c4:	9c 01       	movw	r18, r24
    28c6:	22 0f       	add	r18, r18
    28c8:	33 1f       	adc	r19, r19
    28ca:	22 0f       	add	r18, r18
    28cc:	33 1f       	adc	r19, r19
    28ce:	22 0f       	add	r18, r18
    28d0:	33 1f       	adc	r19, r19
    28d2:	82 0f       	add	r24, r18
    28d4:	93 1f       	adc	r25, r19
    28d6:	84 0f       	add	r24, r20
    28d8:	95 1f       	adc	r25, r21
    28da:	fc 01       	movw	r30, r24
    28dc:	e7 57       	subi	r30, 0x77	; 119
    28de:	ff 4f       	sbci	r31, 0xFF	; 255
    28e0:	80 81       	ld	r24, Z
    28e2:	82 30       	cpi	r24, 0x02	; 2
    28e4:	c1 f4       	brne	.+48     	; 0x2916 <SSDLT_enuDisableCommon+0x74>
    28e6:	8a 81       	ldd	r24, Y+2	; 0x02
    28e8:	48 2f       	mov	r20, r24
    28ea:	50 e0       	ldi	r21, 0x00	; 0
    28ec:	ca 01       	movw	r24, r20
    28ee:	88 0f       	add	r24, r24
    28f0:	99 1f       	adc	r25, r25
    28f2:	9c 01       	movw	r18, r24
    28f4:	22 0f       	add	r18, r18
    28f6:	33 1f       	adc	r19, r19
    28f8:	22 0f       	add	r18, r18
    28fa:	33 1f       	adc	r19, r19
    28fc:	22 0f       	add	r18, r18
    28fe:	33 1f       	adc	r19, r19
    2900:	82 0f       	add	r24, r18
    2902:	93 1f       	adc	r25, r19
    2904:	84 0f       	add	r24, r20
    2906:	95 1f       	adc	r25, r21
    2908:	fc 01       	movw	r30, r24
    290a:	e6 57       	subi	r30, 0x76	; 118
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	80 81       	ld	r24, Z
    2910:	82 30       	cpi	r24, 0x02	; 2
    2912:	09 f4       	brne	.+2      	; 0x2916 <SSDLT_enuDisableCommon+0x74>
    2914:	95 c0       	rjmp	.+298    	; 0x2a40 <SSDLT_enuDisableCommon+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2916:	8a 81       	ldd	r24, Y+2	; 0x02
    2918:	48 2f       	mov	r20, r24
    291a:	50 e0       	ldi	r21, 0x00	; 0
    291c:	ca 01       	movw	r24, r20
    291e:	88 0f       	add	r24, r24
    2920:	99 1f       	adc	r25, r25
    2922:	9c 01       	movw	r18, r24
    2924:	22 0f       	add	r18, r18
    2926:	33 1f       	adc	r19, r19
    2928:	22 0f       	add	r18, r18
    292a:	33 1f       	adc	r19, r19
    292c:	22 0f       	add	r18, r18
    292e:	33 1f       	adc	r19, r19
    2930:	82 0f       	add	r24, r18
    2932:	93 1f       	adc	r25, r19
    2934:	84 0f       	add	r24, r20
    2936:	95 1f       	adc	r25, r21
    2938:	fc 01       	movw	r30, r24
    293a:	e3 57       	subi	r30, 0x73	; 115
    293c:	ff 4f       	sbci	r31, 0xFF	; 255
    293e:	80 81       	ld	r24, Z
    2940:	81 30       	cpi	r24, 0x01	; 1
    2942:	89 f5       	brne	.+98     	; 0x29a6 <SSDLT_enuDisableCommon+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    2944:	8a 81       	ldd	r24, Y+2	; 0x02
    2946:	48 2f       	mov	r20, r24
    2948:	50 e0       	ldi	r21, 0x00	; 0
    294a:	ca 01       	movw	r24, r20
    294c:	88 0f       	add	r24, r24
    294e:	99 1f       	adc	r25, r25
    2950:	9c 01       	movw	r18, r24
    2952:	22 0f       	add	r18, r18
    2954:	33 1f       	adc	r19, r19
    2956:	22 0f       	add	r18, r18
    2958:	33 1f       	adc	r19, r19
    295a:	22 0f       	add	r18, r18
    295c:	33 1f       	adc	r19, r19
    295e:	82 0f       	add	r24, r18
    2960:	93 1f       	adc	r25, r19
    2962:	84 0f       	add	r24, r20
    2964:	95 1f       	adc	r25, r21
    2966:	fc 01       	movw	r30, r24
    2968:	e7 57       	subi	r30, 0x77	; 119
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	60 81       	ld	r22, Z
    296e:	8a 81       	ldd	r24, Y+2	; 0x02
    2970:	48 2f       	mov	r20, r24
    2972:	50 e0       	ldi	r21, 0x00	; 0
    2974:	ca 01       	movw	r24, r20
    2976:	88 0f       	add	r24, r24
    2978:	99 1f       	adc	r25, r25
    297a:	9c 01       	movw	r18, r24
    297c:	22 0f       	add	r18, r18
    297e:	33 1f       	adc	r19, r19
    2980:	22 0f       	add	r18, r18
    2982:	33 1f       	adc	r19, r19
    2984:	22 0f       	add	r18, r18
    2986:	33 1f       	adc	r19, r19
    2988:	82 0f       	add	r24, r18
    298a:	93 1f       	adc	r25, r19
    298c:	84 0f       	add	r24, r20
    298e:	95 1f       	adc	r25, r21
    2990:	fc 01       	movw	r30, r24
    2992:	e6 57       	subi	r30, 0x76	; 118
    2994:	ff 4f       	sbci	r31, 0xFF	; 255
    2996:	90 81       	ld	r25, Z
    2998:	86 2f       	mov	r24, r22
    299a:	69 2f       	mov	r22, r25
    299c:	41 e0       	ldi	r20, 0x01	; 1
    299e:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    29a2:	89 83       	std	Y+1, r24	; 0x01
    29a4:	4d c0       	rjmp	.+154    	; 0x2a40 <SSDLT_enuDisableCommon+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8HIGH);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    29a6:	8a 81       	ldd	r24, Y+2	; 0x02
    29a8:	48 2f       	mov	r20, r24
    29aa:	50 e0       	ldi	r21, 0x00	; 0
    29ac:	ca 01       	movw	r24, r20
    29ae:	88 0f       	add	r24, r24
    29b0:	99 1f       	adc	r25, r25
    29b2:	9c 01       	movw	r18, r24
    29b4:	22 0f       	add	r18, r18
    29b6:	33 1f       	adc	r19, r19
    29b8:	22 0f       	add	r18, r18
    29ba:	33 1f       	adc	r19, r19
    29bc:	22 0f       	add	r18, r18
    29be:	33 1f       	adc	r19, r19
    29c0:	82 0f       	add	r24, r18
    29c2:	93 1f       	adc	r25, r19
    29c4:	84 0f       	add	r24, r20
    29c6:	95 1f       	adc	r25, r21
    29c8:	fc 01       	movw	r30, r24
    29ca:	e3 57       	subi	r30, 0x73	; 115
    29cc:	ff 4f       	sbci	r31, 0xFF	; 255
    29ce:	80 81       	ld	r24, Z
    29d0:	88 23       	and	r24, r24
    29d2:	89 f5       	brne	.+98     	; 0x2a36 <SSDLT_enuDisableCommon+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Port,
    29d4:	8a 81       	ldd	r24, Y+2	; 0x02
    29d6:	48 2f       	mov	r20, r24
    29d8:	50 e0       	ldi	r21, 0x00	; 0
    29da:	ca 01       	movw	r24, r20
    29dc:	88 0f       	add	r24, r24
    29de:	99 1f       	adc	r25, r25
    29e0:	9c 01       	movw	r18, r24
    29e2:	22 0f       	add	r18, r18
    29e4:	33 1f       	adc	r19, r19
    29e6:	22 0f       	add	r18, r18
    29e8:	33 1f       	adc	r19, r19
    29ea:	22 0f       	add	r18, r18
    29ec:	33 1f       	adc	r19, r19
    29ee:	82 0f       	add	r24, r18
    29f0:	93 1f       	adc	r25, r19
    29f2:	84 0f       	add	r24, r20
    29f4:	95 1f       	adc	r25, r21
    29f6:	fc 01       	movw	r30, r24
    29f8:	e7 57       	subi	r30, 0x77	; 119
    29fa:	ff 4f       	sbci	r31, 0xFF	; 255
    29fc:	60 81       	ld	r22, Z
    29fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2a00:	48 2f       	mov	r20, r24
    2a02:	50 e0       	ldi	r21, 0x00	; 0
    2a04:	ca 01       	movw	r24, r20
    2a06:	88 0f       	add	r24, r24
    2a08:	99 1f       	adc	r25, r25
    2a0a:	9c 01       	movw	r18, r24
    2a0c:	22 0f       	add	r18, r18
    2a0e:	33 1f       	adc	r19, r19
    2a10:	22 0f       	add	r18, r18
    2a12:	33 1f       	adc	r19, r19
    2a14:	22 0f       	add	r18, r18
    2a16:	33 1f       	adc	r19, r19
    2a18:	82 0f       	add	r24, r18
    2a1a:	93 1f       	adc	r25, r19
    2a1c:	84 0f       	add	r24, r20
    2a1e:	95 1f       	adc	r25, r21
    2a20:	fc 01       	movw	r30, r24
    2a22:	e6 57       	subi	r30, 0x76	; 118
    2a24:	ff 4f       	sbci	r31, 0xFF	; 255
    2a26:	90 81       	ld	r25, Z
    2a28:	86 2f       	mov	r24, r22
    2a2a:	69 2f       	mov	r22, r25
    2a2c:	40 e0       	ldi	r20, 0x00	; 0
    2a2e:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2a32:	89 83       	std	Y+1, r24	; 0x01
    2a34:	05 c0       	rjmp	.+10     	; 0x2a40 <SSDLT_enuDisableCommon+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CMN_Pin, DIO_u8LOW);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2a36:	83 e0       	ldi	r24, 0x03	; 3
    2a38:	89 83       	std	Y+1, r24	; 0x01
    2a3a:	02 c0       	rjmp	.+4      	; 0x2a40 <SSDLT_enuDisableCommon+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2a3c:	83 e0       	ldi	r24, 0x03	; 3
    2a3e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2a40:	89 81       	ldd	r24, Y+1	; 0x01
}
    2a42:	0f 90       	pop	r0
    2a44:	0f 90       	pop	r0
    2a46:	cf 91       	pop	r28
    2a48:	df 91       	pop	r29
    2a4a:	08 95       	ret

00002a4c <SSDLT_enuEnableDot>:

ES_t SSDLT_enuEnableDot(u8 Copy_u8SegID)
{
    2a4c:	df 93       	push	r29
    2a4e:	cf 93       	push	r28
    2a50:	00 d0       	rcall	.+0      	; 0x2a52 <SSDLT_enuEnableDot+0x6>
    2a52:	cd b7       	in	r28, 0x3d	; 61
    2a54:	de b7       	in	r29, 0x3e	; 62
    2a56:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2a58:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2a5a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a5c:	82 30       	cpi	r24, 0x02	; 2
    2a5e:	08 f0       	brcs	.+2      	; 0x2a62 <SSDLT_enuEnableDot+0x16>
    2a60:	c2 c0       	rjmp	.+388    	; 0x2be6 <SSDLT_enuEnableDot+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    2a62:	8a 81       	ldd	r24, Y+2	; 0x02
    2a64:	48 2f       	mov	r20, r24
    2a66:	50 e0       	ldi	r21, 0x00	; 0
    2a68:	ca 01       	movw	r24, r20
    2a6a:	88 0f       	add	r24, r24
    2a6c:	99 1f       	adc	r25, r25
    2a6e:	9c 01       	movw	r18, r24
    2a70:	22 0f       	add	r18, r18
    2a72:	33 1f       	adc	r19, r19
    2a74:	22 0f       	add	r18, r18
    2a76:	33 1f       	adc	r19, r19
    2a78:	22 0f       	add	r18, r18
    2a7a:	33 1f       	adc	r19, r19
    2a7c:	82 0f       	add	r24, r18
    2a7e:	93 1f       	adc	r25, r19
    2a80:	84 0f       	add	r24, r20
    2a82:	95 1f       	adc	r25, r21
    2a84:	fc 01       	movw	r30, r24
    2a86:	e5 57       	subi	r30, 0x75	; 117
    2a88:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8a:	80 81       	ld	r24, Z
    2a8c:	82 30       	cpi	r24, 0x02	; 2
    2a8e:	c1 f4       	brne	.+48     	; 0x2ac0 <SSDLT_enuEnableDot+0x74>
    2a90:	8a 81       	ldd	r24, Y+2	; 0x02
    2a92:	48 2f       	mov	r20, r24
    2a94:	50 e0       	ldi	r21, 0x00	; 0
    2a96:	ca 01       	movw	r24, r20
    2a98:	88 0f       	add	r24, r24
    2a9a:	99 1f       	adc	r25, r25
    2a9c:	9c 01       	movw	r18, r24
    2a9e:	22 0f       	add	r18, r18
    2aa0:	33 1f       	adc	r19, r19
    2aa2:	22 0f       	add	r18, r18
    2aa4:	33 1f       	adc	r19, r19
    2aa6:	22 0f       	add	r18, r18
    2aa8:	33 1f       	adc	r19, r19
    2aaa:	82 0f       	add	r24, r18
    2aac:	93 1f       	adc	r25, r19
    2aae:	84 0f       	add	r24, r20
    2ab0:	95 1f       	adc	r25, r21
    2ab2:	fc 01       	movw	r30, r24
    2ab4:	e4 57       	subi	r30, 0x74	; 116
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	80 81       	ld	r24, Z
    2aba:	82 30       	cpi	r24, 0x02	; 2
    2abc:	09 f4       	brne	.+2      	; 0x2ac0 <SSDLT_enuEnableDot+0x74>
    2abe:	95 c0       	rjmp	.+298    	; 0x2bea <SSDLT_enuEnableDot+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2ac0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac2:	48 2f       	mov	r20, r24
    2ac4:	50 e0       	ldi	r21, 0x00	; 0
    2ac6:	ca 01       	movw	r24, r20
    2ac8:	88 0f       	add	r24, r24
    2aca:	99 1f       	adc	r25, r25
    2acc:	9c 01       	movw	r18, r24
    2ace:	22 0f       	add	r18, r18
    2ad0:	33 1f       	adc	r19, r19
    2ad2:	22 0f       	add	r18, r18
    2ad4:	33 1f       	adc	r19, r19
    2ad6:	22 0f       	add	r18, r18
    2ad8:	33 1f       	adc	r19, r19
    2ada:	82 0f       	add	r24, r18
    2adc:	93 1f       	adc	r25, r19
    2ade:	84 0f       	add	r24, r20
    2ae0:	95 1f       	adc	r25, r21
    2ae2:	fc 01       	movw	r30, r24
    2ae4:	e3 57       	subi	r30, 0x73	; 115
    2ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae8:	80 81       	ld	r24, Z
    2aea:	81 30       	cpi	r24, 0x01	; 1
    2aec:	89 f5       	brne	.+98     	; 0x2b50 <SSDLT_enuEnableDot+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2aee:	8a 81       	ldd	r24, Y+2	; 0x02
    2af0:	48 2f       	mov	r20, r24
    2af2:	50 e0       	ldi	r21, 0x00	; 0
    2af4:	ca 01       	movw	r24, r20
    2af6:	88 0f       	add	r24, r24
    2af8:	99 1f       	adc	r25, r25
    2afa:	9c 01       	movw	r18, r24
    2afc:	22 0f       	add	r18, r18
    2afe:	33 1f       	adc	r19, r19
    2b00:	22 0f       	add	r18, r18
    2b02:	33 1f       	adc	r19, r19
    2b04:	22 0f       	add	r18, r18
    2b06:	33 1f       	adc	r19, r19
    2b08:	82 0f       	add	r24, r18
    2b0a:	93 1f       	adc	r25, r19
    2b0c:	84 0f       	add	r24, r20
    2b0e:	95 1f       	adc	r25, r21
    2b10:	fc 01       	movw	r30, r24
    2b12:	e5 57       	subi	r30, 0x75	; 117
    2b14:	ff 4f       	sbci	r31, 0xFF	; 255
    2b16:	60 81       	ld	r22, Z
    2b18:	8a 81       	ldd	r24, Y+2	; 0x02
    2b1a:	48 2f       	mov	r20, r24
    2b1c:	50 e0       	ldi	r21, 0x00	; 0
    2b1e:	ca 01       	movw	r24, r20
    2b20:	88 0f       	add	r24, r24
    2b22:	99 1f       	adc	r25, r25
    2b24:	9c 01       	movw	r18, r24
    2b26:	22 0f       	add	r18, r18
    2b28:	33 1f       	adc	r19, r19
    2b2a:	22 0f       	add	r18, r18
    2b2c:	33 1f       	adc	r19, r19
    2b2e:	22 0f       	add	r18, r18
    2b30:	33 1f       	adc	r19, r19
    2b32:	82 0f       	add	r24, r18
    2b34:	93 1f       	adc	r25, r19
    2b36:	84 0f       	add	r24, r20
    2b38:	95 1f       	adc	r25, r21
    2b3a:	fc 01       	movw	r30, r24
    2b3c:	e4 57       	subi	r30, 0x74	; 116
    2b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b40:	90 81       	ld	r25, Z
    2b42:	86 2f       	mov	r24, r22
    2b44:	69 2f       	mov	r22, r25
    2b46:	41 e0       	ldi	r20, 0x01	; 1
    2b48:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2b4c:	89 83       	std	Y+1, r24	; 0x01
    2b4e:	4d c0       	rjmp	.+154    	; 0x2bea <SSDLT_enuEnableDot+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8HIGH);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2b50:	8a 81       	ldd	r24, Y+2	; 0x02
    2b52:	48 2f       	mov	r20, r24
    2b54:	50 e0       	ldi	r21, 0x00	; 0
    2b56:	ca 01       	movw	r24, r20
    2b58:	88 0f       	add	r24, r24
    2b5a:	99 1f       	adc	r25, r25
    2b5c:	9c 01       	movw	r18, r24
    2b5e:	22 0f       	add	r18, r18
    2b60:	33 1f       	adc	r19, r19
    2b62:	22 0f       	add	r18, r18
    2b64:	33 1f       	adc	r19, r19
    2b66:	22 0f       	add	r18, r18
    2b68:	33 1f       	adc	r19, r19
    2b6a:	82 0f       	add	r24, r18
    2b6c:	93 1f       	adc	r25, r19
    2b6e:	84 0f       	add	r24, r20
    2b70:	95 1f       	adc	r25, r21
    2b72:	fc 01       	movw	r30, r24
    2b74:	e3 57       	subi	r30, 0x73	; 115
    2b76:	ff 4f       	sbci	r31, 0xFF	; 255
    2b78:	80 81       	ld	r24, Z
    2b7a:	88 23       	and	r24, r24
    2b7c:	89 f5       	brne	.+98     	; 0x2be0 <SSDLT_enuEnableDot+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b80:	48 2f       	mov	r20, r24
    2b82:	50 e0       	ldi	r21, 0x00	; 0
    2b84:	ca 01       	movw	r24, r20
    2b86:	88 0f       	add	r24, r24
    2b88:	99 1f       	adc	r25, r25
    2b8a:	9c 01       	movw	r18, r24
    2b8c:	22 0f       	add	r18, r18
    2b8e:	33 1f       	adc	r19, r19
    2b90:	22 0f       	add	r18, r18
    2b92:	33 1f       	adc	r19, r19
    2b94:	22 0f       	add	r18, r18
    2b96:	33 1f       	adc	r19, r19
    2b98:	82 0f       	add	r24, r18
    2b9a:	93 1f       	adc	r25, r19
    2b9c:	84 0f       	add	r24, r20
    2b9e:	95 1f       	adc	r25, r21
    2ba0:	fc 01       	movw	r30, r24
    2ba2:	e5 57       	subi	r30, 0x75	; 117
    2ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba6:	60 81       	ld	r22, Z
    2ba8:	8a 81       	ldd	r24, Y+2	; 0x02
    2baa:	48 2f       	mov	r20, r24
    2bac:	50 e0       	ldi	r21, 0x00	; 0
    2bae:	ca 01       	movw	r24, r20
    2bb0:	88 0f       	add	r24, r24
    2bb2:	99 1f       	adc	r25, r25
    2bb4:	9c 01       	movw	r18, r24
    2bb6:	22 0f       	add	r18, r18
    2bb8:	33 1f       	adc	r19, r19
    2bba:	22 0f       	add	r18, r18
    2bbc:	33 1f       	adc	r19, r19
    2bbe:	22 0f       	add	r18, r18
    2bc0:	33 1f       	adc	r19, r19
    2bc2:	82 0f       	add	r24, r18
    2bc4:	93 1f       	adc	r25, r19
    2bc6:	84 0f       	add	r24, r20
    2bc8:	95 1f       	adc	r25, r21
    2bca:	fc 01       	movw	r30, r24
    2bcc:	e4 57       	subi	r30, 0x74	; 116
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	90 81       	ld	r25, Z
    2bd2:	86 2f       	mov	r24, r22
    2bd4:	69 2f       	mov	r22, r25
    2bd6:	40 e0       	ldi	r20, 0x00	; 0
    2bd8:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2bdc:	89 83       	std	Y+1, r24	; 0x01
    2bde:	05 c0       	rjmp	.+10     	; 0x2bea <SSDLT_enuEnableDot+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8LOW);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2be0:	83 e0       	ldi	r24, 0x03	; 3
    2be2:	89 83       	std	Y+1, r24	; 0x01
    2be4:	02 c0       	rjmp	.+4      	; 0x2bea <SSDLT_enuEnableDot+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2be6:	83 e0       	ldi	r24, 0x03	; 3
    2be8:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2bea:	89 81       	ldd	r24, Y+1	; 0x01
}
    2bec:	0f 90       	pop	r0
    2bee:	0f 90       	pop	r0
    2bf0:	cf 91       	pop	r28
    2bf2:	df 91       	pop	r29
    2bf4:	08 95       	ret

00002bf6 <SSDLT_enuDisableDot>:

ES_t SSDLT_enuDisableDot(u8 Copy_u8SegID)
{
    2bf6:	df 93       	push	r29
    2bf8:	cf 93       	push	r28
    2bfa:	00 d0       	rcall	.+0      	; 0x2bfc <SSDLT_enuDisableDot+0x6>
    2bfc:	cd b7       	in	r28, 0x3d	; 61
    2bfe:	de b7       	in	r29, 0x3e	; 62
    2c00:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    2c02:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8SegID < SEG_NUM)
    2c04:	8a 81       	ldd	r24, Y+2	; 0x02
    2c06:	82 30       	cpi	r24, 0x02	; 2
    2c08:	08 f0       	brcs	.+2      	; 0x2c0c <SSDLT_enuDisableDot+0x16>
    2c0a:	c2 c0       	rjmp	.+388    	; 0x2d90 <SSDLT_enuDisableDot+0x19a>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    2c0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c0e:	48 2f       	mov	r20, r24
    2c10:	50 e0       	ldi	r21, 0x00	; 0
    2c12:	ca 01       	movw	r24, r20
    2c14:	88 0f       	add	r24, r24
    2c16:	99 1f       	adc	r25, r25
    2c18:	9c 01       	movw	r18, r24
    2c1a:	22 0f       	add	r18, r18
    2c1c:	33 1f       	adc	r19, r19
    2c1e:	22 0f       	add	r18, r18
    2c20:	33 1f       	adc	r19, r19
    2c22:	22 0f       	add	r18, r18
    2c24:	33 1f       	adc	r19, r19
    2c26:	82 0f       	add	r24, r18
    2c28:	93 1f       	adc	r25, r19
    2c2a:	84 0f       	add	r24, r20
    2c2c:	95 1f       	adc	r25, r21
    2c2e:	fc 01       	movw	r30, r24
    2c30:	e5 57       	subi	r30, 0x75	; 117
    2c32:	ff 4f       	sbci	r31, 0xFF	; 255
    2c34:	80 81       	ld	r24, Z
    2c36:	82 30       	cpi	r24, 0x02	; 2
    2c38:	c1 f4       	brne	.+48     	; 0x2c6a <SSDLT_enuDisableDot+0x74>
    2c3a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c3c:	48 2f       	mov	r20, r24
    2c3e:	50 e0       	ldi	r21, 0x00	; 0
    2c40:	ca 01       	movw	r24, r20
    2c42:	88 0f       	add	r24, r24
    2c44:	99 1f       	adc	r25, r25
    2c46:	9c 01       	movw	r18, r24
    2c48:	22 0f       	add	r18, r18
    2c4a:	33 1f       	adc	r19, r19
    2c4c:	22 0f       	add	r18, r18
    2c4e:	33 1f       	adc	r19, r19
    2c50:	22 0f       	add	r18, r18
    2c52:	33 1f       	adc	r19, r19
    2c54:	82 0f       	add	r24, r18
    2c56:	93 1f       	adc	r25, r19
    2c58:	84 0f       	add	r24, r20
    2c5a:	95 1f       	adc	r25, r21
    2c5c:	fc 01       	movw	r30, r24
    2c5e:	e4 57       	subi	r30, 0x74	; 116
    2c60:	ff 4f       	sbci	r31, 0xFF	; 255
    2c62:	80 81       	ld	r24, Z
    2c64:	82 30       	cpi	r24, 0x02	; 2
    2c66:	09 f4       	brne	.+2      	; 0x2c6a <SSDLT_enuDisableDot+0x74>
    2c68:	95 c0       	rjmp	.+298    	; 0x2d94 <SSDLT_enuDisableDot+0x19e>
				SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
		{
			if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2c6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c6c:	48 2f       	mov	r20, r24
    2c6e:	50 e0       	ldi	r21, 0x00	; 0
    2c70:	ca 01       	movw	r24, r20
    2c72:	88 0f       	add	r24, r24
    2c74:	99 1f       	adc	r25, r25
    2c76:	9c 01       	movw	r18, r24
    2c78:	22 0f       	add	r18, r18
    2c7a:	33 1f       	adc	r19, r19
    2c7c:	22 0f       	add	r18, r18
    2c7e:	33 1f       	adc	r19, r19
    2c80:	22 0f       	add	r18, r18
    2c82:	33 1f       	adc	r19, r19
    2c84:	82 0f       	add	r24, r18
    2c86:	93 1f       	adc	r25, r19
    2c88:	84 0f       	add	r24, r20
    2c8a:	95 1f       	adc	r25, r21
    2c8c:	fc 01       	movw	r30, r24
    2c8e:	e3 57       	subi	r30, 0x73	; 115
    2c90:	ff 4f       	sbci	r31, 0xFF	; 255
    2c92:	80 81       	ld	r24, Z
    2c94:	81 30       	cpi	r24, 0x01	; 1
    2c96:	89 f5       	brne	.+98     	; 0x2cfa <SSDLT_enuDisableDot+0x104>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2c98:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9a:	48 2f       	mov	r20, r24
    2c9c:	50 e0       	ldi	r21, 0x00	; 0
    2c9e:	ca 01       	movw	r24, r20
    2ca0:	88 0f       	add	r24, r24
    2ca2:	99 1f       	adc	r25, r25
    2ca4:	9c 01       	movw	r18, r24
    2ca6:	22 0f       	add	r18, r18
    2ca8:	33 1f       	adc	r19, r19
    2caa:	22 0f       	add	r18, r18
    2cac:	33 1f       	adc	r19, r19
    2cae:	22 0f       	add	r18, r18
    2cb0:	33 1f       	adc	r19, r19
    2cb2:	82 0f       	add	r24, r18
    2cb4:	93 1f       	adc	r25, r19
    2cb6:	84 0f       	add	r24, r20
    2cb8:	95 1f       	adc	r25, r21
    2cba:	fc 01       	movw	r30, r24
    2cbc:	e5 57       	subi	r30, 0x75	; 117
    2cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc0:	60 81       	ld	r22, Z
    2cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc4:	48 2f       	mov	r20, r24
    2cc6:	50 e0       	ldi	r21, 0x00	; 0
    2cc8:	ca 01       	movw	r24, r20
    2cca:	88 0f       	add	r24, r24
    2ccc:	99 1f       	adc	r25, r25
    2cce:	9c 01       	movw	r18, r24
    2cd0:	22 0f       	add	r18, r18
    2cd2:	33 1f       	adc	r19, r19
    2cd4:	22 0f       	add	r18, r18
    2cd6:	33 1f       	adc	r19, r19
    2cd8:	22 0f       	add	r18, r18
    2cda:	33 1f       	adc	r19, r19
    2cdc:	82 0f       	add	r24, r18
    2cde:	93 1f       	adc	r25, r19
    2ce0:	84 0f       	add	r24, r20
    2ce2:	95 1f       	adc	r25, r21
    2ce4:	fc 01       	movw	r30, r24
    2ce6:	e4 57       	subi	r30, 0x74	; 116
    2ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cea:	90 81       	ld	r25, Z
    2cec:	86 2f       	mov	r24, r22
    2cee:	69 2f       	mov	r22, r25
    2cf0:	40 e0       	ldi	r20, 0x00	; 0
    2cf2:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2cf6:	89 83       	std	Y+1, r24	; 0x01
    2cf8:	4d c0       	rjmp	.+154    	; 0x2d94 <SSDLT_enuDisableDot+0x19e>
														 SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8LOW);
			}
			else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    2cfa:	8a 81       	ldd	r24, Y+2	; 0x02
    2cfc:	48 2f       	mov	r20, r24
    2cfe:	50 e0       	ldi	r21, 0x00	; 0
    2d00:	ca 01       	movw	r24, r20
    2d02:	88 0f       	add	r24, r24
    2d04:	99 1f       	adc	r25, r25
    2d06:	9c 01       	movw	r18, r24
    2d08:	22 0f       	add	r18, r18
    2d0a:	33 1f       	adc	r19, r19
    2d0c:	22 0f       	add	r18, r18
    2d0e:	33 1f       	adc	r19, r19
    2d10:	22 0f       	add	r18, r18
    2d12:	33 1f       	adc	r19, r19
    2d14:	82 0f       	add	r24, r18
    2d16:	93 1f       	adc	r25, r19
    2d18:	84 0f       	add	r24, r20
    2d1a:	95 1f       	adc	r25, r21
    2d1c:	fc 01       	movw	r30, r24
    2d1e:	e3 57       	subi	r30, 0x73	; 115
    2d20:	ff 4f       	sbci	r31, 0xFF	; 255
    2d22:	80 81       	ld	r24, Z
    2d24:	88 23       	and	r24, r24
    2d26:	89 f5       	brne	.+98     	; 0x2d8a <SSDLT_enuDisableDot+0x194>
			{
				Local_enuErrorState = DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port,
    2d28:	8a 81       	ldd	r24, Y+2	; 0x02
    2d2a:	48 2f       	mov	r20, r24
    2d2c:	50 e0       	ldi	r21, 0x00	; 0
    2d2e:	ca 01       	movw	r24, r20
    2d30:	88 0f       	add	r24, r24
    2d32:	99 1f       	adc	r25, r25
    2d34:	9c 01       	movw	r18, r24
    2d36:	22 0f       	add	r18, r18
    2d38:	33 1f       	adc	r19, r19
    2d3a:	22 0f       	add	r18, r18
    2d3c:	33 1f       	adc	r19, r19
    2d3e:	22 0f       	add	r18, r18
    2d40:	33 1f       	adc	r19, r19
    2d42:	82 0f       	add	r24, r18
    2d44:	93 1f       	adc	r25, r19
    2d46:	84 0f       	add	r24, r20
    2d48:	95 1f       	adc	r25, r21
    2d4a:	fc 01       	movw	r30, r24
    2d4c:	e5 57       	subi	r30, 0x75	; 117
    2d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d50:	60 81       	ld	r22, Z
    2d52:	8a 81       	ldd	r24, Y+2	; 0x02
    2d54:	48 2f       	mov	r20, r24
    2d56:	50 e0       	ldi	r21, 0x00	; 0
    2d58:	ca 01       	movw	r24, r20
    2d5a:	88 0f       	add	r24, r24
    2d5c:	99 1f       	adc	r25, r25
    2d5e:	9c 01       	movw	r18, r24
    2d60:	22 0f       	add	r18, r18
    2d62:	33 1f       	adc	r19, r19
    2d64:	22 0f       	add	r18, r18
    2d66:	33 1f       	adc	r19, r19
    2d68:	22 0f       	add	r18, r18
    2d6a:	33 1f       	adc	r19, r19
    2d6c:	82 0f       	add	r24, r18
    2d6e:	93 1f       	adc	r25, r19
    2d70:	84 0f       	add	r24, r20
    2d72:	95 1f       	adc	r25, r21
    2d74:	fc 01       	movw	r30, r24
    2d76:	e4 57       	subi	r30, 0x74	; 116
    2d78:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7a:	90 81       	ld	r25, Z
    2d7c:	86 2f       	mov	r24, r22
    2d7e:	69 2f       	mov	r22, r25
    2d80:	41 e0       	ldi	r20, 0x01	; 1
    2d82:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2d86:	89 83       	std	Y+1, r24	; 0x01
    2d88:	05 c0       	rjmp	.+10     	; 0x2d94 <SSDLT_enuDisableDot+0x19e>
														SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin, DIO_u8HIGH);
			}
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE;
    2d8a:	83 e0       	ldi	r24, 0x03	; 3
    2d8c:	89 83       	std	Y+1, r24	; 0x01
    2d8e:	02 c0       	rjmp	.+4      	; 0x2d94 <SSDLT_enuDisableDot+0x19e>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    2d90:	83 e0       	ldi	r24, 0x03	; 3
    2d92:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_enuErrorState;
    2d94:	89 81       	ldd	r24, Y+1	; 0x01
}
    2d96:	0f 90       	pop	r0
    2d98:	0f 90       	pop	r0
    2d9a:	cf 91       	pop	r28
    2d9c:	df 91       	pop	r29
    2d9e:	08 95       	ret

00002da0 <SSDLT_enuClearDisplay>:

ES_t SSDLT_enuClearDisplay(u8 Copy_u8SegID)
{
    2da0:	df 93       	push	r29
    2da2:	cf 93       	push	r28
    2da4:	cd b7       	in	r28, 0x3d	; 61
    2da6:	de b7       	in	r29, 0x3e	; 62
    2da8:	29 97       	sbiw	r28, 0x09	; 9
    2daa:	0f b6       	in	r0, 0x3f	; 63
    2dac:	f8 94       	cli
    2dae:	de bf       	out	0x3e, r29	; 62
    2db0:	0f be       	out	0x3f, r0	; 63
    2db2:	cd bf       	out	0x3d, r28	; 61
    2db4:	88 87       	std	Y+8, r24	; 0x08
	ES_t Local_enuErrorState = ES_NOK;
    2db6:	1f 82       	std	Y+7, r1	; 0x07

	u8 Local_u8Iterator = 0;
    2db8:	1e 82       	std	Y+6, r1	; 0x06
	u8 Local_u8LastBit = 0;
    2dba:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Check = 0;
    2dbc:	19 82       	std	Y+1, r1	; 0x01
    2dbe:	1a 82       	std	Y+2, r1	; 0x02
    2dc0:	1b 82       	std	Y+3, r1	; 0x03
    2dc2:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_u8SegID < SEG_NUM)
    2dc4:	88 85       	ldd	r24, Y+8	; 0x08
    2dc6:	82 30       	cpi	r24, 0x02	; 2
    2dc8:	08 f0       	brcs	.+2      	; 0x2dcc <SSDLT_enuClearDisplay+0x2c>
    2dca:	1b c4       	rjmp	.+2102   	; 0x3602 <SSDLT_enuClearDisplay+0x862>
	{
		if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_CATHODE)
    2dcc:	88 85       	ldd	r24, Y+8	; 0x08
    2dce:	48 2f       	mov	r20, r24
    2dd0:	50 e0       	ldi	r21, 0x00	; 0
    2dd2:	ca 01       	movw	r24, r20
    2dd4:	88 0f       	add	r24, r24
    2dd6:	99 1f       	adc	r25, r25
    2dd8:	9c 01       	movw	r18, r24
    2dda:	22 0f       	add	r18, r18
    2ddc:	33 1f       	adc	r19, r19
    2dde:	22 0f       	add	r18, r18
    2de0:	33 1f       	adc	r19, r19
    2de2:	22 0f       	add	r18, r18
    2de4:	33 1f       	adc	r19, r19
    2de6:	82 0f       	add	r24, r18
    2de8:	93 1f       	adc	r25, r19
    2dea:	84 0f       	add	r24, r20
    2dec:	95 1f       	adc	r25, r21
    2dee:	fc 01       	movw	r30, r24
    2df0:	e3 57       	subi	r30, 0x73	; 115
    2df2:	ff 4f       	sbci	r31, 0xFF	; 255
    2df4:	80 81       	ld	r24, Z
    2df6:	81 30       	cpi	r24, 0x01	; 1
    2df8:	09 f0       	breq	.+2      	; 0x2dfc <SSDLT_enuClearDisplay+0x5c>
    2dfa:	f4 c1       	rjmp	.+1000   	; 0x31e4 <SSDLT_enuClearDisplay+0x444>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    2dfc:	88 85       	ldd	r24, Y+8	; 0x08
    2dfe:	48 2f       	mov	r20, r24
    2e00:	50 e0       	ldi	r21, 0x00	; 0
    2e02:	ca 01       	movw	r24, r20
    2e04:	88 0f       	add	r24, r24
    2e06:	99 1f       	adc	r25, r25
    2e08:	9c 01       	movw	r18, r24
    2e0a:	22 0f       	add	r18, r18
    2e0c:	33 1f       	adc	r19, r19
    2e0e:	22 0f       	add	r18, r18
    2e10:	33 1f       	adc	r19, r19
    2e12:	22 0f       	add	r18, r18
    2e14:	33 1f       	adc	r19, r19
    2e16:	82 0f       	add	r24, r18
    2e18:	93 1f       	adc	r25, r19
    2e1a:	84 0f       	add	r24, r20
    2e1c:	95 1f       	adc	r25, r21
    2e1e:	fc 01       	movw	r30, r24
    2e20:	e5 58       	subi	r30, 0x85	; 133
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	60 81       	ld	r22, Z
    2e26:	88 85       	ldd	r24, Y+8	; 0x08
    2e28:	48 2f       	mov	r20, r24
    2e2a:	50 e0       	ldi	r21, 0x00	; 0
    2e2c:	ca 01       	movw	r24, r20
    2e2e:	88 0f       	add	r24, r24
    2e30:	99 1f       	adc	r25, r25
    2e32:	9c 01       	movw	r18, r24
    2e34:	22 0f       	add	r18, r18
    2e36:	33 1f       	adc	r19, r19
    2e38:	22 0f       	add	r18, r18
    2e3a:	33 1f       	adc	r19, r19
    2e3c:	22 0f       	add	r18, r18
    2e3e:	33 1f       	adc	r19, r19
    2e40:	82 0f       	add	r24, r18
    2e42:	93 1f       	adc	r25, r19
    2e44:	84 0f       	add	r24, r20
    2e46:	95 1f       	adc	r25, r21
    2e48:	fc 01       	movw	r30, r24
    2e4a:	e4 58       	subi	r30, 0x84	; 132
    2e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4e:	90 81       	ld	r25, Z
    2e50:	86 2f       	mov	r24, r22
    2e52:	69 2f       	mov	r22, r25
    2e54:	40 e0       	ldi	r20, 0x00	; 0
    2e56:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2e5a:	28 2f       	mov	r18, r24
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
    2e5e:	40 e0       	ldi	r20, 0x00	; 0
    2e60:	50 e0       	ldi	r21, 0x00	; 0
    2e62:	89 81       	ldd	r24, Y+1	; 0x01
    2e64:	9a 81       	ldd	r25, Y+2	; 0x02
    2e66:	ab 81       	ldd	r26, Y+3	; 0x03
    2e68:	bc 81       	ldd	r27, Y+4	; 0x04
    2e6a:	82 2b       	or	r24, r18
    2e6c:	93 2b       	or	r25, r19
    2e6e:	a4 2b       	or	r26, r20
    2e70:	b5 2b       	or	r27, r21
    2e72:	89 83       	std	Y+1, r24	; 0x01
    2e74:	9a 83       	std	Y+2, r25	; 0x02
    2e76:	ab 83       	std	Y+3, r26	; 0x03
    2e78:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  DIO_u8LOW) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    2e7a:	88 85       	ldd	r24, Y+8	; 0x08
    2e7c:	48 2f       	mov	r20, r24
    2e7e:	50 e0       	ldi	r21, 0x00	; 0
    2e80:	ca 01       	movw	r24, r20
    2e82:	88 0f       	add	r24, r24
    2e84:	99 1f       	adc	r25, r25
    2e86:	9c 01       	movw	r18, r24
    2e88:	22 0f       	add	r18, r18
    2e8a:	33 1f       	adc	r19, r19
    2e8c:	22 0f       	add	r18, r18
    2e8e:	33 1f       	adc	r19, r19
    2e90:	22 0f       	add	r18, r18
    2e92:	33 1f       	adc	r19, r19
    2e94:	82 0f       	add	r24, r18
    2e96:	93 1f       	adc	r25, r19
    2e98:	84 0f       	add	r24, r20
    2e9a:	95 1f       	adc	r25, r21
    2e9c:	fc 01       	movw	r30, r24
    2e9e:	e3 58       	subi	r30, 0x83	; 131
    2ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea2:	60 81       	ld	r22, Z
    2ea4:	88 85       	ldd	r24, Y+8	; 0x08
    2ea6:	48 2f       	mov	r20, r24
    2ea8:	50 e0       	ldi	r21, 0x00	; 0
    2eaa:	ca 01       	movw	r24, r20
    2eac:	88 0f       	add	r24, r24
    2eae:	99 1f       	adc	r25, r25
    2eb0:	9c 01       	movw	r18, r24
    2eb2:	22 0f       	add	r18, r18
    2eb4:	33 1f       	adc	r19, r19
    2eb6:	22 0f       	add	r18, r18
    2eb8:	33 1f       	adc	r19, r19
    2eba:	22 0f       	add	r18, r18
    2ebc:	33 1f       	adc	r19, r19
    2ebe:	82 0f       	add	r24, r18
    2ec0:	93 1f       	adc	r25, r19
    2ec2:	84 0f       	add	r24, r20
    2ec4:	95 1f       	adc	r25, r21
    2ec6:	fc 01       	movw	r30, r24
    2ec8:	e2 58       	subi	r30, 0x82	; 130
    2eca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ecc:	90 81       	ld	r25, Z
    2ece:	86 2f       	mov	r24, r22
    2ed0:	69 2f       	mov	r22, r25
    2ed2:	40 e0       	ldi	r20, 0x00	; 0
    2ed4:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2ed8:	88 2f       	mov	r24, r24
    2eda:	90 e0       	ldi	r25, 0x00	; 0
    2edc:	88 0f       	add	r24, r24
    2ede:	99 1f       	adc	r25, r25
    2ee0:	88 0f       	add	r24, r24
    2ee2:	99 1f       	adc	r25, r25
    2ee4:	88 0f       	add	r24, r24
    2ee6:	99 1f       	adc	r25, r25
    2ee8:	9c 01       	movw	r18, r24
    2eea:	44 27       	eor	r20, r20
    2eec:	37 fd       	sbrc	r19, 7
    2eee:	40 95       	com	r20
    2ef0:	54 2f       	mov	r21, r20
    2ef2:	89 81       	ldd	r24, Y+1	; 0x01
    2ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef6:	ab 81       	ldd	r26, Y+3	; 0x03
    2ef8:	bc 81       	ldd	r27, Y+4	; 0x04
    2efa:	82 2b       	or	r24, r18
    2efc:	93 2b       	or	r25, r19
    2efe:	a4 2b       	or	r26, r20
    2f00:	b5 2b       	or	r27, r21
    2f02:	89 83       	std	Y+1, r24	; 0x01
    2f04:	9a 83       	std	Y+2, r25	; 0x02
    2f06:	ab 83       	std	Y+3, r26	; 0x03
    2f08:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  DIO_u8LOW) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    2f0a:	88 85       	ldd	r24, Y+8	; 0x08
    2f0c:	48 2f       	mov	r20, r24
    2f0e:	50 e0       	ldi	r21, 0x00	; 0
    2f10:	ca 01       	movw	r24, r20
    2f12:	88 0f       	add	r24, r24
    2f14:	99 1f       	adc	r25, r25
    2f16:	9c 01       	movw	r18, r24
    2f18:	22 0f       	add	r18, r18
    2f1a:	33 1f       	adc	r19, r19
    2f1c:	22 0f       	add	r18, r18
    2f1e:	33 1f       	adc	r19, r19
    2f20:	22 0f       	add	r18, r18
    2f22:	33 1f       	adc	r19, r19
    2f24:	82 0f       	add	r24, r18
    2f26:	93 1f       	adc	r25, r19
    2f28:	84 0f       	add	r24, r20
    2f2a:	95 1f       	adc	r25, r21
    2f2c:	fc 01       	movw	r30, r24
    2f2e:	e1 58       	subi	r30, 0x81	; 129
    2f30:	ff 4f       	sbci	r31, 0xFF	; 255
    2f32:	60 81       	ld	r22, Z
    2f34:	88 85       	ldd	r24, Y+8	; 0x08
    2f36:	48 2f       	mov	r20, r24
    2f38:	50 e0       	ldi	r21, 0x00	; 0
    2f3a:	ca 01       	movw	r24, r20
    2f3c:	88 0f       	add	r24, r24
    2f3e:	99 1f       	adc	r25, r25
    2f40:	9c 01       	movw	r18, r24
    2f42:	22 0f       	add	r18, r18
    2f44:	33 1f       	adc	r19, r19
    2f46:	22 0f       	add	r18, r18
    2f48:	33 1f       	adc	r19, r19
    2f4a:	22 0f       	add	r18, r18
    2f4c:	33 1f       	adc	r19, r19
    2f4e:	82 0f       	add	r24, r18
    2f50:	93 1f       	adc	r25, r19
    2f52:	84 0f       	add	r24, r20
    2f54:	95 1f       	adc	r25, r21
    2f56:	fc 01       	movw	r30, r24
    2f58:	e0 58       	subi	r30, 0x80	; 128
    2f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f5c:	90 81       	ld	r25, Z
    2f5e:	86 2f       	mov	r24, r22
    2f60:	69 2f       	mov	r22, r25
    2f62:	40 e0       	ldi	r20, 0x00	; 0
    2f64:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2f68:	88 2f       	mov	r24, r24
    2f6a:	90 e0       	ldi	r25, 0x00	; 0
    2f6c:	00 24       	eor	r0, r0
    2f6e:	96 95       	lsr	r25
    2f70:	87 95       	ror	r24
    2f72:	07 94       	ror	r0
    2f74:	96 95       	lsr	r25
    2f76:	87 95       	ror	r24
    2f78:	07 94       	ror	r0
    2f7a:	98 2f       	mov	r25, r24
    2f7c:	80 2d       	mov	r24, r0
    2f7e:	9c 01       	movw	r18, r24
    2f80:	44 27       	eor	r20, r20
    2f82:	37 fd       	sbrc	r19, 7
    2f84:	40 95       	com	r20
    2f86:	54 2f       	mov	r21, r20
    2f88:	89 81       	ldd	r24, Y+1	; 0x01
    2f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f8c:	ab 81       	ldd	r26, Y+3	; 0x03
    2f8e:	bc 81       	ldd	r27, Y+4	; 0x04
    2f90:	82 2b       	or	r24, r18
    2f92:	93 2b       	or	r25, r19
    2f94:	a4 2b       	or	r26, r20
    2f96:	b5 2b       	or	r27, r21
    2f98:	89 83       	std	Y+1, r24	; 0x01
    2f9a:	9a 83       	std	Y+2, r25	; 0x02
    2f9c:	ab 83       	std	Y+3, r26	; 0x03
    2f9e:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  DIO_u8LOW) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    2fa0:	88 85       	ldd	r24, Y+8	; 0x08
    2fa2:	48 2f       	mov	r20, r24
    2fa4:	50 e0       	ldi	r21, 0x00	; 0
    2fa6:	ca 01       	movw	r24, r20
    2fa8:	88 0f       	add	r24, r24
    2faa:	99 1f       	adc	r25, r25
    2fac:	9c 01       	movw	r18, r24
    2fae:	22 0f       	add	r18, r18
    2fb0:	33 1f       	adc	r19, r19
    2fb2:	22 0f       	add	r18, r18
    2fb4:	33 1f       	adc	r19, r19
    2fb6:	22 0f       	add	r18, r18
    2fb8:	33 1f       	adc	r19, r19
    2fba:	82 0f       	add	r24, r18
    2fbc:	93 1f       	adc	r25, r19
    2fbe:	84 0f       	add	r24, r20
    2fc0:	95 1f       	adc	r25, r21
    2fc2:	fc 01       	movw	r30, r24
    2fc4:	ef 57       	subi	r30, 0x7F	; 127
    2fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc8:	60 81       	ld	r22, Z
    2fca:	88 85       	ldd	r24, Y+8	; 0x08
    2fcc:	48 2f       	mov	r20, r24
    2fce:	50 e0       	ldi	r21, 0x00	; 0
    2fd0:	ca 01       	movw	r24, r20
    2fd2:	88 0f       	add	r24, r24
    2fd4:	99 1f       	adc	r25, r25
    2fd6:	9c 01       	movw	r18, r24
    2fd8:	22 0f       	add	r18, r18
    2fda:	33 1f       	adc	r19, r19
    2fdc:	22 0f       	add	r18, r18
    2fde:	33 1f       	adc	r19, r19
    2fe0:	22 0f       	add	r18, r18
    2fe2:	33 1f       	adc	r19, r19
    2fe4:	82 0f       	add	r24, r18
    2fe6:	93 1f       	adc	r25, r19
    2fe8:	84 0f       	add	r24, r20
    2fea:	95 1f       	adc	r25, r21
    2fec:	fc 01       	movw	r30, r24
    2fee:	ee 57       	subi	r30, 0x7E	; 126
    2ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff2:	90 81       	ld	r25, Z
    2ff4:	86 2f       	mov	r24, r22
    2ff6:	69 2f       	mov	r22, r25
    2ff8:	40 e0       	ldi	r20, 0x00	; 0
    2ffa:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    2ffe:	88 2f       	mov	r24, r24
    3000:	90 e0       	ldi	r25, 0x00	; 0
    3002:	98 2f       	mov	r25, r24
    3004:	88 27       	eor	r24, r24
    3006:	99 0f       	add	r25, r25
    3008:	9c 01       	movw	r18, r24
    300a:	44 27       	eor	r20, r20
    300c:	37 fd       	sbrc	r19, 7
    300e:	40 95       	com	r20
    3010:	54 2f       	mov	r21, r20
    3012:	89 81       	ldd	r24, Y+1	; 0x01
    3014:	9a 81       	ldd	r25, Y+2	; 0x02
    3016:	ab 81       	ldd	r26, Y+3	; 0x03
    3018:	bc 81       	ldd	r27, Y+4	; 0x04
    301a:	82 2b       	or	r24, r18
    301c:	93 2b       	or	r25, r19
    301e:	a4 2b       	or	r26, r20
    3020:	b5 2b       	or	r27, r21
    3022:	89 83       	std	Y+1, r24	; 0x01
    3024:	9a 83       	std	Y+2, r25	; 0x02
    3026:	ab 83       	std	Y+3, r26	; 0x03
    3028:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  DIO_u8LOW) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    302a:	88 85       	ldd	r24, Y+8	; 0x08
    302c:	48 2f       	mov	r20, r24
    302e:	50 e0       	ldi	r21, 0x00	; 0
    3030:	ca 01       	movw	r24, r20
    3032:	88 0f       	add	r24, r24
    3034:	99 1f       	adc	r25, r25
    3036:	9c 01       	movw	r18, r24
    3038:	22 0f       	add	r18, r18
    303a:	33 1f       	adc	r19, r19
    303c:	22 0f       	add	r18, r18
    303e:	33 1f       	adc	r19, r19
    3040:	22 0f       	add	r18, r18
    3042:	33 1f       	adc	r19, r19
    3044:	82 0f       	add	r24, r18
    3046:	93 1f       	adc	r25, r19
    3048:	84 0f       	add	r24, r20
    304a:	95 1f       	adc	r25, r21
    304c:	fc 01       	movw	r30, r24
    304e:	ed 57       	subi	r30, 0x7D	; 125
    3050:	ff 4f       	sbci	r31, 0xFF	; 255
    3052:	60 81       	ld	r22, Z
    3054:	88 85       	ldd	r24, Y+8	; 0x08
    3056:	48 2f       	mov	r20, r24
    3058:	50 e0       	ldi	r21, 0x00	; 0
    305a:	ca 01       	movw	r24, r20
    305c:	88 0f       	add	r24, r24
    305e:	99 1f       	adc	r25, r25
    3060:	9c 01       	movw	r18, r24
    3062:	22 0f       	add	r18, r18
    3064:	33 1f       	adc	r19, r19
    3066:	22 0f       	add	r18, r18
    3068:	33 1f       	adc	r19, r19
    306a:	22 0f       	add	r18, r18
    306c:	33 1f       	adc	r19, r19
    306e:	82 0f       	add	r24, r18
    3070:	93 1f       	adc	r25, r19
    3072:	84 0f       	add	r24, r20
    3074:	95 1f       	adc	r25, r21
    3076:	fc 01       	movw	r30, r24
    3078:	ec 57       	subi	r30, 0x7C	; 124
    307a:	ff 4f       	sbci	r31, 0xFF	; 255
    307c:	90 81       	ld	r25, Z
    307e:	86 2f       	mov	r24, r22
    3080:	69 2f       	mov	r22, r25
    3082:	40 e0       	ldi	r20, 0x00	; 0
    3084:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3088:	88 2f       	mov	r24, r24
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	98 2f       	mov	r25, r24
    308e:	88 27       	eor	r24, r24
    3090:	92 95       	swap	r25
    3092:	90 7f       	andi	r25, 0xF0	; 240
    3094:	9c 01       	movw	r18, r24
    3096:	44 27       	eor	r20, r20
    3098:	37 fd       	sbrc	r19, 7
    309a:	40 95       	com	r20
    309c:	54 2f       	mov	r21, r20
    309e:	89 81       	ldd	r24, Y+1	; 0x01
    30a0:	9a 81       	ldd	r25, Y+2	; 0x02
    30a2:	ab 81       	ldd	r26, Y+3	; 0x03
    30a4:	bc 81       	ldd	r27, Y+4	; 0x04
    30a6:	82 2b       	or	r24, r18
    30a8:	93 2b       	or	r25, r19
    30aa:	a4 2b       	or	r26, r20
    30ac:	b5 2b       	or	r27, r21
    30ae:	89 83       	std	Y+1, r24	; 0x01
    30b0:	9a 83       	std	Y+2, r25	; 0x02
    30b2:	ab 83       	std	Y+3, r26	; 0x03
    30b4:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  DIO_u8LOW) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    30b6:	88 85       	ldd	r24, Y+8	; 0x08
    30b8:	48 2f       	mov	r20, r24
    30ba:	50 e0       	ldi	r21, 0x00	; 0
    30bc:	ca 01       	movw	r24, r20
    30be:	88 0f       	add	r24, r24
    30c0:	99 1f       	adc	r25, r25
    30c2:	9c 01       	movw	r18, r24
    30c4:	22 0f       	add	r18, r18
    30c6:	33 1f       	adc	r19, r19
    30c8:	22 0f       	add	r18, r18
    30ca:	33 1f       	adc	r19, r19
    30cc:	22 0f       	add	r18, r18
    30ce:	33 1f       	adc	r19, r19
    30d0:	82 0f       	add	r24, r18
    30d2:	93 1f       	adc	r25, r19
    30d4:	84 0f       	add	r24, r20
    30d6:	95 1f       	adc	r25, r21
    30d8:	fc 01       	movw	r30, r24
    30da:	eb 57       	subi	r30, 0x7B	; 123
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	60 81       	ld	r22, Z
    30e0:	88 85       	ldd	r24, Y+8	; 0x08
    30e2:	48 2f       	mov	r20, r24
    30e4:	50 e0       	ldi	r21, 0x00	; 0
    30e6:	ca 01       	movw	r24, r20
    30e8:	88 0f       	add	r24, r24
    30ea:	99 1f       	adc	r25, r25
    30ec:	9c 01       	movw	r18, r24
    30ee:	22 0f       	add	r18, r18
    30f0:	33 1f       	adc	r19, r19
    30f2:	22 0f       	add	r18, r18
    30f4:	33 1f       	adc	r19, r19
    30f6:	22 0f       	add	r18, r18
    30f8:	33 1f       	adc	r19, r19
    30fa:	82 0f       	add	r24, r18
    30fc:	93 1f       	adc	r25, r19
    30fe:	84 0f       	add	r24, r20
    3100:	95 1f       	adc	r25, r21
    3102:	fc 01       	movw	r30, r24
    3104:	ea 57       	subi	r30, 0x7A	; 122
    3106:	ff 4f       	sbci	r31, 0xFF	; 255
    3108:	90 81       	ld	r25, Z
    310a:	86 2f       	mov	r24, r22
    310c:	69 2f       	mov	r22, r25
    310e:	40 e0       	ldi	r20, 0x00	; 0
    3110:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3114:	88 2f       	mov	r24, r24
    3116:	90 e0       	ldi	r25, 0x00	; 0
    3118:	a0 e0       	ldi	r26, 0x00	; 0
    311a:	b0 e0       	ldi	r27, 0x00	; 0
    311c:	9c 01       	movw	r18, r24
    311e:	ad 01       	movw	r20, r26
    3120:	01 2e       	mov	r0, r17
    3122:	1f e0       	ldi	r17, 0x0F	; 15
    3124:	22 0f       	add	r18, r18
    3126:	33 1f       	adc	r19, r19
    3128:	44 1f       	adc	r20, r20
    312a:	55 1f       	adc	r21, r21
    312c:	1a 95       	dec	r17
    312e:	d1 f7       	brne	.-12     	; 0x3124 <SSDLT_enuClearDisplay+0x384>
    3130:	10 2d       	mov	r17, r0
    3132:	89 81       	ldd	r24, Y+1	; 0x01
    3134:	9a 81       	ldd	r25, Y+2	; 0x02
    3136:	ab 81       	ldd	r26, Y+3	; 0x03
    3138:	bc 81       	ldd	r27, Y+4	; 0x04
    313a:	82 2b       	or	r24, r18
    313c:	93 2b       	or	r25, r19
    313e:	a4 2b       	or	r26, r20
    3140:	b5 2b       	or	r27, r21
    3142:	89 83       	std	Y+1, r24	; 0x01
    3144:	9a 83       	std	Y+2, r25	; 0x02
    3146:	ab 83       	std	Y+3, r26	; 0x03
    3148:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  DIO_u8LOW) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    314a:	88 85       	ldd	r24, Y+8	; 0x08
    314c:	48 2f       	mov	r20, r24
    314e:	50 e0       	ldi	r21, 0x00	; 0
    3150:	ca 01       	movw	r24, r20
    3152:	88 0f       	add	r24, r24
    3154:	99 1f       	adc	r25, r25
    3156:	9c 01       	movw	r18, r24
    3158:	22 0f       	add	r18, r18
    315a:	33 1f       	adc	r19, r19
    315c:	22 0f       	add	r18, r18
    315e:	33 1f       	adc	r19, r19
    3160:	22 0f       	add	r18, r18
    3162:	33 1f       	adc	r19, r19
    3164:	82 0f       	add	r24, r18
    3166:	93 1f       	adc	r25, r19
    3168:	84 0f       	add	r24, r20
    316a:	95 1f       	adc	r25, r21
    316c:	fc 01       	movw	r30, r24
    316e:	e9 57       	subi	r30, 0x79	; 121
    3170:	ff 4f       	sbci	r31, 0xFF	; 255
    3172:	60 81       	ld	r22, Z
    3174:	88 85       	ldd	r24, Y+8	; 0x08
    3176:	48 2f       	mov	r20, r24
    3178:	50 e0       	ldi	r21, 0x00	; 0
    317a:	ca 01       	movw	r24, r20
    317c:	88 0f       	add	r24, r24
    317e:	99 1f       	adc	r25, r25
    3180:	9c 01       	movw	r18, r24
    3182:	22 0f       	add	r18, r18
    3184:	33 1f       	adc	r19, r19
    3186:	22 0f       	add	r18, r18
    3188:	33 1f       	adc	r19, r19
    318a:	22 0f       	add	r18, r18
    318c:	33 1f       	adc	r19, r19
    318e:	82 0f       	add	r24, r18
    3190:	93 1f       	adc	r25, r19
    3192:	84 0f       	add	r24, r20
    3194:	95 1f       	adc	r25, r21
    3196:	fc 01       	movw	r30, r24
    3198:	e8 57       	subi	r30, 0x78	; 120
    319a:	ff 4f       	sbci	r31, 0xFF	; 255
    319c:	90 81       	ld	r25, Z
    319e:	86 2f       	mov	r24, r22
    31a0:	69 2f       	mov	r22, r25
    31a2:	40 e0       	ldi	r20, 0x00	; 0
    31a4:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    31a8:	88 2f       	mov	r24, r24
    31aa:	90 e0       	ldi	r25, 0x00	; 0
    31ac:	a0 e0       	ldi	r26, 0x00	; 0
    31ae:	b0 e0       	ldi	r27, 0x00	; 0
    31b0:	9c 01       	movw	r18, r24
    31b2:	ad 01       	movw	r20, r26
    31b4:	01 2e       	mov	r0, r17
    31b6:	12 e1       	ldi	r17, 0x12	; 18
    31b8:	22 0f       	add	r18, r18
    31ba:	33 1f       	adc	r19, r19
    31bc:	44 1f       	adc	r20, r20
    31be:	55 1f       	adc	r21, r21
    31c0:	1a 95       	dec	r17
    31c2:	d1 f7       	brne	.-12     	; 0x31b8 <SSDLT_enuClearDisplay+0x418>
    31c4:	10 2d       	mov	r17, r0
    31c6:	89 81       	ldd	r24, Y+1	; 0x01
    31c8:	9a 81       	ldd	r25, Y+2	; 0x02
    31ca:	ab 81       	ldd	r26, Y+3	; 0x03
    31cc:	bc 81       	ldd	r27, Y+4	; 0x04
    31ce:	82 2b       	or	r24, r18
    31d0:	93 2b       	or	r25, r19
    31d2:	a4 2b       	or	r26, r20
    31d4:	b5 2b       	or	r27, r21
    31d6:	89 83       	std	Y+1, r24	; 0x01
    31d8:	9a 83       	std	Y+2, r25	; 0x02
    31da:	ab 83       	std	Y+3, r26	; 0x03
    31dc:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  DIO_u8LOW) << 18));
			Local_u8LastBit = 18;
    31de:	82 e1       	ldi	r24, 0x12	; 18
    31e0:	8d 83       	std	Y+5, r24	; 0x05
    31e2:	11 c2       	rjmp	.+1058   	; 0x3606 <SSDLT_enuClearDisplay+0x866>
		}
		else if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8Type == COMMON_ANODE)
    31e4:	88 85       	ldd	r24, Y+8	; 0x08
    31e6:	48 2f       	mov	r20, r24
    31e8:	50 e0       	ldi	r21, 0x00	; 0
    31ea:	ca 01       	movw	r24, r20
    31ec:	88 0f       	add	r24, r24
    31ee:	99 1f       	adc	r25, r25
    31f0:	9c 01       	movw	r18, r24
    31f2:	22 0f       	add	r18, r18
    31f4:	33 1f       	adc	r19, r19
    31f6:	22 0f       	add	r18, r18
    31f8:	33 1f       	adc	r19, r19
    31fa:	22 0f       	add	r18, r18
    31fc:	33 1f       	adc	r19, r19
    31fe:	82 0f       	add	r24, r18
    3200:	93 1f       	adc	r25, r19
    3202:	84 0f       	add	r24, r20
    3204:	95 1f       	adc	r25, r21
    3206:	fc 01       	movw	r30, r24
    3208:	e3 57       	subi	r30, 0x73	; 115
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	80 81       	ld	r24, Z
    320e:	88 23       	and	r24, r24
    3210:	09 f0       	breq	.+2      	; 0x3214 <SSDLT_enuClearDisplay+0x474>
    3212:	f4 c1       	rjmp	.+1000   	; 0x35fc <SSDLT_enuClearDisplay+0x85c>
		{
			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APort,
    3214:	88 85       	ldd	r24, Y+8	; 0x08
    3216:	48 2f       	mov	r20, r24
    3218:	50 e0       	ldi	r21, 0x00	; 0
    321a:	ca 01       	movw	r24, r20
    321c:	88 0f       	add	r24, r24
    321e:	99 1f       	adc	r25, r25
    3220:	9c 01       	movw	r18, r24
    3222:	22 0f       	add	r18, r18
    3224:	33 1f       	adc	r19, r19
    3226:	22 0f       	add	r18, r18
    3228:	33 1f       	adc	r19, r19
    322a:	22 0f       	add	r18, r18
    322c:	33 1f       	adc	r19, r19
    322e:	82 0f       	add	r24, r18
    3230:	93 1f       	adc	r25, r19
    3232:	84 0f       	add	r24, r20
    3234:	95 1f       	adc	r25, r21
    3236:	fc 01       	movw	r30, r24
    3238:	e5 58       	subi	r30, 0x85	; 133
    323a:	ff 4f       	sbci	r31, 0xFF	; 255
    323c:	60 81       	ld	r22, Z
    323e:	88 85       	ldd	r24, Y+8	; 0x08
    3240:	48 2f       	mov	r20, r24
    3242:	50 e0       	ldi	r21, 0x00	; 0
    3244:	ca 01       	movw	r24, r20
    3246:	88 0f       	add	r24, r24
    3248:	99 1f       	adc	r25, r25
    324a:	9c 01       	movw	r18, r24
    324c:	22 0f       	add	r18, r18
    324e:	33 1f       	adc	r19, r19
    3250:	22 0f       	add	r18, r18
    3252:	33 1f       	adc	r19, r19
    3254:	22 0f       	add	r18, r18
    3256:	33 1f       	adc	r19, r19
    3258:	82 0f       	add	r24, r18
    325a:	93 1f       	adc	r25, r19
    325c:	84 0f       	add	r24, r20
    325e:	95 1f       	adc	r25, r21
    3260:	fc 01       	movw	r30, r24
    3262:	e4 58       	subi	r30, 0x84	; 132
    3264:	ff 4f       	sbci	r31, 0xFF	; 255
    3266:	90 81       	ld	r25, Z
    3268:	86 2f       	mov	r24, r22
    326a:	69 2f       	mov	r22, r25
    326c:	41 e0       	ldi	r20, 0x01	; 1
    326e:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3272:	28 2f       	mov	r18, r24
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	40 e0       	ldi	r20, 0x00	; 0
    3278:	50 e0       	ldi	r21, 0x00	; 0
    327a:	89 81       	ldd	r24, Y+1	; 0x01
    327c:	9a 81       	ldd	r25, Y+2	; 0x02
    327e:	ab 81       	ldd	r26, Y+3	; 0x03
    3280:	bc 81       	ldd	r27, Y+4	; 0x04
    3282:	82 2b       	or	r24, r18
    3284:	93 2b       	or	r25, r19
    3286:	a4 2b       	or	r26, r20
    3288:	b5 2b       	or	r27, r21
    328a:	89 83       	std	Y+1, r24	; 0x01
    328c:	9a 83       	std	Y+2, r25	; 0x02
    328e:	ab 83       	std	Y+3, r26	; 0x03
    3290:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	      SSD_AstrSegConfig[Copy_u8SegID].SEG_u8APin,
											   	  DIO_u8HIGH) << 0);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPort,
    3292:	88 85       	ldd	r24, Y+8	; 0x08
    3294:	48 2f       	mov	r20, r24
    3296:	50 e0       	ldi	r21, 0x00	; 0
    3298:	ca 01       	movw	r24, r20
    329a:	88 0f       	add	r24, r24
    329c:	99 1f       	adc	r25, r25
    329e:	9c 01       	movw	r18, r24
    32a0:	22 0f       	add	r18, r18
    32a2:	33 1f       	adc	r19, r19
    32a4:	22 0f       	add	r18, r18
    32a6:	33 1f       	adc	r19, r19
    32a8:	22 0f       	add	r18, r18
    32aa:	33 1f       	adc	r19, r19
    32ac:	82 0f       	add	r24, r18
    32ae:	93 1f       	adc	r25, r19
    32b0:	84 0f       	add	r24, r20
    32b2:	95 1f       	adc	r25, r21
    32b4:	fc 01       	movw	r30, r24
    32b6:	e3 58       	subi	r30, 0x83	; 131
    32b8:	ff 4f       	sbci	r31, 0xFF	; 255
    32ba:	60 81       	ld	r22, Z
    32bc:	88 85       	ldd	r24, Y+8	; 0x08
    32be:	48 2f       	mov	r20, r24
    32c0:	50 e0       	ldi	r21, 0x00	; 0
    32c2:	ca 01       	movw	r24, r20
    32c4:	88 0f       	add	r24, r24
    32c6:	99 1f       	adc	r25, r25
    32c8:	9c 01       	movw	r18, r24
    32ca:	22 0f       	add	r18, r18
    32cc:	33 1f       	adc	r19, r19
    32ce:	22 0f       	add	r18, r18
    32d0:	33 1f       	adc	r19, r19
    32d2:	22 0f       	add	r18, r18
    32d4:	33 1f       	adc	r19, r19
    32d6:	82 0f       	add	r24, r18
    32d8:	93 1f       	adc	r25, r19
    32da:	84 0f       	add	r24, r20
    32dc:	95 1f       	adc	r25, r21
    32de:	fc 01       	movw	r30, r24
    32e0:	e2 58       	subi	r30, 0x82	; 130
    32e2:	ff 4f       	sbci	r31, 0xFF	; 255
    32e4:	90 81       	ld	r25, Z
    32e6:	86 2f       	mov	r24, r22
    32e8:	69 2f       	mov	r22, r25
    32ea:	41 e0       	ldi	r20, 0x01	; 1
    32ec:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    32f0:	88 2f       	mov	r24, r24
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	88 0f       	add	r24, r24
    32f6:	99 1f       	adc	r25, r25
    32f8:	88 0f       	add	r24, r24
    32fa:	99 1f       	adc	r25, r25
    32fc:	88 0f       	add	r24, r24
    32fe:	99 1f       	adc	r25, r25
    3300:	9c 01       	movw	r18, r24
    3302:	44 27       	eor	r20, r20
    3304:	37 fd       	sbrc	r19, 7
    3306:	40 95       	com	r20
    3308:	54 2f       	mov	r21, r20
    330a:	89 81       	ldd	r24, Y+1	; 0x01
    330c:	9a 81       	ldd	r25, Y+2	; 0x02
    330e:	ab 81       	ldd	r26, Y+3	; 0x03
    3310:	bc 81       	ldd	r27, Y+4	; 0x04
    3312:	82 2b       	or	r24, r18
    3314:	93 2b       	or	r25, r19
    3316:	a4 2b       	or	r26, r20
    3318:	b5 2b       	or	r27, r21
    331a:	89 83       	std	Y+1, r24	; 0x01
    331c:	9a 83       	std	Y+2, r25	; 0x02
    331e:	ab 83       	std	Y+3, r26	; 0x03
    3320:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8BPin,
												  DIO_u8HIGH) << 3);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPort,
    3322:	88 85       	ldd	r24, Y+8	; 0x08
    3324:	48 2f       	mov	r20, r24
    3326:	50 e0       	ldi	r21, 0x00	; 0
    3328:	ca 01       	movw	r24, r20
    332a:	88 0f       	add	r24, r24
    332c:	99 1f       	adc	r25, r25
    332e:	9c 01       	movw	r18, r24
    3330:	22 0f       	add	r18, r18
    3332:	33 1f       	adc	r19, r19
    3334:	22 0f       	add	r18, r18
    3336:	33 1f       	adc	r19, r19
    3338:	22 0f       	add	r18, r18
    333a:	33 1f       	adc	r19, r19
    333c:	82 0f       	add	r24, r18
    333e:	93 1f       	adc	r25, r19
    3340:	84 0f       	add	r24, r20
    3342:	95 1f       	adc	r25, r21
    3344:	fc 01       	movw	r30, r24
    3346:	e1 58       	subi	r30, 0x81	; 129
    3348:	ff 4f       	sbci	r31, 0xFF	; 255
    334a:	60 81       	ld	r22, Z
    334c:	88 85       	ldd	r24, Y+8	; 0x08
    334e:	48 2f       	mov	r20, r24
    3350:	50 e0       	ldi	r21, 0x00	; 0
    3352:	ca 01       	movw	r24, r20
    3354:	88 0f       	add	r24, r24
    3356:	99 1f       	adc	r25, r25
    3358:	9c 01       	movw	r18, r24
    335a:	22 0f       	add	r18, r18
    335c:	33 1f       	adc	r19, r19
    335e:	22 0f       	add	r18, r18
    3360:	33 1f       	adc	r19, r19
    3362:	22 0f       	add	r18, r18
    3364:	33 1f       	adc	r19, r19
    3366:	82 0f       	add	r24, r18
    3368:	93 1f       	adc	r25, r19
    336a:	84 0f       	add	r24, r20
    336c:	95 1f       	adc	r25, r21
    336e:	fc 01       	movw	r30, r24
    3370:	e0 58       	subi	r30, 0x80	; 128
    3372:	ff 4f       	sbci	r31, 0xFF	; 255
    3374:	90 81       	ld	r25, Z
    3376:	86 2f       	mov	r24, r22
    3378:	69 2f       	mov	r22, r25
    337a:	41 e0       	ldi	r20, 0x01	; 1
    337c:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3380:	88 2f       	mov	r24, r24
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	00 24       	eor	r0, r0
    3386:	96 95       	lsr	r25
    3388:	87 95       	ror	r24
    338a:	07 94       	ror	r0
    338c:	96 95       	lsr	r25
    338e:	87 95       	ror	r24
    3390:	07 94       	ror	r0
    3392:	98 2f       	mov	r25, r24
    3394:	80 2d       	mov	r24, r0
    3396:	9c 01       	movw	r18, r24
    3398:	44 27       	eor	r20, r20
    339a:	37 fd       	sbrc	r19, 7
    339c:	40 95       	com	r20
    339e:	54 2f       	mov	r21, r20
    33a0:	89 81       	ldd	r24, Y+1	; 0x01
    33a2:	9a 81       	ldd	r25, Y+2	; 0x02
    33a4:	ab 81       	ldd	r26, Y+3	; 0x03
    33a6:	bc 81       	ldd	r27, Y+4	; 0x04
    33a8:	82 2b       	or	r24, r18
    33aa:	93 2b       	or	r25, r19
    33ac:	a4 2b       	or	r26, r20
    33ae:	b5 2b       	or	r27, r21
    33b0:	89 83       	std	Y+1, r24	; 0x01
    33b2:	9a 83       	std	Y+2, r25	; 0x02
    33b4:	ab 83       	std	Y+3, r26	; 0x03
    33b6:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8CPin,
												  DIO_u8HIGH) << 6);

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPort,
    33b8:	88 85       	ldd	r24, Y+8	; 0x08
    33ba:	48 2f       	mov	r20, r24
    33bc:	50 e0       	ldi	r21, 0x00	; 0
    33be:	ca 01       	movw	r24, r20
    33c0:	88 0f       	add	r24, r24
    33c2:	99 1f       	adc	r25, r25
    33c4:	9c 01       	movw	r18, r24
    33c6:	22 0f       	add	r18, r18
    33c8:	33 1f       	adc	r19, r19
    33ca:	22 0f       	add	r18, r18
    33cc:	33 1f       	adc	r19, r19
    33ce:	22 0f       	add	r18, r18
    33d0:	33 1f       	adc	r19, r19
    33d2:	82 0f       	add	r24, r18
    33d4:	93 1f       	adc	r25, r19
    33d6:	84 0f       	add	r24, r20
    33d8:	95 1f       	adc	r25, r21
    33da:	fc 01       	movw	r30, r24
    33dc:	ef 57       	subi	r30, 0x7F	; 127
    33de:	ff 4f       	sbci	r31, 0xFF	; 255
    33e0:	60 81       	ld	r22, Z
    33e2:	88 85       	ldd	r24, Y+8	; 0x08
    33e4:	48 2f       	mov	r20, r24
    33e6:	50 e0       	ldi	r21, 0x00	; 0
    33e8:	ca 01       	movw	r24, r20
    33ea:	88 0f       	add	r24, r24
    33ec:	99 1f       	adc	r25, r25
    33ee:	9c 01       	movw	r18, r24
    33f0:	22 0f       	add	r18, r18
    33f2:	33 1f       	adc	r19, r19
    33f4:	22 0f       	add	r18, r18
    33f6:	33 1f       	adc	r19, r19
    33f8:	22 0f       	add	r18, r18
    33fa:	33 1f       	adc	r19, r19
    33fc:	82 0f       	add	r24, r18
    33fe:	93 1f       	adc	r25, r19
    3400:	84 0f       	add	r24, r20
    3402:	95 1f       	adc	r25, r21
    3404:	fc 01       	movw	r30, r24
    3406:	ee 57       	subi	r30, 0x7E	; 126
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	90 81       	ld	r25, Z
    340c:	86 2f       	mov	r24, r22
    340e:	69 2f       	mov	r22, r25
    3410:	41 e0       	ldi	r20, 0x01	; 1
    3412:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3416:	88 2f       	mov	r24, r24
    3418:	90 e0       	ldi	r25, 0x00	; 0
    341a:	98 2f       	mov	r25, r24
    341c:	88 27       	eor	r24, r24
    341e:	99 0f       	add	r25, r25
    3420:	9c 01       	movw	r18, r24
    3422:	44 27       	eor	r20, r20
    3424:	37 fd       	sbrc	r19, 7
    3426:	40 95       	com	r20
    3428:	54 2f       	mov	r21, r20
    342a:	89 81       	ldd	r24, Y+1	; 0x01
    342c:	9a 81       	ldd	r25, Y+2	; 0x02
    342e:	ab 81       	ldd	r26, Y+3	; 0x03
    3430:	bc 81       	ldd	r27, Y+4	; 0x04
    3432:	82 2b       	or	r24, r18
    3434:	93 2b       	or	r25, r19
    3436:	a4 2b       	or	r26, r20
    3438:	b5 2b       	or	r27, r21
    343a:	89 83       	std	Y+1, r24	; 0x01
    343c:	9a 83       	std	Y+2, r25	; 0x02
    343e:	ab 83       	std	Y+3, r26	; 0x03
    3440:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DPin,
												  DIO_u8HIGH) << 9) ;

			Local_u32Check |= (DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPort,
    3442:	88 85       	ldd	r24, Y+8	; 0x08
    3444:	48 2f       	mov	r20, r24
    3446:	50 e0       	ldi	r21, 0x00	; 0
    3448:	ca 01       	movw	r24, r20
    344a:	88 0f       	add	r24, r24
    344c:	99 1f       	adc	r25, r25
    344e:	9c 01       	movw	r18, r24
    3450:	22 0f       	add	r18, r18
    3452:	33 1f       	adc	r19, r19
    3454:	22 0f       	add	r18, r18
    3456:	33 1f       	adc	r19, r19
    3458:	22 0f       	add	r18, r18
    345a:	33 1f       	adc	r19, r19
    345c:	82 0f       	add	r24, r18
    345e:	93 1f       	adc	r25, r19
    3460:	84 0f       	add	r24, r20
    3462:	95 1f       	adc	r25, r21
    3464:	fc 01       	movw	r30, r24
    3466:	ed 57       	subi	r30, 0x7D	; 125
    3468:	ff 4f       	sbci	r31, 0xFF	; 255
    346a:	60 81       	ld	r22, Z
    346c:	88 85       	ldd	r24, Y+8	; 0x08
    346e:	48 2f       	mov	r20, r24
    3470:	50 e0       	ldi	r21, 0x00	; 0
    3472:	ca 01       	movw	r24, r20
    3474:	88 0f       	add	r24, r24
    3476:	99 1f       	adc	r25, r25
    3478:	9c 01       	movw	r18, r24
    347a:	22 0f       	add	r18, r18
    347c:	33 1f       	adc	r19, r19
    347e:	22 0f       	add	r18, r18
    3480:	33 1f       	adc	r19, r19
    3482:	22 0f       	add	r18, r18
    3484:	33 1f       	adc	r19, r19
    3486:	82 0f       	add	r24, r18
    3488:	93 1f       	adc	r25, r19
    348a:	84 0f       	add	r24, r20
    348c:	95 1f       	adc	r25, r21
    348e:	fc 01       	movw	r30, r24
    3490:	ec 57       	subi	r30, 0x7C	; 124
    3492:	ff 4f       	sbci	r31, 0xFF	; 255
    3494:	90 81       	ld	r25, Z
    3496:	86 2f       	mov	r24, r22
    3498:	69 2f       	mov	r22, r25
    349a:	41 e0       	ldi	r20, 0x01	; 1
    349c:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    34a0:	88 2f       	mov	r24, r24
    34a2:	90 e0       	ldi	r25, 0x00	; 0
    34a4:	98 2f       	mov	r25, r24
    34a6:	88 27       	eor	r24, r24
    34a8:	92 95       	swap	r25
    34aa:	90 7f       	andi	r25, 0xF0	; 240
    34ac:	9c 01       	movw	r18, r24
    34ae:	44 27       	eor	r20, r20
    34b0:	37 fd       	sbrc	r19, 7
    34b2:	40 95       	com	r20
    34b4:	54 2f       	mov	r21, r20
    34b6:	89 81       	ldd	r24, Y+1	; 0x01
    34b8:	9a 81       	ldd	r25, Y+2	; 0x02
    34ba:	ab 81       	ldd	r26, Y+3	; 0x03
    34bc:	bc 81       	ldd	r27, Y+4	; 0x04
    34be:	82 2b       	or	r24, r18
    34c0:	93 2b       	or	r25, r19
    34c2:	a4 2b       	or	r26, r20
    34c4:	b5 2b       	or	r27, r21
    34c6:	89 83       	std	Y+1, r24	; 0x01
    34c8:	9a 83       	std	Y+2, r25	; 0x02
    34ca:	ab 83       	std	Y+3, r26	; 0x03
    34cc:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8EPin,
												  DIO_u8HIGH) << 12);

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPort,
    34ce:	88 85       	ldd	r24, Y+8	; 0x08
    34d0:	48 2f       	mov	r20, r24
    34d2:	50 e0       	ldi	r21, 0x00	; 0
    34d4:	ca 01       	movw	r24, r20
    34d6:	88 0f       	add	r24, r24
    34d8:	99 1f       	adc	r25, r25
    34da:	9c 01       	movw	r18, r24
    34dc:	22 0f       	add	r18, r18
    34de:	33 1f       	adc	r19, r19
    34e0:	22 0f       	add	r18, r18
    34e2:	33 1f       	adc	r19, r19
    34e4:	22 0f       	add	r18, r18
    34e6:	33 1f       	adc	r19, r19
    34e8:	82 0f       	add	r24, r18
    34ea:	93 1f       	adc	r25, r19
    34ec:	84 0f       	add	r24, r20
    34ee:	95 1f       	adc	r25, r21
    34f0:	fc 01       	movw	r30, r24
    34f2:	eb 57       	subi	r30, 0x7B	; 123
    34f4:	ff 4f       	sbci	r31, 0xFF	; 255
    34f6:	60 81       	ld	r22, Z
    34f8:	88 85       	ldd	r24, Y+8	; 0x08
    34fa:	48 2f       	mov	r20, r24
    34fc:	50 e0       	ldi	r21, 0x00	; 0
    34fe:	ca 01       	movw	r24, r20
    3500:	88 0f       	add	r24, r24
    3502:	99 1f       	adc	r25, r25
    3504:	9c 01       	movw	r18, r24
    3506:	22 0f       	add	r18, r18
    3508:	33 1f       	adc	r19, r19
    350a:	22 0f       	add	r18, r18
    350c:	33 1f       	adc	r19, r19
    350e:	22 0f       	add	r18, r18
    3510:	33 1f       	adc	r19, r19
    3512:	82 0f       	add	r24, r18
    3514:	93 1f       	adc	r25, r19
    3516:	84 0f       	add	r24, r20
    3518:	95 1f       	adc	r25, r21
    351a:	fc 01       	movw	r30, r24
    351c:	ea 57       	subi	r30, 0x7A	; 122
    351e:	ff 4f       	sbci	r31, 0xFF	; 255
    3520:	90 81       	ld	r25, Z
    3522:	86 2f       	mov	r24, r22
    3524:	69 2f       	mov	r22, r25
    3526:	41 e0       	ldi	r20, 0x01	; 1
    3528:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    352c:	88 2f       	mov	r24, r24
    352e:	90 e0       	ldi	r25, 0x00	; 0
    3530:	a0 e0       	ldi	r26, 0x00	; 0
    3532:	b0 e0       	ldi	r27, 0x00	; 0
    3534:	9c 01       	movw	r18, r24
    3536:	ad 01       	movw	r20, r26
    3538:	01 2e       	mov	r0, r17
    353a:	1f e0       	ldi	r17, 0x0F	; 15
    353c:	22 0f       	add	r18, r18
    353e:	33 1f       	adc	r19, r19
    3540:	44 1f       	adc	r20, r20
    3542:	55 1f       	adc	r21, r21
    3544:	1a 95       	dec	r17
    3546:	d1 f7       	brne	.-12     	; 0x353c <SSDLT_enuClearDisplay+0x79c>
    3548:	10 2d       	mov	r17, r0
    354a:	89 81       	ldd	r24, Y+1	; 0x01
    354c:	9a 81       	ldd	r25, Y+2	; 0x02
    354e:	ab 81       	ldd	r26, Y+3	; 0x03
    3550:	bc 81       	ldd	r27, Y+4	; 0x04
    3552:	82 2b       	or	r24, r18
    3554:	93 2b       	or	r25, r19
    3556:	a4 2b       	or	r26, r20
    3558:	b5 2b       	or	r27, r21
    355a:	89 83       	std	Y+1, r24	; 0x01
    355c:	9a 83       	std	Y+2, r25	; 0x02
    355e:	ab 83       	std	Y+3, r26	; 0x03
    3560:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8FPin,
												  DIO_u8HIGH) << 15));

			Local_u32Check |= (((u32)DIO_enuSetPinValue(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPort,
    3562:	88 85       	ldd	r24, Y+8	; 0x08
    3564:	48 2f       	mov	r20, r24
    3566:	50 e0       	ldi	r21, 0x00	; 0
    3568:	ca 01       	movw	r24, r20
    356a:	88 0f       	add	r24, r24
    356c:	99 1f       	adc	r25, r25
    356e:	9c 01       	movw	r18, r24
    3570:	22 0f       	add	r18, r18
    3572:	33 1f       	adc	r19, r19
    3574:	22 0f       	add	r18, r18
    3576:	33 1f       	adc	r19, r19
    3578:	22 0f       	add	r18, r18
    357a:	33 1f       	adc	r19, r19
    357c:	82 0f       	add	r24, r18
    357e:	93 1f       	adc	r25, r19
    3580:	84 0f       	add	r24, r20
    3582:	95 1f       	adc	r25, r21
    3584:	fc 01       	movw	r30, r24
    3586:	e9 57       	subi	r30, 0x79	; 121
    3588:	ff 4f       	sbci	r31, 0xFF	; 255
    358a:	60 81       	ld	r22, Z
    358c:	88 85       	ldd	r24, Y+8	; 0x08
    358e:	48 2f       	mov	r20, r24
    3590:	50 e0       	ldi	r21, 0x00	; 0
    3592:	ca 01       	movw	r24, r20
    3594:	88 0f       	add	r24, r24
    3596:	99 1f       	adc	r25, r25
    3598:	9c 01       	movw	r18, r24
    359a:	22 0f       	add	r18, r18
    359c:	33 1f       	adc	r19, r19
    359e:	22 0f       	add	r18, r18
    35a0:	33 1f       	adc	r19, r19
    35a2:	22 0f       	add	r18, r18
    35a4:	33 1f       	adc	r19, r19
    35a6:	82 0f       	add	r24, r18
    35a8:	93 1f       	adc	r25, r19
    35aa:	84 0f       	add	r24, r20
    35ac:	95 1f       	adc	r25, r21
    35ae:	fc 01       	movw	r30, r24
    35b0:	e8 57       	subi	r30, 0x78	; 120
    35b2:	ff 4f       	sbci	r31, 0xFF	; 255
    35b4:	90 81       	ld	r25, Z
    35b6:	86 2f       	mov	r24, r22
    35b8:	69 2f       	mov	r22, r25
    35ba:	41 e0       	ldi	r20, 0x01	; 1
    35bc:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    35c0:	88 2f       	mov	r24, r24
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	a0 e0       	ldi	r26, 0x00	; 0
    35c6:	b0 e0       	ldi	r27, 0x00	; 0
    35c8:	9c 01       	movw	r18, r24
    35ca:	ad 01       	movw	r20, r26
    35cc:	01 2e       	mov	r0, r17
    35ce:	12 e1       	ldi	r17, 0x12	; 18
    35d0:	22 0f       	add	r18, r18
    35d2:	33 1f       	adc	r19, r19
    35d4:	44 1f       	adc	r20, r20
    35d6:	55 1f       	adc	r21, r21
    35d8:	1a 95       	dec	r17
    35da:	d1 f7       	brne	.-12     	; 0x35d0 <SSDLT_enuClearDisplay+0x830>
    35dc:	10 2d       	mov	r17, r0
    35de:	89 81       	ldd	r24, Y+1	; 0x01
    35e0:	9a 81       	ldd	r25, Y+2	; 0x02
    35e2:	ab 81       	ldd	r26, Y+3	; 0x03
    35e4:	bc 81       	ldd	r27, Y+4	; 0x04
    35e6:	82 2b       	or	r24, r18
    35e8:	93 2b       	or	r25, r19
    35ea:	a4 2b       	or	r26, r20
    35ec:	b5 2b       	or	r27, r21
    35ee:	89 83       	std	Y+1, r24	; 0x01
    35f0:	9a 83       	std	Y+2, r25	; 0x02
    35f2:	ab 83       	std	Y+3, r26	; 0x03
    35f4:	bc 83       	std	Y+4, r27	; 0x04
							   	   	   	   	   	  SSD_AstrSegConfig[Copy_u8SegID].SEG_u8GPin,
												  DIO_u8HIGH) << 18));
			Local_u8LastBit = 18;
    35f6:	82 e1       	ldi	r24, 0x12	; 18
    35f8:	8d 83       	std	Y+5, r24	; 0x05
    35fa:	05 c0       	rjmp	.+10     	; 0x3606 <SSDLT_enuClearDisplay+0x866>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    35fc:	83 e0       	ldi	r24, 0x03	; 3
    35fe:	8f 83       	std	Y+7, r24	; 0x07
    3600:	02 c0       	rjmp	.+4      	; 0x3606 <SSDLT_enuClearDisplay+0x866>
		}
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    3602:	83 e0       	ldi	r24, 0x03	; 3
    3604:	8f 83       	std	Y+7, r24	; 0x07
	}

	if(SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Port != NOT_CONNECTED ||
    3606:	88 85       	ldd	r24, Y+8	; 0x08
    3608:	48 2f       	mov	r20, r24
    360a:	50 e0       	ldi	r21, 0x00	; 0
    360c:	ca 01       	movw	r24, r20
    360e:	88 0f       	add	r24, r24
    3610:	99 1f       	adc	r25, r25
    3612:	9c 01       	movw	r18, r24
    3614:	22 0f       	add	r18, r18
    3616:	33 1f       	adc	r19, r19
    3618:	22 0f       	add	r18, r18
    361a:	33 1f       	adc	r19, r19
    361c:	22 0f       	add	r18, r18
    361e:	33 1f       	adc	r19, r19
    3620:	82 0f       	add	r24, r18
    3622:	93 1f       	adc	r25, r19
    3624:	84 0f       	add	r24, r20
    3626:	95 1f       	adc	r25, r21
    3628:	fc 01       	movw	r30, r24
    362a:	e5 57       	subi	r30, 0x75	; 117
    362c:	ff 4f       	sbci	r31, 0xFF	; 255
    362e:	80 81       	ld	r24, Z
    3630:	82 30       	cpi	r24, 0x02	; 2
    3632:	b9 f4       	brne	.+46     	; 0x3662 <SSDLT_enuClearDisplay+0x8c2>
    3634:	88 85       	ldd	r24, Y+8	; 0x08
    3636:	48 2f       	mov	r20, r24
    3638:	50 e0       	ldi	r21, 0x00	; 0
    363a:	ca 01       	movw	r24, r20
    363c:	88 0f       	add	r24, r24
    363e:	99 1f       	adc	r25, r25
    3640:	9c 01       	movw	r18, r24
    3642:	22 0f       	add	r18, r18
    3644:	33 1f       	adc	r19, r19
    3646:	22 0f       	add	r18, r18
    3648:	33 1f       	adc	r19, r19
    364a:	22 0f       	add	r18, r18
    364c:	33 1f       	adc	r19, r19
    364e:	82 0f       	add	r24, r18
    3650:	93 1f       	adc	r25, r19
    3652:	84 0f       	add	r24, r20
    3654:	95 1f       	adc	r25, r21
    3656:	fc 01       	movw	r30, r24
    3658:	e4 57       	subi	r30, 0x74	; 116
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	80 81       	ld	r24, Z
    365e:	82 30       	cpi	r24, 0x02	; 2
    3660:	01 f1       	breq	.+64     	; 0x36a2 <SSDLT_enuClearDisplay+0x902>
		SSD_AstrSegConfig[Copy_u8SegID].SEG_u8DOT_Pin != NOT_CONNECTED)
	{
		Local_u32Check |= (((u32)(SSDLT_enuDisableDot(Copy_u8SegID)) << 21));
    3662:	88 85       	ldd	r24, Y+8	; 0x08
    3664:	0e 94 fb 15 	call	0x2bf6	; 0x2bf6 <SSDLT_enuDisableDot>
    3668:	88 2f       	mov	r24, r24
    366a:	90 e0       	ldi	r25, 0x00	; 0
    366c:	a0 e0       	ldi	r26, 0x00	; 0
    366e:	b0 e0       	ldi	r27, 0x00	; 0
    3670:	9c 01       	movw	r18, r24
    3672:	ad 01       	movw	r20, r26
    3674:	01 2e       	mov	r0, r17
    3676:	15 e1       	ldi	r17, 0x15	; 21
    3678:	22 0f       	add	r18, r18
    367a:	33 1f       	adc	r19, r19
    367c:	44 1f       	adc	r20, r20
    367e:	55 1f       	adc	r21, r21
    3680:	1a 95       	dec	r17
    3682:	d1 f7       	brne	.-12     	; 0x3678 <SSDLT_enuClearDisplay+0x8d8>
    3684:	10 2d       	mov	r17, r0
    3686:	89 81       	ldd	r24, Y+1	; 0x01
    3688:	9a 81       	ldd	r25, Y+2	; 0x02
    368a:	ab 81       	ldd	r26, Y+3	; 0x03
    368c:	bc 81       	ldd	r27, Y+4	; 0x04
    368e:	82 2b       	or	r24, r18
    3690:	93 2b       	or	r25, r19
    3692:	a4 2b       	or	r26, r20
    3694:	b5 2b       	or	r27, r21
    3696:	89 83       	std	Y+1, r24	; 0x01
    3698:	9a 83       	std	Y+2, r25	; 0x02
    369a:	ab 83       	std	Y+3, r26	; 0x03
    369c:	bc 83       	std	Y+4, r27	; 0x04
		Local_u8LastBit = 24;
    369e:	88 e1       	ldi	r24, 0x18	; 24
    36a0:	8d 83       	std	Y+5, r24	; 0x05
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    36a2:	1e 82       	std	Y+6, r1	; 0x06
    36a4:	1e c0       	rjmp	.+60     	; 0x36e2 <SSDLT_enuClearDisplay+0x942>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    36a6:	8e 81       	ldd	r24, Y+6	; 0x06
    36a8:	28 2f       	mov	r18, r24
    36aa:	30 e0       	ldi	r19, 0x00	; 0
    36ac:	89 81       	ldd	r24, Y+1	; 0x01
    36ae:	9a 81       	ldd	r25, Y+2	; 0x02
    36b0:	ab 81       	ldd	r26, Y+3	; 0x03
    36b2:	bc 81       	ldd	r27, Y+4	; 0x04
    36b4:	02 2e       	mov	r0, r18
    36b6:	04 c0       	rjmp	.+8      	; 0x36c0 <SSDLT_enuClearDisplay+0x920>
    36b8:	b6 95       	lsr	r27
    36ba:	a7 95       	ror	r26
    36bc:	97 95       	ror	r25
    36be:	87 95       	ror	r24
    36c0:	0a 94       	dec	r0
    36c2:	d2 f7       	brpl	.-12     	; 0x36b8 <SSDLT_enuClearDisplay+0x918>
    36c4:	87 70       	andi	r24, 0x07	; 7
    36c6:	90 70       	andi	r25, 0x00	; 0
    36c8:	a0 70       	andi	r26, 0x00	; 0
    36ca:	b0 70       	andi	r27, 0x00	; 0
    36cc:	81 30       	cpi	r24, 0x01	; 1
    36ce:	91 05       	cpc	r25, r1
    36d0:	a1 05       	cpc	r26, r1
    36d2:	b1 05       	cpc	r27, r1
    36d4:	19 f0       	breq	.+6      	; 0x36dc <SSDLT_enuClearDisplay+0x93c>
		{
			return Local_enuErrorState;
    36d6:	8f 81       	ldd	r24, Y+7	; 0x07
    36d8:	89 87       	std	Y+9, r24	; 0x09
    36da:	0b c0       	rjmp	.+22     	; 0x36f2 <SSDLT_enuClearDisplay+0x952>
	{
		Local_u32Check |= (((u32)(SSDLT_enuDisableDot(Copy_u8SegID)) << 21));
		Local_u8LastBit = 24;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < Local_u8LastBit; Local_u8Iterator += 3)
    36dc:	8e 81       	ldd	r24, Y+6	; 0x06
    36de:	8d 5f       	subi	r24, 0xFD	; 253
    36e0:	8e 83       	std	Y+6, r24	; 0x06
    36e2:	9e 81       	ldd	r25, Y+6	; 0x06
    36e4:	8d 81       	ldd	r24, Y+5	; 0x05
    36e6:	98 17       	cp	r25, r24
    36e8:	f0 f2       	brcs	.-68     	; 0x36a6 <SSDLT_enuClearDisplay+0x906>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    36ea:	81 e0       	ldi	r24, 0x01	; 1
    36ec:	8f 83       	std	Y+7, r24	; 0x07

	return Local_enuErrorState;
    36ee:	8f 81       	ldd	r24, Y+7	; 0x07
    36f0:	89 87       	std	Y+9, r24	; 0x09
    36f2:	89 85       	ldd	r24, Y+9	; 0x09
}
    36f4:	29 96       	adiw	r28, 0x09	; 9
    36f6:	0f b6       	in	r0, 0x3f	; 63
    36f8:	f8 94       	cli
    36fa:	de bf       	out	0x3e, r29	; 62
    36fc:	0f be       	out	0x3f, r0	; 63
    36fe:	cd bf       	out	0x3d, r28	; 61
    3700:	cf 91       	pop	r28
    3702:	df 91       	pop	r29
    3704:	08 95       	ret

00003706 <SSD_enuInit>:
#include "../../MCAL/DIO/DIO_int.h"
#include "SSD_config.h"
#include "SSD_private.h"

ES_t SSD_enuInit(void)
{
    3706:	df 93       	push	r29
    3708:	cf 93       	push	r28
    370a:	cd b7       	in	r28, 0x3d	; 61
    370c:	de b7       	in	r29, 0x3e	; 62
    370e:	27 97       	sbiw	r28, 0x07	; 7
    3710:	0f b6       	in	r0, 0x3f	; 63
    3712:	f8 94       	cli
    3714:	de bf       	out	0x3e, r29	; 62
    3716:	0f be       	out	0x3f, r0	; 63
    3718:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    371a:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    371c:	1a 82       	std	Y+2, r1	; 0x02
    371e:	1b 82       	std	Y+3, r1	; 0x03
    3720:	1c 82       	std	Y+4, r1	; 0x04
    3722:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    3724:	19 82       	std	Y+1, r1	; 0x01

	Local_u32Check |= (DIO_enuSetPinDirection(SEG_APORT, SEG_APIN, DIO_u8OUTPUT) << 0);
    3726:	80 e0       	ldi	r24, 0x00	; 0
    3728:	60 e0       	ldi	r22, 0x00	; 0
    372a:	41 e0       	ldi	r20, 0x01	; 1
    372c:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3730:	28 2f       	mov	r18, r24
    3732:	30 e0       	ldi	r19, 0x00	; 0
    3734:	40 e0       	ldi	r20, 0x00	; 0
    3736:	50 e0       	ldi	r21, 0x00	; 0
    3738:	8a 81       	ldd	r24, Y+2	; 0x02
    373a:	9b 81       	ldd	r25, Y+3	; 0x03
    373c:	ac 81       	ldd	r26, Y+4	; 0x04
    373e:	bd 81       	ldd	r27, Y+5	; 0x05
    3740:	82 2b       	or	r24, r18
    3742:	93 2b       	or	r25, r19
    3744:	a4 2b       	or	r26, r20
    3746:	b5 2b       	or	r27, r21
    3748:	8a 83       	std	Y+2, r24	; 0x02
    374a:	9b 83       	std	Y+3, r25	; 0x03
    374c:	ac 83       	std	Y+4, r26	; 0x04
    374e:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_BPORT, SEG_BPIN, DIO_u8OUTPUT) << 3);
    3750:	80 e0       	ldi	r24, 0x00	; 0
    3752:	61 e0       	ldi	r22, 0x01	; 1
    3754:	41 e0       	ldi	r20, 0x01	; 1
    3756:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    375a:	88 2f       	mov	r24, r24
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	88 0f       	add	r24, r24
    3760:	99 1f       	adc	r25, r25
    3762:	88 0f       	add	r24, r24
    3764:	99 1f       	adc	r25, r25
    3766:	88 0f       	add	r24, r24
    3768:	99 1f       	adc	r25, r25
    376a:	9c 01       	movw	r18, r24
    376c:	44 27       	eor	r20, r20
    376e:	37 fd       	sbrc	r19, 7
    3770:	40 95       	com	r20
    3772:	54 2f       	mov	r21, r20
    3774:	8a 81       	ldd	r24, Y+2	; 0x02
    3776:	9b 81       	ldd	r25, Y+3	; 0x03
    3778:	ac 81       	ldd	r26, Y+4	; 0x04
    377a:	bd 81       	ldd	r27, Y+5	; 0x05
    377c:	82 2b       	or	r24, r18
    377e:	93 2b       	or	r25, r19
    3780:	a4 2b       	or	r26, r20
    3782:	b5 2b       	or	r27, r21
    3784:	8a 83       	std	Y+2, r24	; 0x02
    3786:	9b 83       	std	Y+3, r25	; 0x03
    3788:	ac 83       	std	Y+4, r26	; 0x04
    378a:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_CPORT, SEG_CPIN, DIO_u8OUTPUT) << 6);
    378c:	80 e0       	ldi	r24, 0x00	; 0
    378e:	62 e0       	ldi	r22, 0x02	; 2
    3790:	41 e0       	ldi	r20, 0x01	; 1
    3792:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3796:	88 2f       	mov	r24, r24
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	00 24       	eor	r0, r0
    379c:	96 95       	lsr	r25
    379e:	87 95       	ror	r24
    37a0:	07 94       	ror	r0
    37a2:	96 95       	lsr	r25
    37a4:	87 95       	ror	r24
    37a6:	07 94       	ror	r0
    37a8:	98 2f       	mov	r25, r24
    37aa:	80 2d       	mov	r24, r0
    37ac:	9c 01       	movw	r18, r24
    37ae:	44 27       	eor	r20, r20
    37b0:	37 fd       	sbrc	r19, 7
    37b2:	40 95       	com	r20
    37b4:	54 2f       	mov	r21, r20
    37b6:	8a 81       	ldd	r24, Y+2	; 0x02
    37b8:	9b 81       	ldd	r25, Y+3	; 0x03
    37ba:	ac 81       	ldd	r26, Y+4	; 0x04
    37bc:	bd 81       	ldd	r27, Y+5	; 0x05
    37be:	82 2b       	or	r24, r18
    37c0:	93 2b       	or	r25, r19
    37c2:	a4 2b       	or	r26, r20
    37c4:	b5 2b       	or	r27, r21
    37c6:	8a 83       	std	Y+2, r24	; 0x02
    37c8:	9b 83       	std	Y+3, r25	; 0x03
    37ca:	ac 83       	std	Y+4, r26	; 0x04
    37cc:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_DPORT, SEG_DPIN, DIO_u8OUTPUT) << 9);
    37ce:	81 e0       	ldi	r24, 0x01	; 1
    37d0:	60 e0       	ldi	r22, 0x00	; 0
    37d2:	41 e0       	ldi	r20, 0x01	; 1
    37d4:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    37d8:	88 2f       	mov	r24, r24
    37da:	90 e0       	ldi	r25, 0x00	; 0
    37dc:	98 2f       	mov	r25, r24
    37de:	88 27       	eor	r24, r24
    37e0:	99 0f       	add	r25, r25
    37e2:	9c 01       	movw	r18, r24
    37e4:	44 27       	eor	r20, r20
    37e6:	37 fd       	sbrc	r19, 7
    37e8:	40 95       	com	r20
    37ea:	54 2f       	mov	r21, r20
    37ec:	8a 81       	ldd	r24, Y+2	; 0x02
    37ee:	9b 81       	ldd	r25, Y+3	; 0x03
    37f0:	ac 81       	ldd	r26, Y+4	; 0x04
    37f2:	bd 81       	ldd	r27, Y+5	; 0x05
    37f4:	82 2b       	or	r24, r18
    37f6:	93 2b       	or	r25, r19
    37f8:	a4 2b       	or	r26, r20
    37fa:	b5 2b       	or	r27, r21
    37fc:	8a 83       	std	Y+2, r24	; 0x02
    37fe:	9b 83       	std	Y+3, r25	; 0x03
    3800:	ac 83       	std	Y+4, r26	; 0x04
    3802:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (DIO_enuSetPinDirection(SEG_EPORT, SEG_EPIN, DIO_u8OUTPUT) << 12);
    3804:	81 e0       	ldi	r24, 0x01	; 1
    3806:	61 e0       	ldi	r22, 0x01	; 1
    3808:	41 e0       	ldi	r20, 0x01	; 1
    380a:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    380e:	88 2f       	mov	r24, r24
    3810:	90 e0       	ldi	r25, 0x00	; 0
    3812:	98 2f       	mov	r25, r24
    3814:	88 27       	eor	r24, r24
    3816:	92 95       	swap	r25
    3818:	90 7f       	andi	r25, 0xF0	; 240
    381a:	9c 01       	movw	r18, r24
    381c:	44 27       	eor	r20, r20
    381e:	37 fd       	sbrc	r19, 7
    3820:	40 95       	com	r20
    3822:	54 2f       	mov	r21, r20
    3824:	8a 81       	ldd	r24, Y+2	; 0x02
    3826:	9b 81       	ldd	r25, Y+3	; 0x03
    3828:	ac 81       	ldd	r26, Y+4	; 0x04
    382a:	bd 81       	ldd	r27, Y+5	; 0x05
    382c:	82 2b       	or	r24, r18
    382e:	93 2b       	or	r25, r19
    3830:	a4 2b       	or	r26, r20
    3832:	b5 2b       	or	r27, r21
    3834:	8a 83       	std	Y+2, r24	; 0x02
    3836:	9b 83       	std	Y+3, r25	; 0x03
    3838:	ac 83       	std	Y+4, r26	; 0x04
    383a:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_GPORT, SEG_GPIN, DIO_u8OUTPUT)) << 15);
    383c:	81 e0       	ldi	r24, 0x01	; 1
    383e:	63 e0       	ldi	r22, 0x03	; 3
    3840:	41 e0       	ldi	r20, 0x01	; 1
    3842:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3846:	88 2f       	mov	r24, r24
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	a0 e0       	ldi	r26, 0x00	; 0
    384c:	b0 e0       	ldi	r27, 0x00	; 0
    384e:	9c 01       	movw	r18, r24
    3850:	ad 01       	movw	r20, r26
    3852:	01 2e       	mov	r0, r17
    3854:	1f e0       	ldi	r17, 0x0F	; 15
    3856:	22 0f       	add	r18, r18
    3858:	33 1f       	adc	r19, r19
    385a:	44 1f       	adc	r20, r20
    385c:	55 1f       	adc	r21, r21
    385e:	1a 95       	dec	r17
    3860:	d1 f7       	brne	.-12     	; 0x3856 <SSD_enuInit+0x150>
    3862:	10 2d       	mov	r17, r0
    3864:	8a 81       	ldd	r24, Y+2	; 0x02
    3866:	9b 81       	ldd	r25, Y+3	; 0x03
    3868:	ac 81       	ldd	r26, Y+4	; 0x04
    386a:	bd 81       	ldd	r27, Y+5	; 0x05
    386c:	82 2b       	or	r24, r18
    386e:	93 2b       	or	r25, r19
    3870:	a4 2b       	or	r26, r20
    3872:	b5 2b       	or	r27, r21
    3874:	8a 83       	std	Y+2, r24	; 0x02
    3876:	9b 83       	std	Y+3, r25	; 0x03
    3878:	ac 83       	std	Y+4, r26	; 0x04
    387a:	bd 83       	std	Y+5, r27	; 0x05
	Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_GPORT, SEG_GPIN, DIO_u8OUTPUT)) << 18);
    387c:	81 e0       	ldi	r24, 0x01	; 1
    387e:	63 e0       	ldi	r22, 0x03	; 3
    3880:	41 e0       	ldi	r20, 0x01	; 1
    3882:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3886:	88 2f       	mov	r24, r24
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	a0 e0       	ldi	r26, 0x00	; 0
    388c:	b0 e0       	ldi	r27, 0x00	; 0
    388e:	9c 01       	movw	r18, r24
    3890:	ad 01       	movw	r20, r26
    3892:	01 2e       	mov	r0, r17
    3894:	12 e1       	ldi	r17, 0x12	; 18
    3896:	22 0f       	add	r18, r18
    3898:	33 1f       	adc	r19, r19
    389a:	44 1f       	adc	r20, r20
    389c:	55 1f       	adc	r21, r21
    389e:	1a 95       	dec	r17
    38a0:	d1 f7       	brne	.-12     	; 0x3896 <SSD_enuInit+0x190>
    38a2:	10 2d       	mov	r17, r0
    38a4:	8a 81       	ldd	r24, Y+2	; 0x02
    38a6:	9b 81       	ldd	r25, Y+3	; 0x03
    38a8:	ac 81       	ldd	r26, Y+4	; 0x04
    38aa:	bd 81       	ldd	r27, Y+5	; 0x05
    38ac:	82 2b       	or	r24, r18
    38ae:	93 2b       	or	r25, r19
    38b0:	a4 2b       	or	r26, r20
    38b2:	b5 2b       	or	r27, r21
    38b4:	8a 83       	std	Y+2, r24	; 0x02
    38b6:	9b 83       	std	Y+3, r25	; 0x03
    38b8:	ac 83       	std	Y+4, r26	; 0x04
    38ba:	bd 83       	std	Y+5, r27	; 0x05
	 *  	0000 0000 0000 0100 1001 0010 0100 1001
	 * */

	//Because we work as pre compile config we will use #if
	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8OUTPUT)) << 21);
    38bc:	82 e0       	ldi	r24, 0x02	; 2
    38be:	62 e0       	ldi	r22, 0x02	; 2
    38c0:	41 e0       	ldi	r20, 0x01	; 1
    38c2:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    38c6:	88 2f       	mov	r24, r24
    38c8:	90 e0       	ldi	r25, 0x00	; 0
    38ca:	a0 e0       	ldi	r26, 0x00	; 0
    38cc:	b0 e0       	ldi	r27, 0x00	; 0
    38ce:	9c 01       	movw	r18, r24
    38d0:	ad 01       	movw	r20, r26
    38d2:	01 2e       	mov	r0, r17
    38d4:	15 e1       	ldi	r17, 0x15	; 21
    38d6:	22 0f       	add	r18, r18
    38d8:	33 1f       	adc	r19, r19
    38da:	44 1f       	adc	r20, r20
    38dc:	55 1f       	adc	r21, r21
    38de:	1a 95       	dec	r17
    38e0:	d1 f7       	brne	.-12     	; 0x38d6 <SSD_enuInit+0x1d0>
    38e2:	10 2d       	mov	r17, r0
    38e4:	8a 81       	ldd	r24, Y+2	; 0x02
    38e6:	9b 81       	ldd	r25, Y+3	; 0x03
    38e8:	ac 81       	ldd	r26, Y+4	; 0x04
    38ea:	bd 81       	ldd	r27, Y+5	; 0x05
    38ec:	82 2b       	or	r24, r18
    38ee:	93 2b       	or	r25, r19
    38f0:	a4 2b       	or	r26, r20
    38f2:	b5 2b       	or	r27, r21
    38f4:	8a 83       	std	Y+2, r24	; 0x02
    38f6:	9b 83       	std	Y+3, r25	; 0x03
    38f8:	ac 83       	std	Y+4, r26	; 0x04
    38fa:	bd 83       	std	Y+5, r27	; 0x05
	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		Local_u32Check |= (((u32)DIO_enuSetPinDirection(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8OUTPUT)) << 24);
    38fc:	82 e0       	ldi	r24, 0x02	; 2
    38fe:	62 e0       	ldi	r22, 0x02	; 2
    3900:	41 e0       	ldi	r20, 0x01	; 1
    3902:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3906:	88 2f       	mov	r24, r24
    3908:	90 e0       	ldi	r25, 0x00	; 0
    390a:	a0 e0       	ldi	r26, 0x00	; 0
    390c:	b0 e0       	ldi	r27, 0x00	; 0
    390e:	58 2f       	mov	r21, r24
    3910:	44 27       	eor	r20, r20
    3912:	33 27       	eor	r19, r19
    3914:	22 27       	eor	r18, r18
    3916:	8a 81       	ldd	r24, Y+2	; 0x02
    3918:	9b 81       	ldd	r25, Y+3	; 0x03
    391a:	ac 81       	ldd	r26, Y+4	; 0x04
    391c:	bd 81       	ldd	r27, Y+5	; 0x05
    391e:	82 2b       	or	r24, r18
    3920:	93 2b       	or	r25, r19
    3922:	a4 2b       	or	r26, r20
    3924:	b5 2b       	or	r27, r21
    3926:	8a 83       	std	Y+2, r24	; 0x02
    3928:	9b 83       	std	Y+3, r25	; 0x03
    392a:	ac 83       	std	Y+4, r26	; 0x04
    392c:	bd 83       	std	Y+5, r27	; 0x05
	#else
		#error "Your DOT pin has a wrong selection!"
	#endif


	for(Local_u8Iterator = 0; Local_u8Iterator < 27; Local_u8Iterator += 3)
    392e:	19 82       	std	Y+1, r1	; 0x01
    3930:	1e c0       	rjmp	.+60     	; 0x396e <SSD_enuInit+0x268>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    3932:	89 81       	ldd	r24, Y+1	; 0x01
    3934:	28 2f       	mov	r18, r24
    3936:	30 e0       	ldi	r19, 0x00	; 0
    3938:	8a 81       	ldd	r24, Y+2	; 0x02
    393a:	9b 81       	ldd	r25, Y+3	; 0x03
    393c:	ac 81       	ldd	r26, Y+4	; 0x04
    393e:	bd 81       	ldd	r27, Y+5	; 0x05
    3940:	02 2e       	mov	r0, r18
    3942:	04 c0       	rjmp	.+8      	; 0x394c <SSD_enuInit+0x246>
    3944:	b6 95       	lsr	r27
    3946:	a7 95       	ror	r26
    3948:	97 95       	ror	r25
    394a:	87 95       	ror	r24
    394c:	0a 94       	dec	r0
    394e:	d2 f7       	brpl	.-12     	; 0x3944 <SSD_enuInit+0x23e>
    3950:	87 70       	andi	r24, 0x07	; 7
    3952:	90 70       	andi	r25, 0x00	; 0
    3954:	a0 70       	andi	r26, 0x00	; 0
    3956:	b0 70       	andi	r27, 0x00	; 0
    3958:	81 30       	cpi	r24, 0x01	; 1
    395a:	91 05       	cpc	r25, r1
    395c:	a1 05       	cpc	r26, r1
    395e:	b1 05       	cpc	r27, r1
    3960:	19 f0       	breq	.+6      	; 0x3968 <SSD_enuInit+0x262>
		{
			return Local_enuErrorState;
    3962:	8e 81       	ldd	r24, Y+6	; 0x06
    3964:	8f 83       	std	Y+7, r24	; 0x07
    3966:	0a c0       	rjmp	.+20     	; 0x397c <SSD_enuInit+0x276>
	#else
		#error "Your DOT pin has a wrong selection!"
	#endif


	for(Local_u8Iterator = 0; Local_u8Iterator < 27; Local_u8Iterator += 3)
    3968:	89 81       	ldd	r24, Y+1	; 0x01
    396a:	8d 5f       	subi	r24, 0xFD	; 253
    396c:	89 83       	std	Y+1, r24	; 0x01
    396e:	89 81       	ldd	r24, Y+1	; 0x01
    3970:	8b 31       	cpi	r24, 0x1B	; 27
    3972:	f8 f2       	brcs	.-66     	; 0x3932 <SSD_enuInit+0x22c>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    3974:	81 e0       	ldi	r24, 0x01	; 1
    3976:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    3978:	8e 81       	ldd	r24, Y+6	; 0x06
    397a:	8f 83       	std	Y+7, r24	; 0x07
    397c:	8f 81       	ldd	r24, Y+7	; 0x07
}
    397e:	27 96       	adiw	r28, 0x07	; 7
    3980:	0f b6       	in	r0, 0x3f	; 63
    3982:	f8 94       	cli
    3984:	de bf       	out	0x3e, r29	; 62
    3986:	0f be       	out	0x3f, r0	; 63
    3988:	cd bf       	out	0x3d, r28	; 61
    398a:	cf 91       	pop	r28
    398c:	df 91       	pop	r29
    398e:	08 95       	ret

00003990 <SSD_enuDisplayNum>:

ES_t SSD_enuDisplayNum(u8 Copy_u8Number)
{
    3990:	df 93       	push	r29
    3992:	cf 93       	push	r28
    3994:	cd b7       	in	r28, 0x3d	; 61
    3996:	de b7       	in	r29, 0x3e	; 62
    3998:	28 97       	sbiw	r28, 0x08	; 8
    399a:	0f b6       	in	r0, 0x3f	; 63
    399c:	f8 94       	cli
    399e:	de bf       	out	0x3e, r29	; 62
    39a0:	0f be       	out	0x3f, r0	; 63
    39a2:	cd bf       	out	0x3d, r28	; 61
    39a4:	8f 83       	std	Y+7, r24	; 0x07
	ES_t Local_enuErrorState = ES_NOK;
    39a6:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    39a8:	1a 82       	std	Y+2, r1	; 0x02
    39aa:	1b 82       	std	Y+3, r1	; 0x03
    39ac:	1c 82       	std	Y+4, r1	; 0x04
    39ae:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    39b0:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Number < 10)
    39b2:	8f 81       	ldd	r24, Y+7	; 0x07
    39b4:	8a 30       	cpi	r24, 0x0A	; 10
    39b6:	08 f0       	brcs	.+2      	; 0x39ba <SSD_enuDisplayNum+0x2a>
    39b8:	1b c1       	rjmp	.+566    	; 0x3bf0 <SSD_enuDisplayNum+0x260>
	{
		#if SEG_TYPE == COMMON_CATHODE
			Local_u32Check |= (DIO_enuSetPinValue(SEG_APORT, SEG_APIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 0) & 1)) << 0);
    39ba:	8f 81       	ldd	r24, Y+7	; 0x07
    39bc:	88 2f       	mov	r24, r24
    39be:	90 e0       	ldi	r25, 0x00	; 0
    39c0:	fc 01       	movw	r30, r24
    39c2:	e5 55       	subi	r30, 0x55	; 85
    39c4:	ff 4f       	sbci	r31, 0xFF	; 255
    39c6:	80 81       	ld	r24, Z
    39c8:	98 2f       	mov	r25, r24
    39ca:	91 70       	andi	r25, 0x01	; 1
    39cc:	80 e0       	ldi	r24, 0x00	; 0
    39ce:	60 e0       	ldi	r22, 0x00	; 0
    39d0:	49 2f       	mov	r20, r25
    39d2:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    39d6:	28 2f       	mov	r18, r24
    39d8:	30 e0       	ldi	r19, 0x00	; 0
    39da:	40 e0       	ldi	r20, 0x00	; 0
    39dc:	50 e0       	ldi	r21, 0x00	; 0
    39de:	8a 81       	ldd	r24, Y+2	; 0x02
    39e0:	9b 81       	ldd	r25, Y+3	; 0x03
    39e2:	ac 81       	ldd	r26, Y+4	; 0x04
    39e4:	bd 81       	ldd	r27, Y+5	; 0x05
    39e6:	82 2b       	or	r24, r18
    39e8:	93 2b       	or	r25, r19
    39ea:	a4 2b       	or	r26, r20
    39ec:	b5 2b       	or	r27, r21
    39ee:	8a 83       	std	Y+2, r24	; 0x02
    39f0:	9b 83       	std	Y+3, r25	; 0x03
    39f2:	ac 83       	std	Y+4, r26	; 0x04
    39f4:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_BPORT, SEG_BPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 1) & 1)) << 3);
    39f6:	8f 81       	ldd	r24, Y+7	; 0x07
    39f8:	88 2f       	mov	r24, r24
    39fa:	90 e0       	ldi	r25, 0x00	; 0
    39fc:	fc 01       	movw	r30, r24
    39fe:	e5 55       	subi	r30, 0x55	; 85
    3a00:	ff 4f       	sbci	r31, 0xFF	; 255
    3a02:	80 81       	ld	r24, Z
    3a04:	86 95       	lsr	r24
    3a06:	98 2f       	mov	r25, r24
    3a08:	91 70       	andi	r25, 0x01	; 1
    3a0a:	80 e0       	ldi	r24, 0x00	; 0
    3a0c:	61 e0       	ldi	r22, 0x01	; 1
    3a0e:	49 2f       	mov	r20, r25
    3a10:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3a14:	88 2f       	mov	r24, r24
    3a16:	90 e0       	ldi	r25, 0x00	; 0
    3a18:	88 0f       	add	r24, r24
    3a1a:	99 1f       	adc	r25, r25
    3a1c:	88 0f       	add	r24, r24
    3a1e:	99 1f       	adc	r25, r25
    3a20:	88 0f       	add	r24, r24
    3a22:	99 1f       	adc	r25, r25
    3a24:	9c 01       	movw	r18, r24
    3a26:	44 27       	eor	r20, r20
    3a28:	37 fd       	sbrc	r19, 7
    3a2a:	40 95       	com	r20
    3a2c:	54 2f       	mov	r21, r20
    3a2e:	8a 81       	ldd	r24, Y+2	; 0x02
    3a30:	9b 81       	ldd	r25, Y+3	; 0x03
    3a32:	ac 81       	ldd	r26, Y+4	; 0x04
    3a34:	bd 81       	ldd	r27, Y+5	; 0x05
    3a36:	82 2b       	or	r24, r18
    3a38:	93 2b       	or	r25, r19
    3a3a:	a4 2b       	or	r26, r20
    3a3c:	b5 2b       	or	r27, r21
    3a3e:	8a 83       	std	Y+2, r24	; 0x02
    3a40:	9b 83       	std	Y+3, r25	; 0x03
    3a42:	ac 83       	std	Y+4, r26	; 0x04
    3a44:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_CPORT, SEG_CPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 2) & 1)) << 6);
    3a46:	8f 81       	ldd	r24, Y+7	; 0x07
    3a48:	88 2f       	mov	r24, r24
    3a4a:	90 e0       	ldi	r25, 0x00	; 0
    3a4c:	fc 01       	movw	r30, r24
    3a4e:	e5 55       	subi	r30, 0x55	; 85
    3a50:	ff 4f       	sbci	r31, 0xFF	; 255
    3a52:	80 81       	ld	r24, Z
    3a54:	86 95       	lsr	r24
    3a56:	86 95       	lsr	r24
    3a58:	98 2f       	mov	r25, r24
    3a5a:	91 70       	andi	r25, 0x01	; 1
    3a5c:	80 e0       	ldi	r24, 0x00	; 0
    3a5e:	62 e0       	ldi	r22, 0x02	; 2
    3a60:	49 2f       	mov	r20, r25
    3a62:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3a66:	88 2f       	mov	r24, r24
    3a68:	90 e0       	ldi	r25, 0x00	; 0
    3a6a:	00 24       	eor	r0, r0
    3a6c:	96 95       	lsr	r25
    3a6e:	87 95       	ror	r24
    3a70:	07 94       	ror	r0
    3a72:	96 95       	lsr	r25
    3a74:	87 95       	ror	r24
    3a76:	07 94       	ror	r0
    3a78:	98 2f       	mov	r25, r24
    3a7a:	80 2d       	mov	r24, r0
    3a7c:	9c 01       	movw	r18, r24
    3a7e:	44 27       	eor	r20, r20
    3a80:	37 fd       	sbrc	r19, 7
    3a82:	40 95       	com	r20
    3a84:	54 2f       	mov	r21, r20
    3a86:	8a 81       	ldd	r24, Y+2	; 0x02
    3a88:	9b 81       	ldd	r25, Y+3	; 0x03
    3a8a:	ac 81       	ldd	r26, Y+4	; 0x04
    3a8c:	bd 81       	ldd	r27, Y+5	; 0x05
    3a8e:	82 2b       	or	r24, r18
    3a90:	93 2b       	or	r25, r19
    3a92:	a4 2b       	or	r26, r20
    3a94:	b5 2b       	or	r27, r21
    3a96:	8a 83       	std	Y+2, r24	; 0x02
    3a98:	9b 83       	std	Y+3, r25	; 0x03
    3a9a:	ac 83       	std	Y+4, r26	; 0x04
    3a9c:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_DPORT, SEG_DPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 3) & 1)) << 9);
    3a9e:	8f 81       	ldd	r24, Y+7	; 0x07
    3aa0:	88 2f       	mov	r24, r24
    3aa2:	90 e0       	ldi	r25, 0x00	; 0
    3aa4:	fc 01       	movw	r30, r24
    3aa6:	e5 55       	subi	r30, 0x55	; 85
    3aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aaa:	80 81       	ld	r24, Z
    3aac:	86 95       	lsr	r24
    3aae:	86 95       	lsr	r24
    3ab0:	86 95       	lsr	r24
    3ab2:	98 2f       	mov	r25, r24
    3ab4:	91 70       	andi	r25, 0x01	; 1
    3ab6:	81 e0       	ldi	r24, 0x01	; 1
    3ab8:	60 e0       	ldi	r22, 0x00	; 0
    3aba:	49 2f       	mov	r20, r25
    3abc:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3ac0:	88 2f       	mov	r24, r24
    3ac2:	90 e0       	ldi	r25, 0x00	; 0
    3ac4:	98 2f       	mov	r25, r24
    3ac6:	88 27       	eor	r24, r24
    3ac8:	99 0f       	add	r25, r25
    3aca:	9c 01       	movw	r18, r24
    3acc:	44 27       	eor	r20, r20
    3ace:	37 fd       	sbrc	r19, 7
    3ad0:	40 95       	com	r20
    3ad2:	54 2f       	mov	r21, r20
    3ad4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ad6:	9b 81       	ldd	r25, Y+3	; 0x03
    3ad8:	ac 81       	ldd	r26, Y+4	; 0x04
    3ada:	bd 81       	ldd	r27, Y+5	; 0x05
    3adc:	82 2b       	or	r24, r18
    3ade:	93 2b       	or	r25, r19
    3ae0:	a4 2b       	or	r26, r20
    3ae2:	b5 2b       	or	r27, r21
    3ae4:	8a 83       	std	Y+2, r24	; 0x02
    3ae6:	9b 83       	std	Y+3, r25	; 0x03
    3ae8:	ac 83       	std	Y+4, r26	; 0x04
    3aea:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (DIO_enuSetPinValue(SEG_EPORT, SEG_EPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 4) & 1)) << 12);
    3aec:	8f 81       	ldd	r24, Y+7	; 0x07
    3aee:	88 2f       	mov	r24, r24
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	fc 01       	movw	r30, r24
    3af4:	e5 55       	subi	r30, 0x55	; 85
    3af6:	ff 4f       	sbci	r31, 0xFF	; 255
    3af8:	80 81       	ld	r24, Z
    3afa:	82 95       	swap	r24
    3afc:	8f 70       	andi	r24, 0x0F	; 15
    3afe:	98 2f       	mov	r25, r24
    3b00:	91 70       	andi	r25, 0x01	; 1
    3b02:	81 e0       	ldi	r24, 0x01	; 1
    3b04:	61 e0       	ldi	r22, 0x01	; 1
    3b06:	49 2f       	mov	r20, r25
    3b08:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3b0c:	88 2f       	mov	r24, r24
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	98 2f       	mov	r25, r24
    3b12:	88 27       	eor	r24, r24
    3b14:	92 95       	swap	r25
    3b16:	90 7f       	andi	r25, 0xF0	; 240
    3b18:	9c 01       	movw	r18, r24
    3b1a:	44 27       	eor	r20, r20
    3b1c:	37 fd       	sbrc	r19, 7
    3b1e:	40 95       	com	r20
    3b20:	54 2f       	mov	r21, r20
    3b22:	8a 81       	ldd	r24, Y+2	; 0x02
    3b24:	9b 81       	ldd	r25, Y+3	; 0x03
    3b26:	ac 81       	ldd	r26, Y+4	; 0x04
    3b28:	bd 81       	ldd	r27, Y+5	; 0x05
    3b2a:	82 2b       	or	r24, r18
    3b2c:	93 2b       	or	r25, r19
    3b2e:	a4 2b       	or	r26, r20
    3b30:	b5 2b       	or	r27, r21
    3b32:	8a 83       	std	Y+2, r24	; 0x02
    3b34:	9b 83       	std	Y+3, r25	; 0x03
    3b36:	ac 83       	std	Y+4, r26	; 0x04
    3b38:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_FPORT, SEG_FPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 5) & 1))) << 15);
    3b3a:	8f 81       	ldd	r24, Y+7	; 0x07
    3b3c:	88 2f       	mov	r24, r24
    3b3e:	90 e0       	ldi	r25, 0x00	; 0
    3b40:	fc 01       	movw	r30, r24
    3b42:	e5 55       	subi	r30, 0x55	; 85
    3b44:	ff 4f       	sbci	r31, 0xFF	; 255
    3b46:	80 81       	ld	r24, Z
    3b48:	82 95       	swap	r24
    3b4a:	86 95       	lsr	r24
    3b4c:	87 70       	andi	r24, 0x07	; 7
    3b4e:	98 2f       	mov	r25, r24
    3b50:	91 70       	andi	r25, 0x01	; 1
    3b52:	81 e0       	ldi	r24, 0x01	; 1
    3b54:	62 e0       	ldi	r22, 0x02	; 2
    3b56:	49 2f       	mov	r20, r25
    3b58:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3b5c:	88 2f       	mov	r24, r24
    3b5e:	90 e0       	ldi	r25, 0x00	; 0
    3b60:	a0 e0       	ldi	r26, 0x00	; 0
    3b62:	b0 e0       	ldi	r27, 0x00	; 0
    3b64:	9c 01       	movw	r18, r24
    3b66:	ad 01       	movw	r20, r26
    3b68:	01 2e       	mov	r0, r17
    3b6a:	1f e0       	ldi	r17, 0x0F	; 15
    3b6c:	22 0f       	add	r18, r18
    3b6e:	33 1f       	adc	r19, r19
    3b70:	44 1f       	adc	r20, r20
    3b72:	55 1f       	adc	r21, r21
    3b74:	1a 95       	dec	r17
    3b76:	d1 f7       	brne	.-12     	; 0x3b6c <SSD_enuDisplayNum+0x1dc>
    3b78:	10 2d       	mov	r17, r0
    3b7a:	8a 81       	ldd	r24, Y+2	; 0x02
    3b7c:	9b 81       	ldd	r25, Y+3	; 0x03
    3b7e:	ac 81       	ldd	r26, Y+4	; 0x04
    3b80:	bd 81       	ldd	r27, Y+5	; 0x05
    3b82:	82 2b       	or	r24, r18
    3b84:	93 2b       	or	r25, r19
    3b86:	a4 2b       	or	r26, r20
    3b88:	b5 2b       	or	r27, r21
    3b8a:	8a 83       	std	Y+2, r24	; 0x02
    3b8c:	9b 83       	std	Y+3, r25	; 0x03
    3b8e:	ac 83       	std	Y+4, r26	; 0x04
    3b90:	bd 83       	std	Y+5, r27	; 0x05
			Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,((SSD_Au8ComCathodeNumDisplay[Copy_u8Number] >> 6) & 1))) << 18);
    3b92:	8f 81       	ldd	r24, Y+7	; 0x07
    3b94:	88 2f       	mov	r24, r24
    3b96:	90 e0       	ldi	r25, 0x00	; 0
    3b98:	fc 01       	movw	r30, r24
    3b9a:	e5 55       	subi	r30, 0x55	; 85
    3b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9e:	80 81       	ld	r24, Z
    3ba0:	82 95       	swap	r24
    3ba2:	86 95       	lsr	r24
    3ba4:	86 95       	lsr	r24
    3ba6:	83 70       	andi	r24, 0x03	; 3
    3ba8:	98 2f       	mov	r25, r24
    3baa:	91 70       	andi	r25, 0x01	; 1
    3bac:	81 e0       	ldi	r24, 0x01	; 1
    3bae:	63 e0       	ldi	r22, 0x03	; 3
    3bb0:	49 2f       	mov	r20, r25
    3bb2:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3bb6:	88 2f       	mov	r24, r24
    3bb8:	90 e0       	ldi	r25, 0x00	; 0
    3bba:	a0 e0       	ldi	r26, 0x00	; 0
    3bbc:	b0 e0       	ldi	r27, 0x00	; 0
    3bbe:	9c 01       	movw	r18, r24
    3bc0:	ad 01       	movw	r20, r26
    3bc2:	01 2e       	mov	r0, r17
    3bc4:	12 e1       	ldi	r17, 0x12	; 18
    3bc6:	22 0f       	add	r18, r18
    3bc8:	33 1f       	adc	r19, r19
    3bca:	44 1f       	adc	r20, r20
    3bcc:	55 1f       	adc	r21, r21
    3bce:	1a 95       	dec	r17
    3bd0:	d1 f7       	brne	.-12     	; 0x3bc6 <SSD_enuDisplayNum+0x236>
    3bd2:	10 2d       	mov	r17, r0
    3bd4:	8a 81       	ldd	r24, Y+2	; 0x02
    3bd6:	9b 81       	ldd	r25, Y+3	; 0x03
    3bd8:	ac 81       	ldd	r26, Y+4	; 0x04
    3bda:	bd 81       	ldd	r27, Y+5	; 0x05
    3bdc:	82 2b       	or	r24, r18
    3bde:	93 2b       	or	r25, r19
    3be0:	a4 2b       	or	r26, r20
    3be2:	b5 2b       	or	r27, r21
    3be4:	8a 83       	std	Y+2, r24	; 0x02
    3be6:	9b 83       	std	Y+3, r25	; 0x03
    3be8:	ac 83       	std	Y+4, r26	; 0x04
    3bea:	bd 83       	std	Y+5, r27	; 0x05
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    3bec:	19 82       	std	Y+1, r1	; 0x01
    3bee:	21 c0       	rjmp	.+66     	; 0x3c32 <SSD_enuDisplayNum+0x2a2>
			#error "Your type selection is invalid!"
		#endif
	}
	else
	{
		return ES_OUT_OF_RANGE;
    3bf0:	83 e0       	ldi	r24, 0x03	; 3
    3bf2:	88 87       	std	Y+8, r24	; 0x08
    3bf4:	25 c0       	rjmp	.+74     	; 0x3c40 <SSD_enuDisplayNum+0x2b0>
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    3bf6:	89 81       	ldd	r24, Y+1	; 0x01
    3bf8:	28 2f       	mov	r18, r24
    3bfa:	30 e0       	ldi	r19, 0x00	; 0
    3bfc:	8a 81       	ldd	r24, Y+2	; 0x02
    3bfe:	9b 81       	ldd	r25, Y+3	; 0x03
    3c00:	ac 81       	ldd	r26, Y+4	; 0x04
    3c02:	bd 81       	ldd	r27, Y+5	; 0x05
    3c04:	02 2e       	mov	r0, r18
    3c06:	04 c0       	rjmp	.+8      	; 0x3c10 <SSD_enuDisplayNum+0x280>
    3c08:	b6 95       	lsr	r27
    3c0a:	a7 95       	ror	r26
    3c0c:	97 95       	ror	r25
    3c0e:	87 95       	ror	r24
    3c10:	0a 94       	dec	r0
    3c12:	d2 f7       	brpl	.-12     	; 0x3c08 <SSD_enuDisplayNum+0x278>
    3c14:	87 70       	andi	r24, 0x07	; 7
    3c16:	90 70       	andi	r25, 0x00	; 0
    3c18:	a0 70       	andi	r26, 0x00	; 0
    3c1a:	b0 70       	andi	r27, 0x00	; 0
    3c1c:	81 30       	cpi	r24, 0x01	; 1
    3c1e:	91 05       	cpc	r25, r1
    3c20:	a1 05       	cpc	r26, r1
    3c22:	b1 05       	cpc	r27, r1
    3c24:	19 f0       	breq	.+6      	; 0x3c2c <SSD_enuDisplayNum+0x29c>
		{
			return Local_enuErrorState;
    3c26:	8e 81       	ldd	r24, Y+6	; 0x06
    3c28:	88 87       	std	Y+8, r24	; 0x08
    3c2a:	0a c0       	rjmp	.+20     	; 0x3c40 <SSD_enuDisplayNum+0x2b0>
	else
	{
		return ES_OUT_OF_RANGE;
	}

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    3c2c:	89 81       	ldd	r24, Y+1	; 0x01
    3c2e:	8d 5f       	subi	r24, 0xFD	; 253
    3c30:	89 83       	std	Y+1, r24	; 0x01
    3c32:	89 81       	ldd	r24, Y+1	; 0x01
    3c34:	85 31       	cpi	r24, 0x15	; 21
    3c36:	f8 f2       	brcs	.-66     	; 0x3bf6 <SSD_enuDisplayNum+0x266>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    3c38:	81 e0       	ldi	r24, 0x01	; 1
    3c3a:	8e 83       	std	Y+6, r24	; 0x06

	return Local_enuErrorState;
    3c3c:	8e 81       	ldd	r24, Y+6	; 0x06
    3c3e:	88 87       	std	Y+8, r24	; 0x08
    3c40:	88 85       	ldd	r24, Y+8	; 0x08
}
    3c42:	28 96       	adiw	r28, 0x08	; 8
    3c44:	0f b6       	in	r0, 0x3f	; 63
    3c46:	f8 94       	cli
    3c48:	de bf       	out	0x3e, r29	; 62
    3c4a:	0f be       	out	0x3f, r0	; 63
    3c4c:	cd bf       	out	0x3d, r28	; 61
    3c4e:	cf 91       	pop	r28
    3c50:	df 91       	pop	r29
    3c52:	08 95       	ret

00003c54 <SSD_enuEnableCommon>:

ES_t SSD_enuEnableCommon(void)
{
    3c54:	df 93       	push	r29
    3c56:	cf 93       	push	r28
    3c58:	0f 92       	push	r0
    3c5a:	cd b7       	in	r28, 0x3d	; 61
    3c5c:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    3c5e:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8LOW);
    3c60:	82 e0       	ldi	r24, 0x02	; 2
    3c62:	62 e0       	ldi	r22, 0x02	; 2
    3c64:	40 e0       	ldi	r20, 0x00	; 0
    3c66:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3c6a:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    3c6c:	89 81       	ldd	r24, Y+1	; 0x01
}
    3c6e:	0f 90       	pop	r0
    3c70:	cf 91       	pop	r28
    3c72:	df 91       	pop	r29
    3c74:	08 95       	ret

00003c76 <SSD_enuDisableCommon>:

ES_t SSD_enuDisableCommon(void)
{
    3c76:	df 93       	push	r29
    3c78:	cf 93       	push	r28
    3c7a:	0f 92       	push	r0
    3c7c:	cd b7       	in	r28, 0x3d	; 61
    3c7e:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    3c80:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_CMN_PIN <= DIO_u8PIN7 && SEG_CMN_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_CMN_PORT, SEG_CMN_PIN, DIO_u8HIGH);
    3c82:	82 e0       	ldi	r24, 0x02	; 2
    3c84:	62 e0       	ldi	r22, 0x02	; 2
    3c86:	41 e0       	ldi	r20, 0x01	; 1
    3c88:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3c8c:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your Common pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    3c8e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3c90:	0f 90       	pop	r0
    3c92:	cf 91       	pop	r28
    3c94:	df 91       	pop	r29
    3c96:	08 95       	ret

00003c98 <SSD_enuEnableDot>:

ES_t SSD_enuEnableDot(void)
{
    3c98:	df 93       	push	r29
    3c9a:	cf 93       	push	r28
    3c9c:	0f 92       	push	r0
    3c9e:	cd b7       	in	r28, 0x3d	; 61
    3ca0:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    3ca2:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8HIGH);
    3ca4:	82 e0       	ldi	r24, 0x02	; 2
    3ca6:	62 e0       	ldi	r22, 0x02	; 2
    3ca8:	41 e0       	ldi	r20, 0x01	; 1
    3caa:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3cae:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your DOT pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    3cb0:	89 81       	ldd	r24, Y+1	; 0x01
}
    3cb2:	0f 90       	pop	r0
    3cb4:	cf 91       	pop	r28
    3cb6:	df 91       	pop	r29
    3cb8:	08 95       	ret

00003cba <SSD_enuDisableDot>:

ES_t SSD_enuDisableDot(void)
{
    3cba:	df 93       	push	r29
    3cbc:	cf 93       	push	r28
    3cbe:	0f 92       	push	r0
    3cc0:	cd b7       	in	r28, 0x3d	; 61
    3cc2:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    3cc4:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_DOT_PIN <= DIO_u8PIN7 && SEG_DOT_PORT <= DIO_u8PORTD
		#if SEG_TYPE == COMMON_CATHODE
			Local_enuErrorState = DIO_enuSetPinValue(SEG_DOT_PORT, SEG_DOT_PIN, DIO_u8LOW);
    3cc6:	82 e0       	ldi	r24, 0x02	; 2
    3cc8:	62 e0       	ldi	r22, 0x02	; 2
    3cca:	40 e0       	ldi	r20, 0x00	; 0
    3ccc:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3cd0:	89 83       	std	Y+1, r24	; 0x01

	#else
		#error "Your DOT pin has a wrong selection!"
	#endif

	return Local_enuErrorState;
    3cd2:	89 81       	ldd	r24, Y+1	; 0x01
}
    3cd4:	0f 90       	pop	r0
    3cd6:	cf 91       	pop	r28
    3cd8:	df 91       	pop	r29
    3cda:	08 95       	ret

00003cdc <SSD_enuClearDisplay>:

ES_t SSD_enuClearDisplay(void)
{
    3cdc:	df 93       	push	r29
    3cde:	cf 93       	push	r28
    3ce0:	cd b7       	in	r28, 0x3d	; 61
    3ce2:	de b7       	in	r29, 0x3e	; 62
    3ce4:	27 97       	sbiw	r28, 0x07	; 7
    3ce6:	0f b6       	in	r0, 0x3f	; 63
    3ce8:	f8 94       	cli
    3cea:	de bf       	out	0x3e, r29	; 62
    3cec:	0f be       	out	0x3f, r0	; 63
    3cee:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    3cf0:	1e 82       	std	Y+6, r1	; 0x06

	u32 Local_u32Check = 0;
    3cf2:	1a 82       	std	Y+2, r1	; 0x02
    3cf4:	1b 82       	std	Y+3, r1	; 0x03
    3cf6:	1c 82       	std	Y+4, r1	; 0x04
    3cf8:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8Iterator = 0;
    3cfa:	19 82       	std	Y+1, r1	; 0x01

	#if SEG_TYPE == COMMON_CATHODE
		Local_u32Check |= (DIO_enuSetPinValue(SEG_APORT, SEG_APIN,DIO_u8LOW) << 0);
    3cfc:	80 e0       	ldi	r24, 0x00	; 0
    3cfe:	60 e0       	ldi	r22, 0x00	; 0
    3d00:	40 e0       	ldi	r20, 0x00	; 0
    3d02:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3d06:	28 2f       	mov	r18, r24
    3d08:	30 e0       	ldi	r19, 0x00	; 0
    3d0a:	40 e0       	ldi	r20, 0x00	; 0
    3d0c:	50 e0       	ldi	r21, 0x00	; 0
    3d0e:	8a 81       	ldd	r24, Y+2	; 0x02
    3d10:	9b 81       	ldd	r25, Y+3	; 0x03
    3d12:	ac 81       	ldd	r26, Y+4	; 0x04
    3d14:	bd 81       	ldd	r27, Y+5	; 0x05
    3d16:	82 2b       	or	r24, r18
    3d18:	93 2b       	or	r25, r19
    3d1a:	a4 2b       	or	r26, r20
    3d1c:	b5 2b       	or	r27, r21
    3d1e:	8a 83       	std	Y+2, r24	; 0x02
    3d20:	9b 83       	std	Y+3, r25	; 0x03
    3d22:	ac 83       	std	Y+4, r26	; 0x04
    3d24:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_BPORT, SEG_BPIN,DIO_u8LOW) << 3);
    3d26:	80 e0       	ldi	r24, 0x00	; 0
    3d28:	61 e0       	ldi	r22, 0x01	; 1
    3d2a:	40 e0       	ldi	r20, 0x00	; 0
    3d2c:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3d30:	88 2f       	mov	r24, r24
    3d32:	90 e0       	ldi	r25, 0x00	; 0
    3d34:	88 0f       	add	r24, r24
    3d36:	99 1f       	adc	r25, r25
    3d38:	88 0f       	add	r24, r24
    3d3a:	99 1f       	adc	r25, r25
    3d3c:	88 0f       	add	r24, r24
    3d3e:	99 1f       	adc	r25, r25
    3d40:	9c 01       	movw	r18, r24
    3d42:	44 27       	eor	r20, r20
    3d44:	37 fd       	sbrc	r19, 7
    3d46:	40 95       	com	r20
    3d48:	54 2f       	mov	r21, r20
    3d4a:	8a 81       	ldd	r24, Y+2	; 0x02
    3d4c:	9b 81       	ldd	r25, Y+3	; 0x03
    3d4e:	ac 81       	ldd	r26, Y+4	; 0x04
    3d50:	bd 81       	ldd	r27, Y+5	; 0x05
    3d52:	82 2b       	or	r24, r18
    3d54:	93 2b       	or	r25, r19
    3d56:	a4 2b       	or	r26, r20
    3d58:	b5 2b       	or	r27, r21
    3d5a:	8a 83       	std	Y+2, r24	; 0x02
    3d5c:	9b 83       	std	Y+3, r25	; 0x03
    3d5e:	ac 83       	std	Y+4, r26	; 0x04
    3d60:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_CPORT, SEG_CPIN,DIO_u8LOW) << 6);
    3d62:	80 e0       	ldi	r24, 0x00	; 0
    3d64:	62 e0       	ldi	r22, 0x02	; 2
    3d66:	40 e0       	ldi	r20, 0x00	; 0
    3d68:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3d6c:	88 2f       	mov	r24, r24
    3d6e:	90 e0       	ldi	r25, 0x00	; 0
    3d70:	00 24       	eor	r0, r0
    3d72:	96 95       	lsr	r25
    3d74:	87 95       	ror	r24
    3d76:	07 94       	ror	r0
    3d78:	96 95       	lsr	r25
    3d7a:	87 95       	ror	r24
    3d7c:	07 94       	ror	r0
    3d7e:	98 2f       	mov	r25, r24
    3d80:	80 2d       	mov	r24, r0
    3d82:	9c 01       	movw	r18, r24
    3d84:	44 27       	eor	r20, r20
    3d86:	37 fd       	sbrc	r19, 7
    3d88:	40 95       	com	r20
    3d8a:	54 2f       	mov	r21, r20
    3d8c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d8e:	9b 81       	ldd	r25, Y+3	; 0x03
    3d90:	ac 81       	ldd	r26, Y+4	; 0x04
    3d92:	bd 81       	ldd	r27, Y+5	; 0x05
    3d94:	82 2b       	or	r24, r18
    3d96:	93 2b       	or	r25, r19
    3d98:	a4 2b       	or	r26, r20
    3d9a:	b5 2b       	or	r27, r21
    3d9c:	8a 83       	std	Y+2, r24	; 0x02
    3d9e:	9b 83       	std	Y+3, r25	; 0x03
    3da0:	ac 83       	std	Y+4, r26	; 0x04
    3da2:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_DPORT, SEG_DPIN,DIO_u8LOW) << 9);
    3da4:	81 e0       	ldi	r24, 0x01	; 1
    3da6:	60 e0       	ldi	r22, 0x00	; 0
    3da8:	40 e0       	ldi	r20, 0x00	; 0
    3daa:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3dae:	88 2f       	mov	r24, r24
    3db0:	90 e0       	ldi	r25, 0x00	; 0
    3db2:	98 2f       	mov	r25, r24
    3db4:	88 27       	eor	r24, r24
    3db6:	99 0f       	add	r25, r25
    3db8:	9c 01       	movw	r18, r24
    3dba:	44 27       	eor	r20, r20
    3dbc:	37 fd       	sbrc	r19, 7
    3dbe:	40 95       	com	r20
    3dc0:	54 2f       	mov	r21, r20
    3dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    3dc4:	9b 81       	ldd	r25, Y+3	; 0x03
    3dc6:	ac 81       	ldd	r26, Y+4	; 0x04
    3dc8:	bd 81       	ldd	r27, Y+5	; 0x05
    3dca:	82 2b       	or	r24, r18
    3dcc:	93 2b       	or	r25, r19
    3dce:	a4 2b       	or	r26, r20
    3dd0:	b5 2b       	or	r27, r21
    3dd2:	8a 83       	std	Y+2, r24	; 0x02
    3dd4:	9b 83       	std	Y+3, r25	; 0x03
    3dd6:	ac 83       	std	Y+4, r26	; 0x04
    3dd8:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (DIO_enuSetPinValue(SEG_EPORT, SEG_EPIN,DIO_u8LOW) << 12);
    3dda:	81 e0       	ldi	r24, 0x01	; 1
    3ddc:	61 e0       	ldi	r22, 0x01	; 1
    3dde:	40 e0       	ldi	r20, 0x00	; 0
    3de0:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3de4:	88 2f       	mov	r24, r24
    3de6:	90 e0       	ldi	r25, 0x00	; 0
    3de8:	98 2f       	mov	r25, r24
    3dea:	88 27       	eor	r24, r24
    3dec:	92 95       	swap	r25
    3dee:	90 7f       	andi	r25, 0xF0	; 240
    3df0:	9c 01       	movw	r18, r24
    3df2:	44 27       	eor	r20, r20
    3df4:	37 fd       	sbrc	r19, 7
    3df6:	40 95       	com	r20
    3df8:	54 2f       	mov	r21, r20
    3dfa:	8a 81       	ldd	r24, Y+2	; 0x02
    3dfc:	9b 81       	ldd	r25, Y+3	; 0x03
    3dfe:	ac 81       	ldd	r26, Y+4	; 0x04
    3e00:	bd 81       	ldd	r27, Y+5	; 0x05
    3e02:	82 2b       	or	r24, r18
    3e04:	93 2b       	or	r25, r19
    3e06:	a4 2b       	or	r26, r20
    3e08:	b5 2b       	or	r27, r21
    3e0a:	8a 83       	std	Y+2, r24	; 0x02
    3e0c:	9b 83       	std	Y+3, r25	; 0x03
    3e0e:	ac 83       	std	Y+4, r26	; 0x04
    3e10:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_FPORT, SEG_FPIN,DIO_u8LOW)) << 15);
    3e12:	81 e0       	ldi	r24, 0x01	; 1
    3e14:	62 e0       	ldi	r22, 0x02	; 2
    3e16:	40 e0       	ldi	r20, 0x00	; 0
    3e18:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3e1c:	88 2f       	mov	r24, r24
    3e1e:	90 e0       	ldi	r25, 0x00	; 0
    3e20:	a0 e0       	ldi	r26, 0x00	; 0
    3e22:	b0 e0       	ldi	r27, 0x00	; 0
    3e24:	9c 01       	movw	r18, r24
    3e26:	ad 01       	movw	r20, r26
    3e28:	01 2e       	mov	r0, r17
    3e2a:	1f e0       	ldi	r17, 0x0F	; 15
    3e2c:	22 0f       	add	r18, r18
    3e2e:	33 1f       	adc	r19, r19
    3e30:	44 1f       	adc	r20, r20
    3e32:	55 1f       	adc	r21, r21
    3e34:	1a 95       	dec	r17
    3e36:	d1 f7       	brne	.-12     	; 0x3e2c <SSD_enuClearDisplay+0x150>
    3e38:	10 2d       	mov	r17, r0
    3e3a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e3c:	9b 81       	ldd	r25, Y+3	; 0x03
    3e3e:	ac 81       	ldd	r26, Y+4	; 0x04
    3e40:	bd 81       	ldd	r27, Y+5	; 0x05
    3e42:	82 2b       	or	r24, r18
    3e44:	93 2b       	or	r25, r19
    3e46:	a4 2b       	or	r26, r20
    3e48:	b5 2b       	or	r27, r21
    3e4a:	8a 83       	std	Y+2, r24	; 0x02
    3e4c:	9b 83       	std	Y+3, r25	; 0x03
    3e4e:	ac 83       	std	Y+4, r26	; 0x04
    3e50:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8LOW)) << 18);
    3e52:	81 e0       	ldi	r24, 0x01	; 1
    3e54:	63 e0       	ldi	r22, 0x03	; 3
    3e56:	40 e0       	ldi	r20, 0x00	; 0
    3e58:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3e5c:	88 2f       	mov	r24, r24
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	a0 e0       	ldi	r26, 0x00	; 0
    3e62:	b0 e0       	ldi	r27, 0x00	; 0
    3e64:	9c 01       	movw	r18, r24
    3e66:	ad 01       	movw	r20, r26
    3e68:	01 2e       	mov	r0, r17
    3e6a:	12 e1       	ldi	r17, 0x12	; 18
    3e6c:	22 0f       	add	r18, r18
    3e6e:	33 1f       	adc	r19, r19
    3e70:	44 1f       	adc	r20, r20
    3e72:	55 1f       	adc	r21, r21
    3e74:	1a 95       	dec	r17
    3e76:	d1 f7       	brne	.-12     	; 0x3e6c <SSD_enuClearDisplay+0x190>
    3e78:	10 2d       	mov	r17, r0
    3e7a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e7c:	9b 81       	ldd	r25, Y+3	; 0x03
    3e7e:	ac 81       	ldd	r26, Y+4	; 0x04
    3e80:	bd 81       	ldd	r27, Y+5	; 0x05
    3e82:	82 2b       	or	r24, r18
    3e84:	93 2b       	or	r25, r19
    3e86:	a4 2b       	or	r26, r20
    3e88:	b5 2b       	or	r27, r21
    3e8a:	8a 83       	std	Y+2, r24	; 0x02
    3e8c:	9b 83       	std	Y+3, r25	; 0x03
    3e8e:	ac 83       	std	Y+4, r26	; 0x04
    3e90:	bd 83       	std	Y+5, r27	; 0x05
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8HIGH)) << 18);
	#else
		#error "Your type selection is invalid!"
	#endif

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    3e92:	19 82       	std	Y+1, r1	; 0x01
    3e94:	1e c0       	rjmp	.+60     	; 0x3ed2 <SSD_enuClearDisplay+0x1f6>
	{
		if( ( ( (Local_u32Check)>>Local_u8Iterator) & 7) != ES_OK)
    3e96:	89 81       	ldd	r24, Y+1	; 0x01
    3e98:	28 2f       	mov	r18, r24
    3e9a:	30 e0       	ldi	r19, 0x00	; 0
    3e9c:	8a 81       	ldd	r24, Y+2	; 0x02
    3e9e:	9b 81       	ldd	r25, Y+3	; 0x03
    3ea0:	ac 81       	ldd	r26, Y+4	; 0x04
    3ea2:	bd 81       	ldd	r27, Y+5	; 0x05
    3ea4:	02 2e       	mov	r0, r18
    3ea6:	04 c0       	rjmp	.+8      	; 0x3eb0 <SSD_enuClearDisplay+0x1d4>
    3ea8:	b6 95       	lsr	r27
    3eaa:	a7 95       	ror	r26
    3eac:	97 95       	ror	r25
    3eae:	87 95       	ror	r24
    3eb0:	0a 94       	dec	r0
    3eb2:	d2 f7       	brpl	.-12     	; 0x3ea8 <SSD_enuClearDisplay+0x1cc>
    3eb4:	87 70       	andi	r24, 0x07	; 7
    3eb6:	90 70       	andi	r25, 0x00	; 0
    3eb8:	a0 70       	andi	r26, 0x00	; 0
    3eba:	b0 70       	andi	r27, 0x00	; 0
    3ebc:	81 30       	cpi	r24, 0x01	; 1
    3ebe:	91 05       	cpc	r25, r1
    3ec0:	a1 05       	cpc	r26, r1
    3ec2:	b1 05       	cpc	r27, r1
    3ec4:	19 f0       	breq	.+6      	; 0x3ecc <SSD_enuClearDisplay+0x1f0>
		{
			return Local_enuErrorState;
    3ec6:	8e 81       	ldd	r24, Y+6	; 0x06
    3ec8:	8f 83       	std	Y+7, r24	; 0x07
    3eca:	0a c0       	rjmp	.+20     	; 0x3ee0 <SSD_enuClearDisplay+0x204>
		Local_u32Check |= (((u32)DIO_enuSetPinValue(SEG_GPORT, SEG_GPIN,DIO_u8HIGH)) << 18);
	#else
		#error "Your type selection is invalid!"
	#endif

	for(Local_u8Iterator = 0; Local_u8Iterator < 21; Local_u8Iterator += 3)
    3ecc:	89 81       	ldd	r24, Y+1	; 0x01
    3ece:	8d 5f       	subi	r24, 0xFD	; 253
    3ed0:	89 83       	std	Y+1, r24	; 0x01
    3ed2:	89 81       	ldd	r24, Y+1	; 0x01
    3ed4:	85 31       	cpi	r24, 0x15	; 21
    3ed6:	f8 f2       	brcs	.-66     	; 0x3e96 <SSD_enuClearDisplay+0x1ba>
		{
			return Local_enuErrorState;
		}
	}

	Local_enuErrorState = ES_OK;
    3ed8:	81 e0       	ldi	r24, 0x01	; 1
    3eda:	8e 83       	std	Y+6, r24	; 0x06
	return Local_enuErrorState;
    3edc:	8e 81       	ldd	r24, Y+6	; 0x06
    3ede:	8f 83       	std	Y+7, r24	; 0x07
    3ee0:	8f 81       	ldd	r24, Y+7	; 0x07
}
    3ee2:	27 96       	adiw	r28, 0x07	; 7
    3ee4:	0f b6       	in	r0, 0x3f	; 63
    3ee6:	f8 94       	cli
    3ee8:	de bf       	out	0x3e, r29	; 62
    3eea:	0f be       	out	0x3f, r0	; 63
    3eec:	cd bf       	out	0x3d, r28	; 61
    3eee:	cf 91       	pop	r28
    3ef0:	df 91       	pop	r29
    3ef2:	08 95       	ret

00003ef4 <LED_enuInit>:
#include "LED_config.h"

#include "../../MCAL/DIO/DIO_int.h"

ES_t LED_enuInit(LED_t * Copy_pstrLedConfiguration)
{
    3ef4:	df 93       	push	r29
    3ef6:	cf 93       	push	r28
    3ef8:	00 d0       	rcall	.+0      	; 0x3efa <LED_enuInit+0x6>
    3efa:	00 d0       	rcall	.+0      	; 0x3efc <LED_enuInit+0x8>
    3efc:	0f 92       	push	r0
    3efe:	cd b7       	in	r28, 0x3d	; 61
    3f00:	de b7       	in	r29, 0x3e	; 62
    3f02:	9c 83       	std	Y+4, r25	; 0x04
    3f04:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    3f06:	1a 82       	std	Y+2, r1	; 0x02

	if(Copy_pstrLedConfiguration != NULL)
    3f08:	8b 81       	ldd	r24, Y+3	; 0x03
    3f0a:	9c 81       	ldd	r25, Y+4	; 0x04
    3f0c:	00 97       	sbiw	r24, 0x00	; 0
    3f0e:	09 f4       	brne	.+2      	; 0x3f12 <LED_enuInit+0x1e>
    3f10:	24 c1       	rjmp	.+584    	; 0x415a <LED_enuInit+0x266>
	{
		u8 Local_u8Iterator = 0;
    3f12:	19 82       	std	Y+1, r1	; 0x01

		for(Local_u8Iterator = 0; Local_u8Iterator < LED_NUM; Local_u8Iterator++)
    3f14:	19 82       	std	Y+1, r1	; 0x01
    3f16:	1c c1       	rjmp	.+568    	; 0x4150 <LED_enuInit+0x25c>
		{
			Local_enuErrorState = DIO_enuSetPinDirection(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    3f18:	89 81       	ldd	r24, Y+1	; 0x01
    3f1a:	88 2f       	mov	r24, r24
    3f1c:	90 e0       	ldi	r25, 0x00	; 0
    3f1e:	9c 01       	movw	r18, r24
    3f20:	22 0f       	add	r18, r18
    3f22:	33 1f       	adc	r19, r19
    3f24:	22 0f       	add	r18, r18
    3f26:	33 1f       	adc	r19, r19
    3f28:	8b 81       	ldd	r24, Y+3	; 0x03
    3f2a:	9c 81       	ldd	r25, Y+4	; 0x04
    3f2c:	fc 01       	movw	r30, r24
    3f2e:	e2 0f       	add	r30, r18
    3f30:	f3 1f       	adc	r31, r19
    3f32:	40 81       	ld	r20, Z
    3f34:	89 81       	ldd	r24, Y+1	; 0x01
    3f36:	88 2f       	mov	r24, r24
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	9c 01       	movw	r18, r24
    3f3c:	22 0f       	add	r18, r18
    3f3e:	33 1f       	adc	r19, r19
    3f40:	22 0f       	add	r18, r18
    3f42:	33 1f       	adc	r19, r19
    3f44:	8b 81       	ldd	r24, Y+3	; 0x03
    3f46:	9c 81       	ldd	r25, Y+4	; 0x04
    3f48:	fc 01       	movw	r30, r24
    3f4a:	e2 0f       	add	r30, r18
    3f4c:	f3 1f       	adc	r31, r19
    3f4e:	91 81       	ldd	r25, Z+1	; 0x01
    3f50:	84 2f       	mov	r24, r20
    3f52:	69 2f       	mov	r22, r25
    3f54:	41 e0       	ldi	r20, 0x01	; 1
    3f56:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_enuSetPinDirection>
    3f5a:	8a 83       	std	Y+2, r24	; 0x02
														 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
														 DIO_u8OUTPUT
														);

			if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8Connection == LED_u8SINK)
    3f5c:	89 81       	ldd	r24, Y+1	; 0x01
    3f5e:	88 2f       	mov	r24, r24
    3f60:	90 e0       	ldi	r25, 0x00	; 0
    3f62:	9c 01       	movw	r18, r24
    3f64:	22 0f       	add	r18, r18
    3f66:	33 1f       	adc	r19, r19
    3f68:	22 0f       	add	r18, r18
    3f6a:	33 1f       	adc	r19, r19
    3f6c:	8b 81       	ldd	r24, Y+3	; 0x03
    3f6e:	9c 81       	ldd	r25, Y+4	; 0x04
    3f70:	fc 01       	movw	r30, r24
    3f72:	e2 0f       	add	r30, r18
    3f74:	f3 1f       	adc	r31, r19
    3f76:	82 81       	ldd	r24, Z+2	; 0x02
    3f78:	88 30       	cpi	r24, 0x08	; 8
    3f7a:	09 f0       	breq	.+2      	; 0x3f7e <LED_enuInit+0x8a>
    3f7c:	69 c0       	rjmp	.+210    	; 0x4050 <LED_enuInit+0x15c>
			{
				if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8ON)
    3f7e:	89 81       	ldd	r24, Y+1	; 0x01
    3f80:	88 2f       	mov	r24, r24
    3f82:	90 e0       	ldi	r25, 0x00	; 0
    3f84:	9c 01       	movw	r18, r24
    3f86:	22 0f       	add	r18, r18
    3f88:	33 1f       	adc	r19, r19
    3f8a:	22 0f       	add	r18, r18
    3f8c:	33 1f       	adc	r19, r19
    3f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f90:	9c 81       	ldd	r25, Y+4	; 0x04
    3f92:	fc 01       	movw	r30, r24
    3f94:	e2 0f       	add	r30, r18
    3f96:	f3 1f       	adc	r31, r19
    3f98:	83 81       	ldd	r24, Z+3	; 0x03
    3f9a:	8a 30       	cpi	r24, 0x0A	; 10
    3f9c:	19 f5       	brne	.+70     	; 0x3fe4 <LED_enuInit+0xf0>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    3f9e:	89 81       	ldd	r24, Y+1	; 0x01
    3fa0:	88 2f       	mov	r24, r24
    3fa2:	90 e0       	ldi	r25, 0x00	; 0
    3fa4:	9c 01       	movw	r18, r24
    3fa6:	22 0f       	add	r18, r18
    3fa8:	33 1f       	adc	r19, r19
    3faa:	22 0f       	add	r18, r18
    3fac:	33 1f       	adc	r19, r19
    3fae:	8b 81       	ldd	r24, Y+3	; 0x03
    3fb0:	9c 81       	ldd	r25, Y+4	; 0x04
    3fb2:	fc 01       	movw	r30, r24
    3fb4:	e2 0f       	add	r30, r18
    3fb6:	f3 1f       	adc	r31, r19
    3fb8:	40 81       	ld	r20, Z
    3fba:	89 81       	ldd	r24, Y+1	; 0x01
    3fbc:	88 2f       	mov	r24, r24
    3fbe:	90 e0       	ldi	r25, 0x00	; 0
    3fc0:	9c 01       	movw	r18, r24
    3fc2:	22 0f       	add	r18, r18
    3fc4:	33 1f       	adc	r19, r19
    3fc6:	22 0f       	add	r18, r18
    3fc8:	33 1f       	adc	r19, r19
    3fca:	8b 81       	ldd	r24, Y+3	; 0x03
    3fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    3fce:	fc 01       	movw	r30, r24
    3fd0:	e2 0f       	add	r30, r18
    3fd2:	f3 1f       	adc	r31, r19
    3fd4:	91 81       	ldd	r25, Z+1	; 0x01
    3fd6:	84 2f       	mov	r24, r20
    3fd8:	69 2f       	mov	r22, r25
    3fda:	40 e0       	ldi	r20, 0x00	; 0
    3fdc:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    3fe0:	8a 83       	std	Y+2, r24	; 0x02
    3fe2:	b3 c0       	rjmp	.+358    	; 0x414a <LED_enuInit+0x256>
							           	   	   	   	   	     Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8LOW);

				}
				else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8OFF)
    3fe4:	89 81       	ldd	r24, Y+1	; 0x01
    3fe6:	88 2f       	mov	r24, r24
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	9c 01       	movw	r18, r24
    3fec:	22 0f       	add	r18, r18
    3fee:	33 1f       	adc	r19, r19
    3ff0:	22 0f       	add	r18, r18
    3ff2:	33 1f       	adc	r19, r19
    3ff4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ff6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ff8:	fc 01       	movw	r30, r24
    3ffa:	e2 0f       	add	r30, r18
    3ffc:	f3 1f       	adc	r31, r19
    3ffe:	83 81       	ldd	r24, Z+3	; 0x03
    4000:	8b 30       	cpi	r24, 0x0B	; 11
    4002:	19 f5       	brne	.+70     	; 0x404a <LED_enuInit+0x156>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    4004:	89 81       	ldd	r24, Y+1	; 0x01
    4006:	88 2f       	mov	r24, r24
    4008:	90 e0       	ldi	r25, 0x00	; 0
    400a:	9c 01       	movw	r18, r24
    400c:	22 0f       	add	r18, r18
    400e:	33 1f       	adc	r19, r19
    4010:	22 0f       	add	r18, r18
    4012:	33 1f       	adc	r19, r19
    4014:	8b 81       	ldd	r24, Y+3	; 0x03
    4016:	9c 81       	ldd	r25, Y+4	; 0x04
    4018:	fc 01       	movw	r30, r24
    401a:	e2 0f       	add	r30, r18
    401c:	f3 1f       	adc	r31, r19
    401e:	40 81       	ld	r20, Z
    4020:	89 81       	ldd	r24, Y+1	; 0x01
    4022:	88 2f       	mov	r24, r24
    4024:	90 e0       	ldi	r25, 0x00	; 0
    4026:	9c 01       	movw	r18, r24
    4028:	22 0f       	add	r18, r18
    402a:	33 1f       	adc	r19, r19
    402c:	22 0f       	add	r18, r18
    402e:	33 1f       	adc	r19, r19
    4030:	8b 81       	ldd	r24, Y+3	; 0x03
    4032:	9c 81       	ldd	r25, Y+4	; 0x04
    4034:	fc 01       	movw	r30, r24
    4036:	e2 0f       	add	r30, r18
    4038:	f3 1f       	adc	r31, r19
    403a:	91 81       	ldd	r25, Z+1	; 0x01
    403c:	84 2f       	mov	r24, r20
    403e:	69 2f       	mov	r22, r25
    4040:	41 e0       	ldi	r20, 0x01	; 1
    4042:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    4046:	8a 83       	std	Y+2, r24	; 0x02
    4048:	80 c0       	rjmp	.+256    	; 0x414a <LED_enuInit+0x256>
							           	   	   	   	   	   	 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8HIGH);
				}
				else
				{
					return ES_OUT_OF_RANGE;
    404a:	83 e0       	ldi	r24, 0x03	; 3
    404c:	8d 83       	std	Y+5, r24	; 0x05
    404e:	89 c0       	rjmp	.+274    	; 0x4162 <LED_enuInit+0x26e>
				}
			}
			else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8Connection == LED_u8SOURCE)
    4050:	89 81       	ldd	r24, Y+1	; 0x01
    4052:	88 2f       	mov	r24, r24
    4054:	90 e0       	ldi	r25, 0x00	; 0
    4056:	9c 01       	movw	r18, r24
    4058:	22 0f       	add	r18, r18
    405a:	33 1f       	adc	r19, r19
    405c:	22 0f       	add	r18, r18
    405e:	33 1f       	adc	r19, r19
    4060:	8b 81       	ldd	r24, Y+3	; 0x03
    4062:	9c 81       	ldd	r25, Y+4	; 0x04
    4064:	fc 01       	movw	r30, r24
    4066:	e2 0f       	add	r30, r18
    4068:	f3 1f       	adc	r31, r19
    406a:	82 81       	ldd	r24, Z+2	; 0x02
    406c:	89 30       	cpi	r24, 0x09	; 9
    406e:	09 f0       	breq	.+2      	; 0x4072 <LED_enuInit+0x17e>
    4070:	69 c0       	rjmp	.+210    	; 0x4144 <LED_enuInit+0x250>
			{
				if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8ON)
    4072:	89 81       	ldd	r24, Y+1	; 0x01
    4074:	88 2f       	mov	r24, r24
    4076:	90 e0       	ldi	r25, 0x00	; 0
    4078:	9c 01       	movw	r18, r24
    407a:	22 0f       	add	r18, r18
    407c:	33 1f       	adc	r19, r19
    407e:	22 0f       	add	r18, r18
    4080:	33 1f       	adc	r19, r19
    4082:	8b 81       	ldd	r24, Y+3	; 0x03
    4084:	9c 81       	ldd	r25, Y+4	; 0x04
    4086:	fc 01       	movw	r30, r24
    4088:	e2 0f       	add	r30, r18
    408a:	f3 1f       	adc	r31, r19
    408c:	83 81       	ldd	r24, Z+3	; 0x03
    408e:	8a 30       	cpi	r24, 0x0A	; 10
    4090:	19 f5       	brne	.+70     	; 0x40d8 <LED_enuInit+0x1e4>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    4092:	89 81       	ldd	r24, Y+1	; 0x01
    4094:	88 2f       	mov	r24, r24
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	9c 01       	movw	r18, r24
    409a:	22 0f       	add	r18, r18
    409c:	33 1f       	adc	r19, r19
    409e:	22 0f       	add	r18, r18
    40a0:	33 1f       	adc	r19, r19
    40a2:	8b 81       	ldd	r24, Y+3	; 0x03
    40a4:	9c 81       	ldd	r25, Y+4	; 0x04
    40a6:	fc 01       	movw	r30, r24
    40a8:	e2 0f       	add	r30, r18
    40aa:	f3 1f       	adc	r31, r19
    40ac:	40 81       	ld	r20, Z
    40ae:	89 81       	ldd	r24, Y+1	; 0x01
    40b0:	88 2f       	mov	r24, r24
    40b2:	90 e0       	ldi	r25, 0x00	; 0
    40b4:	9c 01       	movw	r18, r24
    40b6:	22 0f       	add	r18, r18
    40b8:	33 1f       	adc	r19, r19
    40ba:	22 0f       	add	r18, r18
    40bc:	33 1f       	adc	r19, r19
    40be:	8b 81       	ldd	r24, Y+3	; 0x03
    40c0:	9c 81       	ldd	r25, Y+4	; 0x04
    40c2:	fc 01       	movw	r30, r24
    40c4:	e2 0f       	add	r30, r18
    40c6:	f3 1f       	adc	r31, r19
    40c8:	91 81       	ldd	r25, Z+1	; 0x01
    40ca:	84 2f       	mov	r24, r20
    40cc:	69 2f       	mov	r22, r25
    40ce:	41 e0       	ldi	r20, 0x01	; 1
    40d0:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    40d4:	8a 83       	std	Y+2, r24	; 0x02
    40d6:	39 c0       	rjmp	.+114    	; 0x414a <LED_enuInit+0x256>
							           	   	   	   	   	     Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8HIGH);

				}
				else if(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8InitState == LED_u8OFF)
    40d8:	89 81       	ldd	r24, Y+1	; 0x01
    40da:	88 2f       	mov	r24, r24
    40dc:	90 e0       	ldi	r25, 0x00	; 0
    40de:	9c 01       	movw	r18, r24
    40e0:	22 0f       	add	r18, r18
    40e2:	33 1f       	adc	r19, r19
    40e4:	22 0f       	add	r18, r18
    40e6:	33 1f       	adc	r19, r19
    40e8:	8b 81       	ldd	r24, Y+3	; 0x03
    40ea:	9c 81       	ldd	r25, Y+4	; 0x04
    40ec:	fc 01       	movw	r30, r24
    40ee:	e2 0f       	add	r30, r18
    40f0:	f3 1f       	adc	r31, r19
    40f2:	83 81       	ldd	r24, Z+3	; 0x03
    40f4:	8b 30       	cpi	r24, 0x0B	; 11
    40f6:	19 f5       	brne	.+70     	; 0x413e <LED_enuInit+0x24a>
				{
					Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PortID,
    40f8:	89 81       	ldd	r24, Y+1	; 0x01
    40fa:	88 2f       	mov	r24, r24
    40fc:	90 e0       	ldi	r25, 0x00	; 0
    40fe:	9c 01       	movw	r18, r24
    4100:	22 0f       	add	r18, r18
    4102:	33 1f       	adc	r19, r19
    4104:	22 0f       	add	r18, r18
    4106:	33 1f       	adc	r19, r19
    4108:	8b 81       	ldd	r24, Y+3	; 0x03
    410a:	9c 81       	ldd	r25, Y+4	; 0x04
    410c:	fc 01       	movw	r30, r24
    410e:	e2 0f       	add	r30, r18
    4110:	f3 1f       	adc	r31, r19
    4112:	40 81       	ld	r20, Z
    4114:	89 81       	ldd	r24, Y+1	; 0x01
    4116:	88 2f       	mov	r24, r24
    4118:	90 e0       	ldi	r25, 0x00	; 0
    411a:	9c 01       	movw	r18, r24
    411c:	22 0f       	add	r18, r18
    411e:	33 1f       	adc	r19, r19
    4120:	22 0f       	add	r18, r18
    4122:	33 1f       	adc	r19, r19
    4124:	8b 81       	ldd	r24, Y+3	; 0x03
    4126:	9c 81       	ldd	r25, Y+4	; 0x04
    4128:	fc 01       	movw	r30, r24
    412a:	e2 0f       	add	r30, r18
    412c:	f3 1f       	adc	r31, r19
    412e:	91 81       	ldd	r25, Z+1	; 0x01
    4130:	84 2f       	mov	r24, r20
    4132:	69 2f       	mov	r22, r25
    4134:	40 e0       	ldi	r20, 0x00	; 0
    4136:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    413a:	8a 83       	std	Y+2, r24	; 0x02
    413c:	06 c0       	rjmp	.+12     	; 0x414a <LED_enuInit+0x256>
							           	   	   	   	   	   	 Copy_pstrLedConfiguration[Local_u8Iterator].LED_u8PinID,
															 DIO_u8LOW);
				}
				else
				{
					return ES_OUT_OF_RANGE;
    413e:	83 e0       	ldi	r24, 0x03	; 3
    4140:	8d 83       	std	Y+5, r24	; 0x05
    4142:	0f c0       	rjmp	.+30     	; 0x4162 <LED_enuInit+0x26e>
				}
			}
			else
			{
				return ES_OUT_OF_RANGE;
    4144:	83 e0       	ldi	r24, 0x03	; 3
    4146:	8d 83       	std	Y+5, r24	; 0x05
    4148:	0c c0       	rjmp	.+24     	; 0x4162 <LED_enuInit+0x26e>

	if(Copy_pstrLedConfiguration != NULL)
	{
		u8 Local_u8Iterator = 0;

		for(Local_u8Iterator = 0; Local_u8Iterator < LED_NUM; Local_u8Iterator++)
    414a:	89 81       	ldd	r24, Y+1	; 0x01
    414c:	8f 5f       	subi	r24, 0xFF	; 255
    414e:	89 83       	std	Y+1, r24	; 0x01
    4150:	89 81       	ldd	r24, Y+1	; 0x01
    4152:	83 30       	cpi	r24, 0x03	; 3
    4154:	08 f4       	brcc	.+2      	; 0x4158 <LED_enuInit+0x264>
    4156:	e0 ce       	rjmp	.-576    	; 0x3f18 <LED_enuInit+0x24>
    4158:	02 c0       	rjmp	.+4      	; 0x415e <LED_enuInit+0x26a>
			}
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    415a:	82 e0       	ldi	r24, 0x02	; 2
    415c:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enuErrorState;
    415e:	8a 81       	ldd	r24, Y+2	; 0x02
    4160:	8d 83       	std	Y+5, r24	; 0x05
    4162:	8d 81       	ldd	r24, Y+5	; 0x05
}
    4164:	0f 90       	pop	r0
    4166:	0f 90       	pop	r0
    4168:	0f 90       	pop	r0
    416a:	0f 90       	pop	r0
    416c:	0f 90       	pop	r0
    416e:	cf 91       	pop	r28
    4170:	df 91       	pop	r29
    4172:	08 95       	ret

00004174 <LED_enuTurnON>:

ES_t LED_enuTurnON(LED_t * Copy_pstrLedID)
{
    4174:	df 93       	push	r29
    4176:	cf 93       	push	r28
    4178:	00 d0       	rcall	.+0      	; 0x417a <LED_enuTurnON+0x6>
    417a:	00 d0       	rcall	.+0      	; 0x417c <LED_enuTurnON+0x8>
    417c:	cd b7       	in	r28, 0x3d	; 61
    417e:	de b7       	in	r29, 0x3e	; 62
    4180:	9b 83       	std	Y+3, r25	; 0x03
    4182:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4184:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_pstrLedID != NULL)
    4186:	8a 81       	ldd	r24, Y+2	; 0x02
    4188:	9b 81       	ldd	r25, Y+3	; 0x03
    418a:	00 97       	sbiw	r24, 0x00	; 0
    418c:	41 f1       	breq	.+80     	; 0x41de <LED_enuTurnON+0x6a>
	{
		if(Copy_pstrLedID->LED_u8Connection == LED_u8SINK)
    418e:	ea 81       	ldd	r30, Y+2	; 0x02
    4190:	fb 81       	ldd	r31, Y+3	; 0x03
    4192:	82 81       	ldd	r24, Z+2	; 0x02
    4194:	88 30       	cpi	r24, 0x08	; 8
    4196:	61 f4       	brne	.+24     	; 0x41b0 <LED_enuTurnON+0x3c>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8LOW);
    4198:	ea 81       	ldd	r30, Y+2	; 0x02
    419a:	fb 81       	ldd	r31, Y+3	; 0x03
    419c:	80 81       	ld	r24, Z
    419e:	ea 81       	ldd	r30, Y+2	; 0x02
    41a0:	fb 81       	ldd	r31, Y+3	; 0x03
    41a2:	91 81       	ldd	r25, Z+1	; 0x01
    41a4:	69 2f       	mov	r22, r25
    41a6:	40 e0       	ldi	r20, 0x00	; 0
    41a8:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    41ac:	89 83       	std	Y+1, r24	; 0x01
    41ae:	14 c0       	rjmp	.+40     	; 0x41d8 <LED_enuTurnON+0x64>
		}
		else if(Copy_pstrLedID->LED_u8Connection == LED_u8SOURCE)
    41b0:	ea 81       	ldd	r30, Y+2	; 0x02
    41b2:	fb 81       	ldd	r31, Y+3	; 0x03
    41b4:	82 81       	ldd	r24, Z+2	; 0x02
    41b6:	89 30       	cpi	r24, 0x09	; 9
    41b8:	61 f4       	brne	.+24     	; 0x41d2 <LED_enuTurnON+0x5e>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8HIGH);
    41ba:	ea 81       	ldd	r30, Y+2	; 0x02
    41bc:	fb 81       	ldd	r31, Y+3	; 0x03
    41be:	80 81       	ld	r24, Z
    41c0:	ea 81       	ldd	r30, Y+2	; 0x02
    41c2:	fb 81       	ldd	r31, Y+3	; 0x03
    41c4:	91 81       	ldd	r25, Z+1	; 0x01
    41c6:	69 2f       	mov	r22, r25
    41c8:	41 e0       	ldi	r20, 0x01	; 1
    41ca:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    41ce:	89 83       	std	Y+1, r24	; 0x01
    41d0:	03 c0       	rjmp	.+6      	; 0x41d8 <LED_enuTurnON+0x64>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    41d2:	83 e0       	ldi	r24, 0x03	; 3
    41d4:	8c 83       	std	Y+4, r24	; 0x04
    41d6:	05 c0       	rjmp	.+10     	; 0x41e2 <LED_enuTurnON+0x6e>
	else
	{
		return ES_NULL_POINTER;
	}

	return Local_enuErrorState;
    41d8:	89 81       	ldd	r24, Y+1	; 0x01
    41da:	8c 83       	std	Y+4, r24	; 0x04
    41dc:	02 c0       	rjmp	.+4      	; 0x41e2 <LED_enuTurnON+0x6e>
			return ES_OUT_OF_RANGE;
		}
	}
	else
	{
		return ES_NULL_POINTER;
    41de:	82 e0       	ldi	r24, 0x02	; 2
    41e0:	8c 83       	std	Y+4, r24	; 0x04
    41e2:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return Local_enuErrorState;
}
    41e4:	0f 90       	pop	r0
    41e6:	0f 90       	pop	r0
    41e8:	0f 90       	pop	r0
    41ea:	0f 90       	pop	r0
    41ec:	cf 91       	pop	r28
    41ee:	df 91       	pop	r29
    41f0:	08 95       	ret

000041f2 <LED_enuTurnOFF>:

ES_t LED_enuTurnOFF(LED_t * Copy_pstrLedID)
{
    41f2:	df 93       	push	r29
    41f4:	cf 93       	push	r28
    41f6:	00 d0       	rcall	.+0      	; 0x41f8 <LED_enuTurnOFF+0x6>
    41f8:	00 d0       	rcall	.+0      	; 0x41fa <LED_enuTurnOFF+0x8>
    41fa:	cd b7       	in	r28, 0x3d	; 61
    41fc:	de b7       	in	r29, 0x3e	; 62
    41fe:	9b 83       	std	Y+3, r25	; 0x03
    4200:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4202:	19 82       	std	Y+1, r1	; 0x01


	if(Copy_pstrLedID != NULL)
    4204:	8a 81       	ldd	r24, Y+2	; 0x02
    4206:	9b 81       	ldd	r25, Y+3	; 0x03
    4208:	00 97       	sbiw	r24, 0x00	; 0
    420a:	41 f1       	breq	.+80     	; 0x425c <LED_enuTurnOFF+0x6a>
	{
		if(Copy_pstrLedID->LED_u8Connection == LED_u8SINK)
    420c:	ea 81       	ldd	r30, Y+2	; 0x02
    420e:	fb 81       	ldd	r31, Y+3	; 0x03
    4210:	82 81       	ldd	r24, Z+2	; 0x02
    4212:	88 30       	cpi	r24, 0x08	; 8
    4214:	61 f4       	brne	.+24     	; 0x422e <LED_enuTurnOFF+0x3c>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8HIGH);
    4216:	ea 81       	ldd	r30, Y+2	; 0x02
    4218:	fb 81       	ldd	r31, Y+3	; 0x03
    421a:	80 81       	ld	r24, Z
    421c:	ea 81       	ldd	r30, Y+2	; 0x02
    421e:	fb 81       	ldd	r31, Y+3	; 0x03
    4220:	91 81       	ldd	r25, Z+1	; 0x01
    4222:	69 2f       	mov	r22, r25
    4224:	41 e0       	ldi	r20, 0x01	; 1
    4226:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    422a:	89 83       	std	Y+1, r24	; 0x01
    422c:	14 c0       	rjmp	.+40     	; 0x4256 <LED_enuTurnOFF+0x64>
		}
		else if(Copy_pstrLedID->LED_u8Connection == LED_u8SOURCE)
    422e:	ea 81       	ldd	r30, Y+2	; 0x02
    4230:	fb 81       	ldd	r31, Y+3	; 0x03
    4232:	82 81       	ldd	r24, Z+2	; 0x02
    4234:	89 30       	cpi	r24, 0x09	; 9
    4236:	61 f4       	brne	.+24     	; 0x4250 <LED_enuTurnOFF+0x5e>
		{
			Local_enuErrorState = DIO_enuSetPinValue(Copy_pstrLedID->LED_u8PortID, Copy_pstrLedID->LED_u8PinID, DIO_u8LOW);
    4238:	ea 81       	ldd	r30, Y+2	; 0x02
    423a:	fb 81       	ldd	r31, Y+3	; 0x03
    423c:	80 81       	ld	r24, Z
    423e:	ea 81       	ldd	r30, Y+2	; 0x02
    4240:	fb 81       	ldd	r31, Y+3	; 0x03
    4242:	91 81       	ldd	r25, Z+1	; 0x01
    4244:	69 2f       	mov	r22, r25
    4246:	40 e0       	ldi	r20, 0x00	; 0
    4248:	0e 94 02 08 	call	0x1004	; 0x1004 <DIO_enuSetPinValue>
    424c:	89 83       	std	Y+1, r24	; 0x01
    424e:	03 c0       	rjmp	.+6      	; 0x4256 <LED_enuTurnOFF+0x64>
		}
		else
		{
			return ES_OUT_OF_RANGE;
    4250:	83 e0       	ldi	r24, 0x03	; 3
    4252:	8c 83       	std	Y+4, r24	; 0x04
    4254:	05 c0       	rjmp	.+10     	; 0x4260 <LED_enuTurnOFF+0x6e>
	else
	{
		return ES_NULL_POINTER;
	}

	return Local_enuErrorState;
    4256:	89 81       	ldd	r24, Y+1	; 0x01
    4258:	8c 83       	std	Y+4, r24	; 0x04
    425a:	02 c0       	rjmp	.+4      	; 0x4260 <LED_enuTurnOFF+0x6e>
			return ES_OUT_OF_RANGE;
		}
	}
	else
	{
		return ES_NULL_POINTER;
    425c:	82 e0       	ldi	r24, 0x02	; 2
    425e:	8c 83       	std	Y+4, r24	; 0x04
    4260:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return Local_enuErrorState;
}
    4262:	0f 90       	pop	r0
    4264:	0f 90       	pop	r0
    4266:	0f 90       	pop	r0
    4268:	0f 90       	pop	r0
    426a:	cf 91       	pop	r28
    426c:	df 91       	pop	r29
    426e:	08 95       	ret

00004270 <main>:
#include <util/delay.h>

extern SEG_t SSD_AstrSegConfig[SEG_NUM];

int main(void)
{
    4270:	df 93       	push	r29
    4272:	cf 93       	push	r28
    4274:	cd b7       	in	r28, 0x3d	; 61
    4276:	de b7       	in	r29, 0x3e	; 62
    4278:	6e 97       	sbiw	r28, 0x1e	; 30
    427a:	0f b6       	in	r0, 0x3f	; 63
    427c:	f8 94       	cli
    427e:	de bf       	out	0x3e, r29	; 62
    4280:	0f be       	out	0x3f, r0	; 63
    4282:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_u8CheckError = ES_NOK;
    4284:	1e 8e       	std	Y+30, r1	; 0x1e
	ES_t Local_u8CheckError_1 = ES_NOK;
    4286:	1d 8e       	std	Y+29, r1	; 0x1d
	DIO_enuInit();
    4288:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_enuInit>
	Local_u8CheckError = SSDLT_enuInit(SSD_AstrSegConfig);
    428c:	8b e7       	ldi	r24, 0x7B	; 123
    428e:	90 e0       	ldi	r25, 0x00	; 0
    4290:	0e 94 bc 0a 	call	0x1578	; 0x1578 <SSDLT_enuInit>
    4294:	8e 8f       	std	Y+30, r24	; 0x1e
	SSDLT_enuEnableDot(1);
    4296:	81 e0       	ldi	r24, 0x01	; 1
    4298:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <SSDLT_enuEnableDot>
				_delay_ms(500);
			}
		}
		}*/
		/** POV (96) On two SSD**/
		SSDLT_enuDisableCommon(0);
    429c:	80 e0       	ldi	r24, 0x00	; 0
    429e:	0e 94 51 14 	call	0x28a2	; 0x28a2 <SSDLT_enuDisableCommon>
		SSDLT_enuDisplayNum(0, 9);
    42a2:	80 e0       	ldi	r24, 0x00	; 0
    42a4:	69 e0       	ldi	r22, 0x09	; 9
    42a6:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <SSDLT_enuDisplayNum>
		SSDLT_enuEnableCommon(0);
    42aa:	80 e0       	ldi	r24, 0x00	; 0
    42ac:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <SSDLT_enuEnableCommon>
    42b0:	80 e0       	ldi	r24, 0x00	; 0
    42b2:	90 e0       	ldi	r25, 0x00	; 0
    42b4:	a0 e2       	ldi	r26, 0x20	; 32
    42b6:	b1 e4       	ldi	r27, 0x41	; 65
    42b8:	89 8f       	std	Y+25, r24	; 0x19
    42ba:	9a 8f       	std	Y+26, r25	; 0x1a
    42bc:	ab 8f       	std	Y+27, r26	; 0x1b
    42be:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42c0:	69 8d       	ldd	r22, Y+25	; 0x19
    42c2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    42c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    42c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    42c8:	20 e0       	ldi	r18, 0x00	; 0
    42ca:	30 e0       	ldi	r19, 0x00	; 0
    42cc:	4a e7       	ldi	r20, 0x7A	; 122
    42ce:	53 e4       	ldi	r21, 0x43	; 67
    42d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42d4:	dc 01       	movw	r26, r24
    42d6:	cb 01       	movw	r24, r22
    42d8:	8d 8b       	std	Y+21, r24	; 0x15
    42da:	9e 8b       	std	Y+22, r25	; 0x16
    42dc:	af 8b       	std	Y+23, r26	; 0x17
    42de:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    42e0:	6d 89       	ldd	r22, Y+21	; 0x15
    42e2:	7e 89       	ldd	r23, Y+22	; 0x16
    42e4:	8f 89       	ldd	r24, Y+23	; 0x17
    42e6:	98 8d       	ldd	r25, Y+24	; 0x18
    42e8:	20 e0       	ldi	r18, 0x00	; 0
    42ea:	30 e0       	ldi	r19, 0x00	; 0
    42ec:	40 e8       	ldi	r20, 0x80	; 128
    42ee:	5f e3       	ldi	r21, 0x3F	; 63
    42f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    42f4:	88 23       	and	r24, r24
    42f6:	2c f4       	brge	.+10     	; 0x4302 <main+0x92>
		__ticks = 1;
    42f8:	81 e0       	ldi	r24, 0x01	; 1
    42fa:	90 e0       	ldi	r25, 0x00	; 0
    42fc:	9c 8b       	std	Y+20, r25	; 0x14
    42fe:	8b 8b       	std	Y+19, r24	; 0x13
    4300:	3f c0       	rjmp	.+126    	; 0x4380 <main+0x110>
	else if (__tmp > 65535)
    4302:	6d 89       	ldd	r22, Y+21	; 0x15
    4304:	7e 89       	ldd	r23, Y+22	; 0x16
    4306:	8f 89       	ldd	r24, Y+23	; 0x17
    4308:	98 8d       	ldd	r25, Y+24	; 0x18
    430a:	20 e0       	ldi	r18, 0x00	; 0
    430c:	3f ef       	ldi	r19, 0xFF	; 255
    430e:	4f e7       	ldi	r20, 0x7F	; 127
    4310:	57 e4       	ldi	r21, 0x47	; 71
    4312:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4316:	18 16       	cp	r1, r24
    4318:	4c f5       	brge	.+82     	; 0x436c <main+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    431a:	69 8d       	ldd	r22, Y+25	; 0x19
    431c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    431e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4320:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4322:	20 e0       	ldi	r18, 0x00	; 0
    4324:	30 e0       	ldi	r19, 0x00	; 0
    4326:	40 e2       	ldi	r20, 0x20	; 32
    4328:	51 e4       	ldi	r21, 0x41	; 65
    432a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    432e:	dc 01       	movw	r26, r24
    4330:	cb 01       	movw	r24, r22
    4332:	bc 01       	movw	r22, r24
    4334:	cd 01       	movw	r24, r26
    4336:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    433a:	dc 01       	movw	r26, r24
    433c:	cb 01       	movw	r24, r22
    433e:	9c 8b       	std	Y+20, r25	; 0x14
    4340:	8b 8b       	std	Y+19, r24	; 0x13
    4342:	0f c0       	rjmp	.+30     	; 0x4362 <main+0xf2>
    4344:	89 e1       	ldi	r24, 0x19	; 25
    4346:	90 e0       	ldi	r25, 0x00	; 0
    4348:	9a 8b       	std	Y+18, r25	; 0x12
    434a:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    434c:	89 89       	ldd	r24, Y+17	; 0x11
    434e:	9a 89       	ldd	r25, Y+18	; 0x12
    4350:	01 97       	sbiw	r24, 0x01	; 1
    4352:	f1 f7       	brne	.-4      	; 0x4350 <main+0xe0>
    4354:	9a 8b       	std	Y+18, r25	; 0x12
    4356:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4358:	8b 89       	ldd	r24, Y+19	; 0x13
    435a:	9c 89       	ldd	r25, Y+20	; 0x14
    435c:	01 97       	sbiw	r24, 0x01	; 1
    435e:	9c 8b       	std	Y+20, r25	; 0x14
    4360:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4362:	8b 89       	ldd	r24, Y+19	; 0x13
    4364:	9c 89       	ldd	r25, Y+20	; 0x14
    4366:	00 97       	sbiw	r24, 0x00	; 0
    4368:	69 f7       	brne	.-38     	; 0x4344 <main+0xd4>
    436a:	14 c0       	rjmp	.+40     	; 0x4394 <main+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    436c:	6d 89       	ldd	r22, Y+21	; 0x15
    436e:	7e 89       	ldd	r23, Y+22	; 0x16
    4370:	8f 89       	ldd	r24, Y+23	; 0x17
    4372:	98 8d       	ldd	r25, Y+24	; 0x18
    4374:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4378:	dc 01       	movw	r26, r24
    437a:	cb 01       	movw	r24, r22
    437c:	9c 8b       	std	Y+20, r25	; 0x14
    437e:	8b 8b       	std	Y+19, r24	; 0x13
    4380:	8b 89       	ldd	r24, Y+19	; 0x13
    4382:	9c 89       	ldd	r25, Y+20	; 0x14
    4384:	98 8b       	std	Y+16, r25	; 0x10
    4386:	8f 87       	std	Y+15, r24	; 0x0f
    4388:	8f 85       	ldd	r24, Y+15	; 0x0f
    438a:	98 89       	ldd	r25, Y+16	; 0x10
    438c:	01 97       	sbiw	r24, 0x01	; 1
    438e:	f1 f7       	brne	.-4      	; 0x438c <main+0x11c>
    4390:	98 8b       	std	Y+16, r25	; 0x10
    4392:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10);

		SSDLT_enuDisableCommon(0);
    4394:	80 e0       	ldi	r24, 0x00	; 0
    4396:	0e 94 51 14 	call	0x28a2	; 0x28a2 <SSDLT_enuDisableCommon>
		SSDLT_enuDisplayNum(1, 6);
    439a:	81 e0       	ldi	r24, 0x01	; 1
    439c:	66 e0       	ldi	r22, 0x06	; 6
    439e:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <SSDLT_enuDisplayNum>
		SSDLT_enuEnableCommon(1);
    43a2:	81 e0       	ldi	r24, 0x01	; 1
    43a4:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <SSDLT_enuEnableCommon>
    43a8:	80 e0       	ldi	r24, 0x00	; 0
    43aa:	90 e0       	ldi	r25, 0x00	; 0
    43ac:	a0 e2       	ldi	r26, 0x20	; 32
    43ae:	b1 e4       	ldi	r27, 0x41	; 65
    43b0:	8b 87       	std	Y+11, r24	; 0x0b
    43b2:	9c 87       	std	Y+12, r25	; 0x0c
    43b4:	ad 87       	std	Y+13, r26	; 0x0d
    43b6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43b8:	6b 85       	ldd	r22, Y+11	; 0x0b
    43ba:	7c 85       	ldd	r23, Y+12	; 0x0c
    43bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    43be:	9e 85       	ldd	r25, Y+14	; 0x0e
    43c0:	20 e0       	ldi	r18, 0x00	; 0
    43c2:	30 e0       	ldi	r19, 0x00	; 0
    43c4:	4a e7       	ldi	r20, 0x7A	; 122
    43c6:	53 e4       	ldi	r21, 0x43	; 67
    43c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43cc:	dc 01       	movw	r26, r24
    43ce:	cb 01       	movw	r24, r22
    43d0:	8f 83       	std	Y+7, r24	; 0x07
    43d2:	98 87       	std	Y+8, r25	; 0x08
    43d4:	a9 87       	std	Y+9, r26	; 0x09
    43d6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    43d8:	6f 81       	ldd	r22, Y+7	; 0x07
    43da:	78 85       	ldd	r23, Y+8	; 0x08
    43dc:	89 85       	ldd	r24, Y+9	; 0x09
    43de:	9a 85       	ldd	r25, Y+10	; 0x0a
    43e0:	20 e0       	ldi	r18, 0x00	; 0
    43e2:	30 e0       	ldi	r19, 0x00	; 0
    43e4:	40 e8       	ldi	r20, 0x80	; 128
    43e6:	5f e3       	ldi	r21, 0x3F	; 63
    43e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43ec:	88 23       	and	r24, r24
    43ee:	2c f4       	brge	.+10     	; 0x43fa <main+0x18a>
		__ticks = 1;
    43f0:	81 e0       	ldi	r24, 0x01	; 1
    43f2:	90 e0       	ldi	r25, 0x00	; 0
    43f4:	9e 83       	std	Y+6, r25	; 0x06
    43f6:	8d 83       	std	Y+5, r24	; 0x05
    43f8:	3f c0       	rjmp	.+126    	; 0x4478 <main+0x208>
	else if (__tmp > 65535)
    43fa:	6f 81       	ldd	r22, Y+7	; 0x07
    43fc:	78 85       	ldd	r23, Y+8	; 0x08
    43fe:	89 85       	ldd	r24, Y+9	; 0x09
    4400:	9a 85       	ldd	r25, Y+10	; 0x0a
    4402:	20 e0       	ldi	r18, 0x00	; 0
    4404:	3f ef       	ldi	r19, 0xFF	; 255
    4406:	4f e7       	ldi	r20, 0x7F	; 127
    4408:	57 e4       	ldi	r21, 0x47	; 71
    440a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    440e:	18 16       	cp	r1, r24
    4410:	4c f5       	brge	.+82     	; 0x4464 <main+0x1f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4412:	6b 85       	ldd	r22, Y+11	; 0x0b
    4414:	7c 85       	ldd	r23, Y+12	; 0x0c
    4416:	8d 85       	ldd	r24, Y+13	; 0x0d
    4418:	9e 85       	ldd	r25, Y+14	; 0x0e
    441a:	20 e0       	ldi	r18, 0x00	; 0
    441c:	30 e0       	ldi	r19, 0x00	; 0
    441e:	40 e2       	ldi	r20, 0x20	; 32
    4420:	51 e4       	ldi	r21, 0x41	; 65
    4422:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4426:	dc 01       	movw	r26, r24
    4428:	cb 01       	movw	r24, r22
    442a:	bc 01       	movw	r22, r24
    442c:	cd 01       	movw	r24, r26
    442e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4432:	dc 01       	movw	r26, r24
    4434:	cb 01       	movw	r24, r22
    4436:	9e 83       	std	Y+6, r25	; 0x06
    4438:	8d 83       	std	Y+5, r24	; 0x05
    443a:	0f c0       	rjmp	.+30     	; 0x445a <main+0x1ea>
    443c:	89 e1       	ldi	r24, 0x19	; 25
    443e:	90 e0       	ldi	r25, 0x00	; 0
    4440:	9c 83       	std	Y+4, r25	; 0x04
    4442:	8b 83       	std	Y+3, r24	; 0x03
    4444:	8b 81       	ldd	r24, Y+3	; 0x03
    4446:	9c 81       	ldd	r25, Y+4	; 0x04
    4448:	01 97       	sbiw	r24, 0x01	; 1
    444a:	f1 f7       	brne	.-4      	; 0x4448 <main+0x1d8>
    444c:	9c 83       	std	Y+4, r25	; 0x04
    444e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4450:	8d 81       	ldd	r24, Y+5	; 0x05
    4452:	9e 81       	ldd	r25, Y+6	; 0x06
    4454:	01 97       	sbiw	r24, 0x01	; 1
    4456:	9e 83       	std	Y+6, r25	; 0x06
    4458:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    445a:	8d 81       	ldd	r24, Y+5	; 0x05
    445c:	9e 81       	ldd	r25, Y+6	; 0x06
    445e:	00 97       	sbiw	r24, 0x00	; 0
    4460:	69 f7       	brne	.-38     	; 0x443c <main+0x1cc>
    4462:	14 c0       	rjmp	.+40     	; 0x448c <main+0x21c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4464:	6f 81       	ldd	r22, Y+7	; 0x07
    4466:	78 85       	ldd	r23, Y+8	; 0x08
    4468:	89 85       	ldd	r24, Y+9	; 0x09
    446a:	9a 85       	ldd	r25, Y+10	; 0x0a
    446c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4470:	dc 01       	movw	r26, r24
    4472:	cb 01       	movw	r24, r22
    4474:	9e 83       	std	Y+6, r25	; 0x06
    4476:	8d 83       	std	Y+5, r24	; 0x05
    4478:	8d 81       	ldd	r24, Y+5	; 0x05
    447a:	9e 81       	ldd	r25, Y+6	; 0x06
    447c:	9a 83       	std	Y+2, r25	; 0x02
    447e:	89 83       	std	Y+1, r24	; 0x01
    4480:	89 81       	ldd	r24, Y+1	; 0x01
    4482:	9a 81       	ldd	r25, Y+2	; 0x02
    4484:	01 97       	sbiw	r24, 0x01	; 1
    4486:	f1 f7       	brne	.-4      	; 0x4484 <main+0x214>
    4488:	9a 83       	std	Y+2, r25	; 0x02
    448a:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(10);
		SSDLT_enuDisableCommon(1);
    448c:	81 e0       	ldi	r24, 0x01	; 1
    448e:	0e 94 51 14 	call	0x28a2	; 0x28a2 <SSDLT_enuDisableCommon>
    4492:	04 cf       	rjmp	.-504    	; 0x429c <main+0x2c>

00004494 <__prologue_saves__>:
    4494:	2f 92       	push	r2
    4496:	3f 92       	push	r3
    4498:	4f 92       	push	r4
    449a:	5f 92       	push	r5
    449c:	6f 92       	push	r6
    449e:	7f 92       	push	r7
    44a0:	8f 92       	push	r8
    44a2:	9f 92       	push	r9
    44a4:	af 92       	push	r10
    44a6:	bf 92       	push	r11
    44a8:	cf 92       	push	r12
    44aa:	df 92       	push	r13
    44ac:	ef 92       	push	r14
    44ae:	ff 92       	push	r15
    44b0:	0f 93       	push	r16
    44b2:	1f 93       	push	r17
    44b4:	cf 93       	push	r28
    44b6:	df 93       	push	r29
    44b8:	cd b7       	in	r28, 0x3d	; 61
    44ba:	de b7       	in	r29, 0x3e	; 62
    44bc:	ca 1b       	sub	r28, r26
    44be:	db 0b       	sbc	r29, r27
    44c0:	0f b6       	in	r0, 0x3f	; 63
    44c2:	f8 94       	cli
    44c4:	de bf       	out	0x3e, r29	; 62
    44c6:	0f be       	out	0x3f, r0	; 63
    44c8:	cd bf       	out	0x3d, r28	; 61
    44ca:	09 94       	ijmp

000044cc <__epilogue_restores__>:
    44cc:	2a 88       	ldd	r2, Y+18	; 0x12
    44ce:	39 88       	ldd	r3, Y+17	; 0x11
    44d0:	48 88       	ldd	r4, Y+16	; 0x10
    44d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    44d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    44d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    44d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    44da:	9b 84       	ldd	r9, Y+11	; 0x0b
    44dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    44de:	b9 84       	ldd	r11, Y+9	; 0x09
    44e0:	c8 84       	ldd	r12, Y+8	; 0x08
    44e2:	df 80       	ldd	r13, Y+7	; 0x07
    44e4:	ee 80       	ldd	r14, Y+6	; 0x06
    44e6:	fd 80       	ldd	r15, Y+5	; 0x05
    44e8:	0c 81       	ldd	r16, Y+4	; 0x04
    44ea:	1b 81       	ldd	r17, Y+3	; 0x03
    44ec:	aa 81       	ldd	r26, Y+2	; 0x02
    44ee:	b9 81       	ldd	r27, Y+1	; 0x01
    44f0:	ce 0f       	add	r28, r30
    44f2:	d1 1d       	adc	r29, r1
    44f4:	0f b6       	in	r0, 0x3f	; 63
    44f6:	f8 94       	cli
    44f8:	de bf       	out	0x3e, r29	; 62
    44fa:	0f be       	out	0x3f, r0	; 63
    44fc:	cd bf       	out	0x3d, r28	; 61
    44fe:	ed 01       	movw	r28, r26
    4500:	08 95       	ret

00004502 <_exit>:
    4502:	f8 94       	cli

00004504 <__stop_program>:
    4504:	ff cf       	rjmp	.-2      	; 0x4504 <__stop_program>
